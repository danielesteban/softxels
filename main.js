!function(){"use strict";
/**
	 * @license
	 * Copyright 2010-2021 Three.js Authors
	 * SPDX-License-Identifier: MIT
	 */const t=100,e=1e3,i=1001,n=1002,A=1003,r=1006,s=1008,a=1009,o=1012,l=1014,c=1015,h=1016,u=1020,d=1022,g=1023,p=1026,m=1027,f=2300,v=2301,y=2302,C=2400,I=2401,x=2402,w=2500,E=3e3,M=3001,_=7680,B=35044,b=35048,S="300 es";class Q{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const T=[];for(let t=0;t<256;t++)T[t]=(t<16?"0":"")+t.toString(16);const D=Math.PI/180,L=180/Math.PI;function R(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(T[255&t]+T[t>>8&255]+T[t>>16&255]+T[t>>24&255]+"-"+T[255&e]+T[e>>8&255]+"-"+T[e>>16&15|64]+T[e>>24&255]+"-"+T[63&i|128]+T[i>>8&255]+"-"+T[i>>16&255]+T[i>>24&255]+T[255&n]+T[n>>8&255]+T[n>>16&255]+T[n>>24&255]).toUpperCase()}function N(t,e,i){return Math.max(e,Math.min(i,t))}function P(t,e,i){return(1-i)*t+i*e}function k(t){return 0==(t&t-1)&&0!==t}function G(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}class F{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),A=this.x-t.x,r=this.y-t.y;return this.x=A*i-r*n+t.x,this.y=A*n+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}F.prototype.isVector2=!0;class U{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,i,n,A,r,s,a,o){const l=this.elements;return l[0]=t,l[1]=n,l[2]=s,l[3]=e,l[4]=A,l[5]=a,l[6]=i,l[7]=r,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,A=this.elements,r=i[0],s=i[3],a=i[6],o=i[1],l=i[4],c=i[7],h=i[2],u=i[5],d=i[8],g=n[0],p=n[3],m=n[6],f=n[1],v=n[4],y=n[7],C=n[2],I=n[5],x=n[8];return A[0]=r*g+s*f+a*C,A[3]=r*p+s*v+a*I,A[6]=r*m+s*y+a*x,A[1]=o*g+l*f+c*C,A[4]=o*p+l*v+c*I,A[7]=o*m+l*y+c*x,A[2]=h*g+u*f+d*C,A[5]=h*p+u*v+d*I,A[8]=h*m+u*y+d*x,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],A=t[3],r=t[4],s=t[5],a=t[6],o=t[7],l=t[8];return e*r*l-e*s*o-i*A*l+i*s*a+n*A*o-n*r*a}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],A=t[3],r=t[4],s=t[5],a=t[6],o=t[7],l=t[8],c=l*r-s*o,h=s*a-l*A,u=o*A-r*a,d=e*c+i*h+n*u;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const g=1/d;return t[0]=c*g,t[1]=(n*o-l*i)*g,t[2]=(s*i-n*r)*g,t[3]=h*g,t[4]=(l*e-n*a)*g,t[5]=(n*A-s*e)*g,t[6]=u*g,t[7]=(i*a-o*e)*g,t[8]=(r*e-i*A)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,A,r,s){const a=Math.cos(A),o=Math.sin(A);return this.set(i*a,i*o,-i*(a*r+o*s)+r+t,-n*o,n*a,-n*(-o*r+a*s)+s+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),n=this.elements,A=n[0],r=n[3],s=n[6],a=n[1],o=n[4],l=n[7];return n[0]=e*A+i*a,n[3]=e*r+i*o,n[6]=e*s+i*l,n[1]=-i*A+e*a,n[4]=-i*r+e*o,n[7]=-i*s+e*l,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let z;U.prototype.isMatrix3=!0;class H{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===z&&(z=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),z.width=t.width,z.height=t.height;const i=z.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=z}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let O=0;class W extends Q{constructor(t=W.DEFAULT_IMAGE,e=W.DEFAULT_MAPPING,i=1001,n=1001,A=1006,r=1008,s=1023,a=1009,o=1,l=3e3){super(),Object.defineProperty(this,"id",{value:O++}),this.uuid=R(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=n,this.magFilter=A,this.minFilter=r,this.anisotropy=o,this.format=s,this.internalFormat=null,this.type=a,this.offset=new F(0,0),this.repeat=new F(1,1),this.center=new F(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new U,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=R()),!e&&void 0===t.images[n.uuid]){let e;if(Array.isArray(n)){e=[];for(let t=0,i=n.length;t<i;t++)n[t].isDataTexture?e.push(V(n[t].image)):e.push(V(n[t]))}else e=V(n);t.images[n.uuid]={uuid:n.uuid,url:e}}i.image=n.uuid}return e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case e:t.x=t.x-Math.floor(t.x);break;case i:t.x=t.x<0?0:1;break;case n:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case e:t.y=t.y-Math.floor(t.y);break;case i:t.y=t.y<0?0:1;break;case n:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function V(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?H.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}W.DEFAULT_IMAGE=void 0,W.DEFAULT_MAPPING=300,W.prototype.isTexture=!0;class J{constructor(t=0,e=0,i=0,n=1){this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,A=this.w,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n+r[12]*A,this.y=r[1]*e+r[5]*i+r[9]*n+r[13]*A,this.z=r[2]*e+r[6]*i+r[10]*n+r[14]*A,this.w=r[3]*e+r[7]*i+r[11]*n+r[15]*A,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,A;const r=.01,s=.1,a=t.elements,o=a[0],l=a[4],c=a[8],h=a[1],u=a[5],d=a[9],g=a[2],p=a[6],m=a[10];if(Math.abs(l-h)<r&&Math.abs(c-g)<r&&Math.abs(d-p)<r){if(Math.abs(l+h)<s&&Math.abs(c+g)<s&&Math.abs(d+p)<s&&Math.abs(o+u+m-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,a=(u+1)/2,f=(m+1)/2,v=(l+h)/4,y=(c+g)/4,C=(d+p)/4;return t>a&&t>f?t<r?(i=0,n=.707106781,A=.707106781):(i=Math.sqrt(t),n=v/i,A=y/i):a>f?a<r?(i=.707106781,n=0,A=.707106781):(n=Math.sqrt(a),i=v/n,A=C/n):f<r?(i=.707106781,n=.707106781,A=0):(A=Math.sqrt(f),i=y/A,n=C/A),this.set(i,n,A,e),this}let f=Math.sqrt((p-d)*(p-d)+(c-g)*(c-g)+(h-l)*(h-l));return Math.abs(f)<.001&&(f=1),this.x=(p-d)/f,this.y=(c-g)/f,this.z=(h-l)/f,this.w=Math.acos((o+u+m-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}J.prototype.isVector4=!0;class Y extends Q{constructor(t,e,i={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new J(0,0,t,e),this.scissorTest=!1,this.viewport=new J(0,0,t,e),this.texture=new W(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:r,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,i=1){this.width===t&&this.height===e&&this.depth===i||(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Y.prototype.isWebGLRenderTarget=!0;(class extends Y{constructor(t,e,i){super(t,e);const n=this.texture;this.texture=[];for(let t=0;t<i;t++)this.texture[t]=n.clone()}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let n=0,A=this.texture.length;n<A;n++)this.texture[n].image.width=t,this.texture[n].image.height=e,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,i=t.texture.length;e<i;e++)this.texture[e]=t.texture[e].clone();return this}}).prototype.isWebGLMultipleRenderTargets=!0;class q extends Y{constructor(t,e,i){super(t,e,i),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}q.prototype.isWebGLMultisampleRenderTarget=!0;class X{constructor(t=0,e=0,i=0,n=1){this._x=t,this._y=e,this._z=i,this._w=n}static slerp(t,e,i,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(t,e,n)}static slerpFlat(t,e,i,n,A,r,s){let a=i[n+0],o=i[n+1],l=i[n+2],c=i[n+3];const h=A[r+0],u=A[r+1],d=A[r+2],g=A[r+3];if(0===s)return t[e+0]=a,t[e+1]=o,t[e+2]=l,void(t[e+3]=c);if(1===s)return t[e+0]=h,t[e+1]=u,t[e+2]=d,void(t[e+3]=g);if(c!==g||a!==h||o!==u||l!==d){let t=1-s;const e=a*h+o*u+l*d+c*g,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const A=Math.sqrt(n),r=Math.atan2(A,e*i);t=Math.sin(t*r)/A,s=Math.sin(s*r)/A}const A=s*i;if(a=a*t+h*A,o=o*t+u*A,l=l*t+d*A,c=c*t+g*A,t===1-s){const t=1/Math.sqrt(a*a+o*o+l*l+c*c);a*=t,o*=t,l*=t,c*=t}}t[e]=a,t[e+1]=o,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,n,A,r){const s=i[n],a=i[n+1],o=i[n+2],l=i[n+3],c=A[r],h=A[r+1],u=A[r+2],d=A[r+3];return t[e]=s*d+l*c+a*u-o*h,t[e+1]=a*d+l*h+o*c-s*u,t[e+2]=o*d+l*u+s*h-a*c,t[e+3]=l*d-s*c-a*h-o*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,n=t._y,A=t._z,r=t._order,s=Math.cos,a=Math.sin,o=s(i/2),l=s(n/2),c=s(A/2),h=a(i/2),u=a(n/2),d=a(A/2);switch(r){case"XYZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"YXZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"ZXY":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"ZYX":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"YZX":this._x=h*l*c+o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c-h*u*d;break;case"XZY":this._x=h*l*c-o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],A=e[8],r=e[1],s=e[5],a=e[9],o=e[2],l=e[6],c=e[10],h=i+s+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(l-a)*t,this._y=(A-o)*t,this._z=(r-n)*t}else if(i>s&&i>c){const t=2*Math.sqrt(1+i-s-c);this._w=(l-a)/t,this._x=.25*t,this._y=(n+r)/t,this._z=(A+o)/t}else if(s>c){const t=2*Math.sqrt(1+s-i-c);this._w=(A-o)/t,this._x=(n+r)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+c-i-s);this._w=(r-n)/t,this._x=(A+o)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(N(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,A=t._z,r=t._w,s=e._x,a=e._y,o=e._z,l=e._w;return this._x=i*l+r*s+n*o-A*a,this._y=n*l+r*a+A*s-i*o,this._z=A*l+r*o+i*a-n*s,this._w=r*l-i*s-n*a-A*o,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,A=this._z,r=this._w;let s=r*t._w+i*t._x+n*t._y+A*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=r,this._x=i,this._y=n,this._z=A,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*A+e*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,s),c=Math.sin((1-e)*l)/o,h=Math.sin(e*l)/o;return this._w=r*c+this._w*h,this._x=i*c+this._x*h,this._y=n*c+this._y*h,this._z=A*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,i){this.copy(t).slerp(e,i)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}X.prototype.isQuaternion=!0;class K{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(j.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(j.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,A=t.elements;return this.x=A[0]*e+A[3]*i+A[6]*n,this.y=A[1]*e+A[4]*i+A[7]*n,this.z=A[2]*e+A[5]*i+A[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,A=t.elements,r=1/(A[3]*e+A[7]*i+A[11]*n+A[15]);return this.x=(A[0]*e+A[4]*i+A[8]*n+A[12])*r,this.y=(A[1]*e+A[5]*i+A[9]*n+A[13])*r,this.z=(A[2]*e+A[6]*i+A[10]*n+A[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,A=t.x,r=t.y,s=t.z,a=t.w,o=a*e+r*n-s*i,l=a*i+s*e-A*n,c=a*n+A*i-r*e,h=-A*e-r*i-s*n;return this.x=o*a+h*-A+l*-s-c*-r,this.y=l*a+h*-r+c*-A-o*-s,this.z=c*a+h*-s+o*-r-l*-A,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,A=t.elements;return this.x=A[0]*e+A[4]*i+A[8]*n,this.y=A[1]*e+A[5]*i+A[9]*n,this.z=A[2]*e+A[6]*i+A[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,A=t.z,r=e.x,s=e.y,a=e.z;return this.x=n*a-A*s,this.y=A*r-i*a,this.z=i*s-n*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Z.copy(this).projectOnVector(t),this.sub(Z)}reflect(t){return this.sub(Z.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(N(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}K.prototype.isVector3=!0;const Z=new K,j=new X;class ${constructor(t=new K(1/0,1/0,1/0),e=new K(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,n=1/0,A=-1/0,r=-1/0,s=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],l=t[a+1],c=t[a+2];o<e&&(e=o),l<i&&(i=l),c<n&&(n=c),o>A&&(A=o),l>r&&(r=l),c>s&&(s=c)}return this.min.set(e,i,n),this.max.set(A,r,s),this}setFromBufferAttribute(t){let e=1/0,i=1/0,n=1/0,A=-1/0,r=-1/0,s=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),l=t.getY(a),c=t.getZ(a);o<e&&(e=o),l<i&&(i=l),c<n&&(n=c),o>A&&(A=o),l>r&&(r=l),c>s&&(s=c)}return this.min.set(e,i,n),this.max.set(A,r,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=et.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),it.copy(e.boundingBox),it.applyMatrix4(t.matrixWorld),this.union(it));const i=t.children;for(let t=0,e=i.length;t<e;t++)this.expandByObject(i[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,et),et.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(lt),ct.subVectors(this.max,lt),nt.subVectors(t.a,lt),At.subVectors(t.b,lt),rt.subVectors(t.c,lt),st.subVectors(At,nt),at.subVectors(rt,At),ot.subVectors(nt,rt);let e=[0,-st.z,st.y,0,-at.z,at.y,0,-ot.z,ot.y,st.z,0,-st.x,at.z,0,-at.x,ot.z,0,-ot.x,-st.y,st.x,0,-at.y,at.x,0,-ot.y,ot.x,0];return!!dt(e,nt,At,rt,ct)&&(e=[1,0,0,0,1,0,0,0,1],!!dt(e,nt,At,rt,ct)&&(ht.crossVectors(st,at),e=[ht.x,ht.y,ht.z],dt(e,nt,At,rt,ct)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return et.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(et).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(tt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),tt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),tt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),tt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),tt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),tt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),tt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),tt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(tt)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}$.prototype.isBox3=!0;const tt=[new K,new K,new K,new K,new K,new K,new K,new K],et=new K,it=new $,nt=new K,At=new K,rt=new K,st=new K,at=new K,ot=new K,lt=new K,ct=new K,ht=new K,ut=new K;function dt(t,e,i,n,A){for(let r=0,s=t.length-3;r<=s;r+=3){ut.fromArray(t,r);const s=A.x*Math.abs(ut.x)+A.y*Math.abs(ut.y)+A.z*Math.abs(ut.z),a=e.dot(ut),o=i.dot(ut),l=n.dot(ut);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>s)return!1}return!0}const gt=new $,pt=new K,mt=new K,ft=new K;class vt{constructor(t=new K,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):gt.setFromPoints(t).getCenter(i);let n=0;for(let e=0,A=t.length;e<A;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){ft.subVectors(t,this.center);const e=ft.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.add(ft.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return mt.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(pt.copy(t.center).add(mt)),this.expandByPoint(pt.copy(t.center).sub(mt)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const yt=new K,Ct=new K,It=new K,xt=new K,wt=new K,Et=new K,Mt=new K;class _t{constructor(t=new K,e=new K(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,yt)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=yt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(yt.copy(this.direction).multiplyScalar(e).add(this.origin),yt.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Ct.copy(t).add(e).multiplyScalar(.5),It.copy(e).sub(t).normalize(),xt.copy(this.origin).sub(Ct);const A=.5*t.distanceTo(e),r=-this.direction.dot(It),s=xt.dot(this.direction),a=-xt.dot(It),o=xt.lengthSq(),l=Math.abs(1-r*r);let c,h,u,d;if(l>0)if(c=r*a-s,h=r*s-a,d=A*l,c>=0)if(h>=-d)if(h<=d){const t=1/l;c*=t,h*=t,u=c*(c+r*h+2*s)+h*(r*c+h+2*a)+o}else h=A,c=Math.max(0,-(r*h+s)),u=-c*c+h*(h+2*a)+o;else h=-A,c=Math.max(0,-(r*h+s)),u=-c*c+h*(h+2*a)+o;else h<=-d?(c=Math.max(0,-(-r*A+s)),h=c>0?-A:Math.min(Math.max(-A,-a),A),u=-c*c+h*(h+2*a)+o):h<=d?(c=0,h=Math.min(Math.max(-A,-a),A),u=h*(h+2*a)+o):(c=Math.max(0,-(r*A+s)),h=c>0?A:Math.min(Math.max(-A,-a),A),u=-c*c+h*(h+2*a)+o);else h=r>0?-A:A,c=Math.max(0,-(r*h+s)),u=-c*c+h*(h+2*a)+o;return i&&i.copy(this.direction).multiplyScalar(c).add(this.origin),n&&n.copy(It).multiplyScalar(h).add(Ct),u}intersectSphere(t,e){yt.subVectors(t.center,this.origin);const i=yt.dot(this.direction),n=yt.dot(yt)-i*i,A=t.radius*t.radius;if(n>A)return null;const r=Math.sqrt(A-n),s=i-r,a=i+r;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,A,r,s,a;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,h=this.origin;return o>=0?(i=(t.min.x-h.x)*o,n=(t.max.x-h.x)*o):(i=(t.max.x-h.x)*o,n=(t.min.x-h.x)*o),l>=0?(A=(t.min.y-h.y)*l,r=(t.max.y-h.y)*l):(A=(t.max.y-h.y)*l,r=(t.min.y-h.y)*l),i>r||A>n?null:((A>i||i!=i)&&(i=A),(r<n||n!=n)&&(n=r),c>=0?(s=(t.min.z-h.z)*c,a=(t.max.z-h.z)*c):(s=(t.max.z-h.z)*c,a=(t.min.z-h.z)*c),i>a||s>n?null:((s>i||i!=i)&&(i=s),(a<n||n!=n)&&(n=a),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,yt)}intersectTriangle(t,e,i,n,A){wt.subVectors(e,t),Et.subVectors(i,t),Mt.crossVectors(wt,Et);let r,s=this.direction.dot(Mt);if(s>0){if(n)return null;r=1}else{if(!(s<0))return null;r=-1,s=-s}xt.subVectors(this.origin,t);const a=r*this.direction.dot(Et.crossVectors(xt,Et));if(a<0)return null;const o=r*this.direction.dot(wt.cross(xt));if(o<0)return null;if(a+o>s)return null;const l=-r*xt.dot(Mt);return l<0?null:this.at(l/s,A)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Bt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,i,n,A,r,s,a,o,l,c,h,u,d,g,p){const m=this.elements;return m[0]=t,m[4]=e,m[8]=i,m[12]=n,m[1]=A,m[5]=r,m[9]=s,m[13]=a,m[2]=o,m[6]=l,m[10]=c,m[14]=h,m[3]=u,m[7]=d,m[11]=g,m[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Bt).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/bt.setFromMatrixColumn(t,0).length(),A=1/bt.setFromMatrixColumn(t,1).length(),r=1/bt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*A,e[5]=i[5]*A,e[6]=i[6]*A,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,i=t.x,n=t.y,A=t.z,r=Math.cos(i),s=Math.sin(i),a=Math.cos(n),o=Math.sin(n),l=Math.cos(A),c=Math.sin(A);if("XYZ"===t.order){const t=r*l,i=r*c,n=s*l,A=s*c;e[0]=a*l,e[4]=-a*c,e[8]=o,e[1]=i+n*o,e[5]=t-A*o,e[9]=-s*a,e[2]=A-t*o,e[6]=n+i*o,e[10]=r*a}else if("YXZ"===t.order){const t=a*l,i=a*c,n=o*l,A=o*c;e[0]=t+A*s,e[4]=n*s-i,e[8]=r*o,e[1]=r*c,e[5]=r*l,e[9]=-s,e[2]=i*s-n,e[6]=A+t*s,e[10]=r*a}else if("ZXY"===t.order){const t=a*l,i=a*c,n=o*l,A=o*c;e[0]=t-A*s,e[4]=-r*c,e[8]=n+i*s,e[1]=i+n*s,e[5]=r*l,e[9]=A-t*s,e[2]=-r*o,e[6]=s,e[10]=r*a}else if("ZYX"===t.order){const t=r*l,i=r*c,n=s*l,A=s*c;e[0]=a*l,e[4]=n*o-i,e[8]=t*o+A,e[1]=a*c,e[5]=A*o+t,e[9]=i*o-n,e[2]=-o,e[6]=s*a,e[10]=r*a}else if("YZX"===t.order){const t=r*a,i=r*o,n=s*a,A=s*o;e[0]=a*l,e[4]=A-t*c,e[8]=n*c+i,e[1]=c,e[5]=r*l,e[9]=-s*l,e[2]=-o*l,e[6]=i*c+n,e[10]=t-A*c}else if("XZY"===t.order){const t=r*a,i=r*o,n=s*a,A=s*o;e[0]=a*l,e[4]=-c,e[8]=o*l,e[1]=t*c+A,e[5]=r*l,e[9]=i*c-n,e[2]=n*c-i,e[6]=s*l,e[10]=A*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Qt,t,Tt)}lookAt(t,e,i){const n=this.elements;return Rt.subVectors(t,e),0===Rt.lengthSq()&&(Rt.z=1),Rt.normalize(),Dt.crossVectors(i,Rt),0===Dt.lengthSq()&&(1===Math.abs(i.z)?Rt.x+=1e-4:Rt.z+=1e-4,Rt.normalize(),Dt.crossVectors(i,Rt)),Dt.normalize(),Lt.crossVectors(Rt,Dt),n[0]=Dt.x,n[4]=Lt.x,n[8]=Rt.x,n[1]=Dt.y,n[5]=Lt.y,n[9]=Rt.y,n[2]=Dt.z,n[6]=Lt.z,n[10]=Rt.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,A=this.elements,r=i[0],s=i[4],a=i[8],o=i[12],l=i[1],c=i[5],h=i[9],u=i[13],d=i[2],g=i[6],p=i[10],m=i[14],f=i[3],v=i[7],y=i[11],C=i[15],I=n[0],x=n[4],w=n[8],E=n[12],M=n[1],_=n[5],B=n[9],b=n[13],S=n[2],Q=n[6],T=n[10],D=n[14],L=n[3],R=n[7],N=n[11],P=n[15];return A[0]=r*I+s*M+a*S+o*L,A[4]=r*x+s*_+a*Q+o*R,A[8]=r*w+s*B+a*T+o*N,A[12]=r*E+s*b+a*D+o*P,A[1]=l*I+c*M+h*S+u*L,A[5]=l*x+c*_+h*Q+u*R,A[9]=l*w+c*B+h*T+u*N,A[13]=l*E+c*b+h*D+u*P,A[2]=d*I+g*M+p*S+m*L,A[6]=d*x+g*_+p*Q+m*R,A[10]=d*w+g*B+p*T+m*N,A[14]=d*E+g*b+p*D+m*P,A[3]=f*I+v*M+y*S+C*L,A[7]=f*x+v*_+y*Q+C*R,A[11]=f*w+v*B+y*T+C*N,A[15]=f*E+v*b+y*D+C*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],A=t[12],r=t[1],s=t[5],a=t[9],o=t[13],l=t[2],c=t[6],h=t[10],u=t[14];return t[3]*(+A*a*c-n*o*c-A*s*h+i*o*h+n*s*u-i*a*u)+t[7]*(+e*a*u-e*o*h+A*r*h-n*r*u+n*o*l-A*a*l)+t[11]*(+e*o*c-e*s*u-A*r*c+i*r*u+A*s*l-i*o*l)+t[15]*(-n*s*l-e*a*c+e*s*h+n*r*c-i*r*h+i*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],A=t[3],r=t[4],s=t[5],a=t[6],o=t[7],l=t[8],c=t[9],h=t[10],u=t[11],d=t[12],g=t[13],p=t[14],m=t[15],f=c*p*o-g*h*o+g*a*u-s*p*u-c*a*m+s*h*m,v=d*h*o-l*p*o-d*a*u+r*p*u+l*a*m-r*h*m,y=l*g*o-d*c*o+d*s*u-r*g*u-l*s*m+r*c*m,C=d*c*a-l*g*a-d*s*h+r*g*h+l*s*p-r*c*p,I=e*f+i*v+n*y+A*C;if(0===I)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const x=1/I;return t[0]=f*x,t[1]=(g*h*A-c*p*A-g*n*u+i*p*u+c*n*m-i*h*m)*x,t[2]=(s*p*A-g*a*A+g*n*o-i*p*o-s*n*m+i*a*m)*x,t[3]=(c*a*A-s*h*A-c*n*o+i*h*o+s*n*u-i*a*u)*x,t[4]=v*x,t[5]=(l*p*A-d*h*A+d*n*u-e*p*u-l*n*m+e*h*m)*x,t[6]=(d*a*A-r*p*A-d*n*o+e*p*o+r*n*m-e*a*m)*x,t[7]=(r*h*A-l*a*A+l*n*o-e*h*o-r*n*u+e*a*u)*x,t[8]=y*x,t[9]=(d*c*A-l*g*A-d*i*u+e*g*u+l*i*m-e*c*m)*x,t[10]=(r*g*A-d*s*A+d*i*o-e*g*o-r*i*m+e*s*m)*x,t[11]=(l*s*A-r*c*A-l*i*o+e*c*o+r*i*u-e*s*u)*x,t[12]=C*x,t[13]=(l*g*n-d*c*n+d*i*h-e*g*h-l*i*p+e*c*p)*x,t[14]=(d*s*n-r*g*n-d*i*a+e*g*a+r*i*p-e*s*p)*x,t[15]=(r*c*n-l*s*n+l*i*a-e*c*a-r*i*h+e*s*h)*x,this}scale(t){const e=this.elements,i=t.x,n=t.y,A=t.z;return e[0]*=i,e[4]*=n,e[8]*=A,e[1]*=i,e[5]*=n,e[9]*=A,e[2]*=i,e[6]*=n,e[10]*=A,e[3]*=i,e[7]*=n,e[11]*=A,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),A=1-i,r=t.x,s=t.y,a=t.z,o=A*r,l=A*s;return this.set(o*r+i,o*s-n*a,o*a+n*s,0,o*s+n*a,l*s+i,l*a-n*r,0,o*a-n*s,l*a+n*r,A*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,A,r){return this.set(1,i,A,0,t,1,r,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,A=e._x,r=e._y,s=e._z,a=e._w,o=A+A,l=r+r,c=s+s,h=A*o,u=A*l,d=A*c,g=r*l,p=r*c,m=s*c,f=a*o,v=a*l,y=a*c,C=i.x,I=i.y,x=i.z;return n[0]=(1-(g+m))*C,n[1]=(u+y)*C,n[2]=(d-v)*C,n[3]=0,n[4]=(u-y)*I,n[5]=(1-(h+m))*I,n[6]=(p+f)*I,n[7]=0,n[8]=(d+v)*x,n[9]=(p-f)*x,n[10]=(1-(h+g))*x,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let A=bt.set(n[0],n[1],n[2]).length();const r=bt.set(n[4],n[5],n[6]).length(),s=bt.set(n[8],n[9],n[10]).length();this.determinant()<0&&(A=-A),t.x=n[12],t.y=n[13],t.z=n[14],St.copy(this);const a=1/A,o=1/r,l=1/s;return St.elements[0]*=a,St.elements[1]*=a,St.elements[2]*=a,St.elements[4]*=o,St.elements[5]*=o,St.elements[6]*=o,St.elements[8]*=l,St.elements[9]*=l,St.elements[10]*=l,e.setFromRotationMatrix(St),i.x=A,i.y=r,i.z=s,this}makePerspective(t,e,i,n,A,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*A/(e-t),o=2*A/(i-n),l=(e+t)/(e-t),c=(i+n)/(i-n),h=-(r+A)/(r-A),u=-2*r*A/(r-A);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=c,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=u,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,i,n,A,r){const s=this.elements,a=1/(e-t),o=1/(i-n),l=1/(r-A),c=(e+t)*a,h=(i+n)*o,u=(r+A)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-c,s[1]=0,s[5]=2*o,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-u,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}Bt.prototype.isMatrix4=!0;const bt=new K,St=new Bt,Qt=new K(0,0,0),Tt=new K(1,1,1),Dt=new K,Lt=new K,Rt=new K,Nt=new Bt,Pt=new X;class kt{constructor(t=0,e=0,i=0,n=kt.DefaultOrder){this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,A=n[0],r=n[4],s=n[8],a=n[1],o=n[5],l=n[9],c=n[2],h=n[6],u=n[10];switch(e){case"XYZ":this._y=Math.asin(N(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-r,A)):(this._x=Math.atan2(h,o),this._z=0);break;case"YXZ":this._x=Math.asin(-N(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,u),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-c,A),this._z=0);break;case"ZXY":this._x=Math.asin(N(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(a,A));break;case"ZYX":this._y=Math.asin(-N(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(a,A)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(N(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,A)):(this._x=0,this._y=Math.atan2(s,u));break;case"XZY":this._z=Math.asin(-N(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(h,o),this._y=Math.atan2(s,A)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Nt.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Nt,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Pt.setFromEuler(this),this.setFromQuaternion(Pt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new K(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}kt.prototype.isEuler=!0,kt.DefaultOrder="XYZ",kt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Gt{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Ft=0;const Ut=new K,zt=new X,Ht=new Bt,Ot=new K,Wt=new K,Vt=new K,Jt=new X,Yt=new K(1,0,0),qt=new K(0,1,0),Xt=new K(0,0,1),Kt={type:"added"},Zt={type:"removed"};class jt extends Q{constructor(){super(),Object.defineProperty(this,"id",{value:Ft++}),this.uuid=R(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=jt.DefaultUp.clone();const t=new K,e=new kt,i=new X,n=new K(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Bt},normalMatrix:{value:new U}}),this.matrix=new Bt,this.matrixWorld=new Bt,this.matrixAutoUpdate=jt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Gt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return zt.setFromAxisAngle(t,e),this.quaternion.multiply(zt),this}rotateOnWorldAxis(t,e){return zt.setFromAxisAngle(t,e),this.quaternion.premultiply(zt),this}rotateX(t){return this.rotateOnAxis(Yt,t)}rotateY(t){return this.rotateOnAxis(qt,t)}rotateZ(t){return this.rotateOnAxis(Xt,t)}translateOnAxis(t,e){return Ut.copy(t).applyQuaternion(this.quaternion),this.position.add(Ut.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Yt,t)}translateY(t){return this.translateOnAxis(qt,t)}translateZ(t){return this.translateOnAxis(Xt,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Ht.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Ot.copy(t):Ot.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Wt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ht.lookAt(Wt,Ot,this.up):Ht.lookAt(Ot,Wt,this.up),this.quaternion.setFromRotationMatrix(Ht),n&&(Ht.extractRotation(n.matrixWorld),zt.setFromRotationMatrix(Ht),this.quaternion.premultiply(zt.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Kt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Zt)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Zt)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Ht.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ht.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ht),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,t,Vt),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,Jt,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function A(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=A(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];A(t.shapes,n)}else A(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(A(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(A(t.materials,this.material[i]));n.material=e}else n.material=A(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(A(t.animations,i))}}if(e){const e=r(t.geometries),n=r(t.materials),A=r(t.textures),s=r(t.images),a=r(t.shapes),o=r(t.skeletons),l=r(t.animations);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),A.length>0&&(i.textures=A),s.length>0&&(i.images=s),a.length>0&&(i.shapes=a),o.length>0&&(i.skeletons=o),l.length>0&&(i.animations=l)}return i.object=n,i;function r(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}jt.DefaultUp=new K(0,1,0),jt.DefaultMatrixAutoUpdate=!0,jt.prototype.isObject3D=!0;const $t=new K,te=new K,ee=new K,ie=new K,ne=new K,Ae=new K,re=new K,se=new K,ae=new K,oe=new K;class le{constructor(t=new K,e=new K,i=new K){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),$t.subVectors(t,e),n.cross($t);const A=n.lengthSq();return A>0?n.multiplyScalar(1/Math.sqrt(A)):n.set(0,0,0)}static getBarycoord(t,e,i,n,A){$t.subVectors(n,e),te.subVectors(i,e),ee.subVectors(t,e);const r=$t.dot($t),s=$t.dot(te),a=$t.dot(ee),o=te.dot(te),l=te.dot(ee),c=r*o-s*s;if(0===c)return A.set(-2,-1,-1);const h=1/c,u=(o*a-s*l)*h,d=(r*l-s*a)*h;return A.set(1-u-d,d,u)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,ie),ie.x>=0&&ie.y>=0&&ie.x+ie.y<=1}static getUV(t,e,i,n,A,r,s,a){return this.getBarycoord(t,e,i,n,ie),a.set(0,0),a.addScaledVector(A,ie.x),a.addScaledVector(r,ie.y),a.addScaledVector(s,ie.z),a}static isFrontFacing(t,e,i,n){return $t.subVectors(i,e),te.subVectors(t,e),$t.cross(te).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return $t.subVectors(this.c,this.b),te.subVectors(this.a,this.b),.5*$t.cross(te).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return le.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return le.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,n,A){return le.getUV(t,this.a,this.b,this.c,e,i,n,A)}containsPoint(t){return le.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return le.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,A=this.c;let r,s;ne.subVectors(n,i),Ae.subVectors(A,i),se.subVectors(t,i);const a=ne.dot(se),o=Ae.dot(se);if(a<=0&&o<=0)return e.copy(i);ae.subVectors(t,n);const l=ne.dot(ae),c=Ae.dot(ae);if(l>=0&&c<=l)return e.copy(n);const h=a*c-l*o;if(h<=0&&a>=0&&l<=0)return r=a/(a-l),e.copy(i).addScaledVector(ne,r);oe.subVectors(t,A);const u=ne.dot(oe),d=Ae.dot(oe);if(d>=0&&u<=d)return e.copy(A);const g=u*o-a*d;if(g<=0&&o>=0&&d<=0)return s=o/(o-d),e.copy(i).addScaledVector(Ae,s);const p=l*d-u*c;if(p<=0&&c-l>=0&&u-d>=0)return re.subVectors(A,n),s=(c-l)/(c-l+(u-d)),e.copy(n).addScaledVector(re,s);const m=1/(p+g+h);return r=g*m,s=h*m,e.copy(i).addScaledVector(ne,r).addScaledVector(Ae,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ce=0;class he extends Q{constructor(){super(),Object.defineProperty(this,"id",{value:ce++}),this.uuid=R(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=t,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=_,this.stencilZFail=_,this.stencilZPass=_,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){const e=n(t.textures),A=n(t.images);e.length>0&&(i.textures=e),A.length>0&&(i.images=A)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}he.prototype.isMaterial=!0;const ue={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},de={h:0,s:0,l:0},ge={h:0,s:0,l:0};function pe(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function me(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function fe(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class ve{constructor(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,i){return this.r=t,this.g=e,this.b=i,this}setHSL(t,e,i){var n;if(t=(t%(n=1)+n)%n,e=N(e,0,1),i=N(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,A=2*i-n;this.r=pe(A,n,t+1/3),this.g=pe(A,n,t),this.b=pe(A,n,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const n=i[1],A=i[2];switch(n){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A)){const i=parseFloat(t[1])/360,n=parseInt(t[2],10)/100,A=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(i,n,A)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=ue[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=me(t.r),this.g=me(t.g),this.b=me(t.b),this}copyLinearToSRGB(t){return this.r=fe(t.r),this.g=fe(t.g),this.b=fe(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,i=this.g,n=this.b,A=Math.max(e,i,n),r=Math.min(e,i,n);let s,a;const o=(r+A)/2;if(r===A)s=0,a=0;else{const t=A-r;switch(a=o<=.5?t/(A+r):t/(2-A-r),A){case e:s=(i-n)/t+(i<n?6:0);break;case i:s=(n-e)/t+2;break;case n:s=(e-i)/t+4}s/=6}return t.h=s,t.s=a,t.l=o,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,i){return this.getHSL(de),de.h+=t,de.s+=e,de.l+=i,this.setHSL(de.h,de.s,de.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(de),t.getHSL(ge);const i=P(de.h,ge.h,e),n=P(de.s,ge.s,e),A=P(de.l,ge.l,e);return this.setHSL(i,n,A),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ve.NAMES=ue,ve.prototype.isColor=!0,ve.prototype.r=1,ve.prototype.g=1,ve.prototype.b=1;class ye extends he{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this}}ye.prototype.isMeshBasicMaterial=!0;const Ce=new K,Ie=new F;class xe{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=B,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,A=this.itemSize;n<A;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let i=0;for(let n=0,A=t.length;n<A;n++){let A=t[n];void 0===A&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),A=new ve),e[i++]=A.r,e[i++]=A.g,e[i++]=A.b}return this}copyVector2sArray(t){const e=this.array;let i=0;for(let n=0,A=t.length;n<A;n++){let A=t[n];void 0===A&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),A=new F),e[i++]=A.x,e[i++]=A.y}return this}copyVector3sArray(t){const e=this.array;let i=0;for(let n=0,A=t.length;n<A;n++){let A=t[n];void 0===A&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),A=new K),e[i++]=A.x,e[i++]=A.y,e[i++]=A.z}return this}copyVector4sArray(t){const e=this.array;let i=0;for(let n=0,A=t.length;n<A;n++){let A=t[n];void 0===A&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),A=new J),e[i++]=A.x,e[i++]=A.y,e[i++]=A.z,e[i++]=A.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Ie.fromBufferAttribute(this,e),Ie.applyMatrix3(t),this.setXY(e,Ie.x,Ie.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)Ce.fromBufferAttribute(this,e),Ce.applyMatrix3(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Ce.x=this.getX(e),Ce.y=this.getY(e),Ce.z=this.getZ(e),Ce.applyMatrix4(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Ce.x=this.getX(e),Ce.y=this.getY(e),Ce.z=this.getZ(e),Ce.applyNormalMatrix(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Ce.x=this.getX(e),Ce.y=this.getY(e),Ce.z=this.getZ(e),Ce.transformDirection(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,A){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=A,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==B&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}xe.prototype.isBufferAttribute=!0;class we extends xe{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Ee extends xe{constructor(t,e,i){super(new Uint32Array(t),e,i)}}(class extends xe{constructor(t,e,i){super(new Uint16Array(t),e,i)}}).prototype.isFloat16BufferAttribute=!0;class Me extends xe{constructor(t,e,i){super(new Float32Array(t),e,i)}}function _e(t){if(0===t.length)return-1/0;let e=t[0];for(let i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}let Be=0;const be=new Bt,Se=new jt,Qe=new K,Te=new $,De=new $,Le=new K;class Re extends Q{constructor(){super(),Object.defineProperty(this,"id",{value:Be++}),this.uuid=R(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(_e(t)>65535?Ee:we)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new U).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return be.makeRotationFromQuaternion(t),this.applyMatrix4(be),this}rotateX(t){return be.makeRotationX(t),this.applyMatrix4(be),this}rotateY(t){return be.makeRotationY(t),this.applyMatrix4(be),this}rotateZ(t){return be.makeRotationZ(t),this.applyMatrix4(be),this}translate(t,e,i){return be.makeTranslation(t,e,i),this.applyMatrix4(be),this}scale(t,e,i){return be.makeScale(t,e,i),this.applyMatrix4(be),this}lookAt(t){return Se.lookAt(t),Se.updateMatrix(),this.applyMatrix4(Se.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qe).negate(),this.translate(Qe.x,Qe.y,Qe.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Me(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new $);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new K(-1/0,-1/0,-1/0),new K(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Te.setFromBufferAttribute(i),this.morphTargetsRelative?(Le.addVectors(this.boundingBox.min,Te.min),this.boundingBox.expandByPoint(Le),Le.addVectors(this.boundingBox.max,Te.max),this.boundingBox.expandByPoint(Le)):(this.boundingBox.expandByPoint(Te.min),this.boundingBox.expandByPoint(Te.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new vt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new K,1/0);if(t){const i=this.boundingSphere.center;if(Te.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];De.setFromBufferAttribute(i),this.morphTargetsRelative?(Le.addVectors(Te.min,De.min),Te.expandByPoint(Le),Le.addVectors(Te.max,De.max),Te.expandByPoint(Le)):(Te.expandByPoint(De.min),Te.expandByPoint(De.max))}Te.getCenter(i);let n=0;for(let e=0,A=t.count;e<A;e++)Le.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(Le));if(e)for(let A=0,r=e.length;A<r;A++){const r=e[A],s=this.morphTargetsRelative;for(let e=0,A=r.count;e<A;e++)Le.fromBufferAttribute(r,e),s&&(Qe.fromBufferAttribute(t,e),Le.add(Qe)),n=Math.max(n,i.distanceToSquared(Le))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=t.array,n=e.position.array,A=e.normal.array,r=e.uv.array,s=n.length/3;void 0===e.tangent&&this.setAttribute("tangent",new xe(new Float32Array(4*s),4));const a=e.tangent.array,o=[],l=[];for(let t=0;t<s;t++)o[t]=new K,l[t]=new K;const c=new K,h=new K,u=new K,d=new F,g=new F,p=new F,m=new K,f=new K;function v(t,e,i){c.fromArray(n,3*t),h.fromArray(n,3*e),u.fromArray(n,3*i),d.fromArray(r,2*t),g.fromArray(r,2*e),p.fromArray(r,2*i),h.sub(c),u.sub(c),g.sub(d),p.sub(d);const A=1/(g.x*p.y-p.x*g.y);isFinite(A)&&(m.copy(h).multiplyScalar(p.y).addScaledVector(u,-g.y).multiplyScalar(A),f.copy(u).multiplyScalar(g.x).addScaledVector(h,-p.x).multiplyScalar(A),o[t].add(m),o[e].add(m),o[i].add(m),l[t].add(f),l[e].add(f),l[i].add(f))}let y=this.groups;0===y.length&&(y=[{start:0,count:i.length}]);for(let t=0,e=y.length;t<e;++t){const e=y[t],n=e.start;for(let t=n,A=n+e.count;t<A;t+=3)v(i[t+0],i[t+1],i[t+2])}const C=new K,I=new K,x=new K,w=new K;function E(t){x.fromArray(A,3*t),w.copy(x);const e=o[t];C.copy(e),C.sub(x.multiplyScalar(x.dot(e))).normalize(),I.crossVectors(w,e);const i=I.dot(l[t])<0?-1:1;a[4*t]=C.x,a[4*t+1]=C.y,a[4*t+2]=C.z,a[4*t+3]=i}for(let t=0,e=y.length;t<e;++t){const e=y[t],n=e.start;for(let t=n,A=n+e.count;t<A;t+=3)E(i[t+0]),E(i[t+1]),E(i[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new xe(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new K,A=new K,r=new K,s=new K,a=new K,o=new K,l=new K,c=new K;if(t)for(let h=0,u=t.count;h<u;h+=3){const u=t.getX(h+0),d=t.getX(h+1),g=t.getX(h+2);n.fromBufferAttribute(e,u),A.fromBufferAttribute(e,d),r.fromBufferAttribute(e,g),l.subVectors(r,A),c.subVectors(n,A),l.cross(c),s.fromBufferAttribute(i,u),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,g),s.add(l),a.add(l),o.add(l),i.setXYZ(u,s.x,s.y,s.z),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(g,o.x,o.y,o.z)}else for(let t=0,s=e.count;t<s;t+=3)n.fromBufferAttribute(e,t+0),A.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),l.subVectors(r,A),c.subVectors(n,A),l.cross(c),i.setXYZ(t+0,l.x,l.y,l.z),i.setXYZ(t+1,l.x,l.y,l.z),i.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const n in i){if(void 0===t.attributes[n])continue;const A=i[n].array,r=t.attributes[n],s=r.array,a=r.itemSize*e,o=Math.min(s.length,A.length-a);for(let t=0,e=a;t<o;t++,e++)A[e]=s[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Le.fromBufferAttribute(t,e),Le.normalize(),t.setXYZ(e,Le.x,Le.y,Le.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,A=t.normalized,r=new i.constructor(e.length*n);let s=0,a=0;for(let A=0,o=e.length;A<o;A++){s=t.isInterleavedBufferAttribute?e[A]*t.data.stride+t.offset:e[A]*n;for(let t=0;t<n;t++)r[a++]=i[s++]}return new xe(r,n,A)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Re,i=this.index.array,n=this.attributes;for(const A in n){const r=t(n[A],i);e.setAttribute(A,r)}const A=this.morphAttributes;for(const n in A){const r=[],s=A[n];for(let e=0,n=s.length;e<n;e++){const n=t(s[e],i);r.push(n)}e.morphAttributes[n]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,i=r.length;t<i;t++){const i=r[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let A=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],r=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];r.push(n.toJSON(t.data))}r.length>0&&(n[e]=r,A=!0)}A&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new Re).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const A=t.morphAttributes;for(const t in A){const i=[],n=A[t];for(let t=0,A=n.length;t<A;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}Re.prototype.isBufferGeometry=!0;const Ne=new Bt,Pe=new _t,ke=new vt,Ge=new K,Fe=new K,Ue=new K,ze=new K,He=new K,Oe=new K,We=new K,Ve=new K,Je=new K,Ye=new F,qe=new F,Xe=new F,Ke=new K,Ze=new K;class je extends jt{constructor(t=new Re,e=new ye){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,i=Object.keys(e);if(i.length>0){const t=e[i[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,i=t.length;e<i;e++){const i=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const i=this.geometry,n=this.material,A=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),ke.copy(i.boundingSphere),ke.applyMatrix4(A),!1===t.ray.intersectsSphere(ke))return;if(Ne.copy(A).invert(),Pe.copy(t.ray).applyMatrix4(Ne),null!==i.boundingBox&&!1===Pe.intersectsBox(i.boundingBox))return;let r;if(i.isBufferGeometry){const A=i.index,s=i.attributes.position,a=i.morphAttributes.position,o=i.morphTargetsRelative,l=i.attributes.uv,c=i.attributes.uv2,h=i.groups,u=i.drawRange;if(null!==A)if(Array.isArray(n))for(let i=0,d=h.length;i<d;i++){const d=h[i],g=n[d.materialIndex];for(let i=Math.max(d.start,u.start),n=Math.min(d.start+d.count,u.start+u.count);i<n;i+=3){const n=A.getX(i),h=A.getX(i+1),u=A.getX(i+2);r=$e(this,g,t,Pe,s,a,o,l,c,n,h,u),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=d.materialIndex,e.push(r))}}else{for(let i=Math.max(0,u.start),h=Math.min(A.count,u.start+u.count);i<h;i+=3){const h=A.getX(i),u=A.getX(i+1),d=A.getX(i+2);r=$e(this,n,t,Pe,s,a,o,l,c,h,u,d),r&&(r.faceIndex=Math.floor(i/3),e.push(r))}}else if(void 0!==s)if(Array.isArray(n))for(let i=0,A=h.length;i<A;i++){const A=h[i],d=n[A.materialIndex];for(let i=Math.max(A.start,u.start),n=Math.min(A.start+A.count,u.start+u.count);i<n;i+=3){r=$e(this,d,t,Pe,s,a,o,l,c,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=A.materialIndex,e.push(r))}}else{for(let i=Math.max(0,u.start),A=Math.min(s.count,u.start+u.count);i<A;i+=3){r=$e(this,n,t,Pe,s,a,o,l,c,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),e.push(r))}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function $e(t,e,i,n,A,r,s,a,o,l,c,h){Ge.fromBufferAttribute(A,l),Fe.fromBufferAttribute(A,c),Ue.fromBufferAttribute(A,h);const u=t.morphTargetInfluences;if(e.morphTargets&&r&&u){We.set(0,0,0),Ve.set(0,0,0),Je.set(0,0,0);for(let t=0,e=r.length;t<e;t++){const e=u[t],i=r[t];0!==e&&(ze.fromBufferAttribute(i,l),He.fromBufferAttribute(i,c),Oe.fromBufferAttribute(i,h),s?(We.addScaledVector(ze,e),Ve.addScaledVector(He,e),Je.addScaledVector(Oe,e)):(We.addScaledVector(ze.sub(Ge),e),Ve.addScaledVector(He.sub(Fe),e),Je.addScaledVector(Oe.sub(Ue),e)))}Ge.add(We),Fe.add(Ve),Ue.add(Je)}t.isSkinnedMesh&&(t.boneTransform(l,Ge),t.boneTransform(c,Fe),t.boneTransform(h,Ue));const d=function(t,e,i,n,A,r,s,a){let o;if(o=1===e.side?n.intersectTriangle(s,r,A,!0,a):n.intersectTriangle(A,r,s,2!==e.side,a),null===o)return null;Ze.copy(a),Ze.applyMatrix4(t.matrixWorld);const l=i.ray.origin.distanceTo(Ze);return l<i.near||l>i.far?null:{distance:l,point:Ze.clone(),object:t}}(t,e,i,n,Ge,Fe,Ue,Ke);if(d){a&&(Ye.fromBufferAttribute(a,l),qe.fromBufferAttribute(a,c),Xe.fromBufferAttribute(a,h),d.uv=le.getUV(Ke,Ge,Fe,Ue,Ye,qe,Xe,new F)),o&&(Ye.fromBufferAttribute(o,l),qe.fromBufferAttribute(o,c),Xe.fromBufferAttribute(o,h),d.uv2=le.getUV(Ke,Ge,Fe,Ue,Ye,qe,Xe,new F));const t={a:l,b:c,c:h,normal:new K,materialIndex:0};le.getNormal(Ge,Fe,Ue,t.normal),d.face=t}return d}je.prototype.isMesh=!0;class ti extends Re{constructor(t=1,e=1,i=1,n=1,A=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:A,depthSegments:r};const s=this;n=Math.floor(n),A=Math.floor(A),r=Math.floor(r);const a=[],o=[],l=[],c=[];let h=0,u=0;function d(t,e,i,n,A,r,d,g,p,m,f){const v=r/p,y=d/m,C=r/2,I=d/2,x=g/2,w=p+1,E=m+1;let M=0,_=0;const B=new K;for(let r=0;r<E;r++){const s=r*y-I;for(let a=0;a<w;a++){const h=a*v-C;B[t]=h*n,B[e]=s*A,B[i]=x,o.push(B.x,B.y,B.z),B[t]=0,B[e]=0,B[i]=g>0?1:-1,l.push(B.x,B.y,B.z),c.push(a/p),c.push(1-r/m),M+=1}}for(let t=0;t<m;t++)for(let e=0;e<p;e++){const i=h+e+w*t,n=h+e+w*(t+1),A=h+(e+1)+w*(t+1),r=h+(e+1)+w*t;a.push(i,n,r),a.push(n,A,r),_+=6}s.addGroup(u,_,f),u+=_,h+=M}d("z","y","x",-1,-1,i,e,t,r,A,0),d("z","y","x",1,-1,i,e,-t,r,A,1),d("x","z","y",1,1,t,i,e,n,r,2),d("x","z","y",1,-1,t,i,-e,n,r,3),d("x","y","z",1,-1,t,e,i,n,A,4),d("x","y","z",-1,-1,t,e,-i,n,A,5),this.setIndex(a),this.setAttribute("position",new Me(o,3)),this.setAttribute("normal",new Me(l,3)),this.setAttribute("uv",new Me(c,2))}static fromJSON(t){return new ti(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function ei(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const A=t[i][n];A&&(A.isColor||A.isMatrix3||A.isMatrix4||A.isVector2||A.isVector3||A.isVector4||A.isTexture||A.isQuaternion)?e[i][n]=A.clone():Array.isArray(A)?e[i][n]=A.slice():e[i][n]=A}}return e}function ii(t){const e={};for(let i=0;i<t.length;i++){const n=ei(t[i]);for(const t in n)e[t]=n[t]}return e}const ni={clone:ei,merge:ii};class Ai extends he{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ei(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}Ai.prototype.isShaderMaterial=!0;class ri extends jt{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Bt,this.projectionMatrix=new Bt,this.projectionMatrixInverse=new Bt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}ri.prototype.isCamera=!0;class si extends ri{constructor(t=50,e=1,i=.1,n=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*L*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*D*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*L*Math.atan(Math.tan(.5*D*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,n,A,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=A,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*D*this.fov)/this.zoom,i=2*e,n=this.aspect*i,A=-.5*n;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,s=r.fullHeight;A+=r.offsetX*n/t,e-=r.offsetY*i/s,n*=r.width/t,i*=r.height/s}const s=this.filmOffset;0!==s&&(A+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(A,A+n,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}si.prototype.isPerspectiveCamera=!0;const ai=90;class oi extends jt{constructor(t,e,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=i;const n=new si(ai,1,t,e);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new K(1,0,0)),this.add(n);const A=new si(ai,1,t,e);A.layers=this.layers,A.up.set(0,-1,0),A.lookAt(new K(-1,0,0)),this.add(A);const r=new si(ai,1,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new K(0,1,0)),this.add(r);const s=new si(ai,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new K(0,-1,0)),this.add(s);const a=new si(ai,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new K(0,0,1)),this.add(a);const o=new si(ai,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new K(0,0,-1)),this.add(o)}update(t,e){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[n,A,r,s,a,o]=this.children,l=t.xr.enabled,c=t.getRenderTarget();t.xr.enabled=!1;const h=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,n),t.setRenderTarget(i,1),t.render(e,A),t.setRenderTarget(i,2),t.render(e,r),t.setRenderTarget(i,3),t.render(e,s),t.setRenderTarget(i,4),t.render(e,a),i.texture.generateMipmaps=h,t.setRenderTarget(i,5),t.render(e,o),t.setRenderTarget(c),t.xr.enabled=l}}class li extends W{constructor(t,e,i,n,A,r,s,a,o,l){super(t=void 0!==t?t:[],e=void 0!==e?e:301,i,n,A,r,s=void 0!==s?s:d,a,o,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}li.prototype.isCubeTexture=!0;class ci extends Y{constructor(t,e,i){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=i),super(t,t,e),e=e||{},this.texture=new li(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:r,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=g,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},n=new ti(5,5,5),A=new Ai({name:"CubemapFromEquirect",uniforms:ei(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});A.uniforms.tEquirect.value=e;const a=new je(n,A),o=e.minFilter;e.minFilter===s&&(e.minFilter=r);return new oi(1,10,this).update(t,a),e.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,i,n){const A=t.getRenderTarget();for(let A=0;A<6;A++)t.setRenderTarget(this,A),t.clear(e,i,n);t.setRenderTarget(A)}}ci.prototype.isWebGLCubeRenderTarget=!0;const hi=new K,ui=new K,di=new U;class gi{constructor(t=new K(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=hi.subVectors(i,e).cross(ui.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const i=t.delta(hi),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const A=-(t.start.dot(this.normal)+this.constant)/n;return A<0||A>1?null:e.copy(i).multiplyScalar(A).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||di.getNormalMatrix(t),n=this.coplanarPoint(hi).applyMatrix4(t),A=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(A),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}gi.prototype.isPlane=!0;const pi=new vt,mi=new K;class fi{constructor(t=new gi,e=new gi,i=new gi,n=new gi,A=new gi,r=new gi){this.planes=[t,e,i,n,A,r]}set(t,e,i,n,A,r){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(i),s[3].copy(n),s[4].copy(A),s[5].copy(r),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,n=i[0],A=i[1],r=i[2],s=i[3],a=i[4],o=i[5],l=i[6],c=i[7],h=i[8],u=i[9],d=i[10],g=i[11],p=i[12],m=i[13],f=i[14],v=i[15];return e[0].setComponents(s-n,c-a,g-h,v-p).normalize(),e[1].setComponents(s+n,c+a,g+h,v+p).normalize(),e[2].setComponents(s+A,c+o,g+u,v+m).normalize(),e[3].setComponents(s-A,c-o,g-u,v-m).normalize(),e[4].setComponents(s-r,c-l,g-d,v-f).normalize(),e[5].setComponents(s+r,c+l,g+d,v+f).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),pi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(pi)}intersectsSprite(t){return pi.center.set(0,0,0),pi.radius=.7071067811865476,pi.applyMatrix4(t.matrixWorld),this.intersectsSphere(pi)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(i)<n)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(mi.x=n.normal.x>0?t.max.x:t.min.x,mi.y=n.normal.y>0?t.max.y:t.min.y,mi.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(mi)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function vi(){let t=null,e=!1,i=null,n=null;function A(e,r){i(e,r),n=t.requestAnimationFrame(A)}return{start:function(){!0!==e&&null!==i&&(n=t.requestAnimationFrame(A),e=!0)},stop:function(){t.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function yi(t,e){const i=e.isWebGL2,n=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);i&&(t.deleteBuffer(i.buffer),n.delete(e))},update:function(e,A){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const r=n.get(e);void 0===r?n.set(e,function(e,n){const A=e.array,r=e.usage,s=t.createBuffer();t.bindBuffer(n,s),t.bufferData(n,A,r),e.onUploadCallback();let a=5126;return A instanceof Float32Array?a=5126:A instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):A instanceof Uint16Array?e.isFloat16BufferAttribute?i?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:A instanceof Int16Array?a=5122:A instanceof Uint32Array?a=5125:A instanceof Int32Array?a=5124:A instanceof Int8Array?a=5120:(A instanceof Uint8Array||A instanceof Uint8ClampedArray)&&(a=5121),{buffer:s,type:a,bytesPerElement:A.BYTES_PER_ELEMENT,version:e.version}}(e,A)):r.version<e.version&&(!function(e,n,A){const r=n.array,s=n.updateRange;t.bindBuffer(A,e),-1===s.count?t.bufferSubData(A,0,r):(i?t.bufferSubData(A,s.offset*r.BYTES_PER_ELEMENT,r,s.offset,s.count):t.bufferSubData(A,s.offset*r.BYTES_PER_ELEMENT,r.subarray(s.offset,s.offset+s.count)),s.count=-1)}(r.buffer,e,A),r.version=e.version)}}}class Ci extends Re{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const A=t/2,r=e/2,s=Math.floor(i),a=Math.floor(n),o=s+1,l=a+1,c=t/s,h=e/a,u=[],d=[],g=[],p=[];for(let t=0;t<l;t++){const e=t*h-r;for(let i=0;i<o;i++){const n=i*c-A;d.push(n,-e,0),g.push(0,0,1),p.push(i/s),p.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const i=e+o*t,n=e+o*(t+1),A=e+1+o*(t+1),r=e+1+o*t;u.push(i,n,r),u.push(n,A,r)}this.setIndex(u),this.setAttribute("position",new Me(d,3)),this.setAttribute("normal",new Me(g,3)),this.setAttribute("uv",new Me(p,2))}static fromJSON(t){return new Ci(t.width,t.height,t.widthSegments,t.heightSegments)}}const Ii={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSNMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n\tvec3 v = normalize( cameraPosition - pos );\n\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\n\t\tnormal, v, roughnessFactor, material.diffuseColor, totalSpecular,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec4 vWorldPosition;\n\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n\t\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\n\t\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\n\t\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\n\t\treturn normalize(refractionVector) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness(float roughness, float ior) {\n\t\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n\t}\n\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n\t\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n\t\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n\t}\n\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n\t\tif (attenuationDistance == 0.0) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n\t\t\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n\t\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n\t\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform vec3 attenuationColor;\n\tuniform float attenuationDistance;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#ifdef USE_TRANSMISSION\n\tvarying vec4 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition;\n#endif\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},xi={common:{diffuse:{value:new ve(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new U},uv2Transform:{value:new U},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new F(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ve(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ve(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new U}},sprite:{diffuse:{value:new ve(16777215)},opacity:{value:1},center:{value:new F(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new U}}},wi={basic:{uniforms:ii([xi.common,xi.specularmap,xi.envmap,xi.aomap,xi.lightmap,xi.fog]),vertexShader:Ii.meshbasic_vert,fragmentShader:Ii.meshbasic_frag},lambert:{uniforms:ii([xi.common,xi.specularmap,xi.envmap,xi.aomap,xi.lightmap,xi.emissivemap,xi.fog,xi.lights,{emissive:{value:new ve(0)}}]),vertexShader:Ii.meshlambert_vert,fragmentShader:Ii.meshlambert_frag},phong:{uniforms:ii([xi.common,xi.specularmap,xi.envmap,xi.aomap,xi.lightmap,xi.emissivemap,xi.bumpmap,xi.normalmap,xi.displacementmap,xi.fog,xi.lights,{emissive:{value:new ve(0)},specular:{value:new ve(1118481)},shininess:{value:30}}]),vertexShader:Ii.meshphong_vert,fragmentShader:Ii.meshphong_frag},standard:{uniforms:ii([xi.common,xi.envmap,xi.aomap,xi.lightmap,xi.emissivemap,xi.bumpmap,xi.normalmap,xi.displacementmap,xi.roughnessmap,xi.metalnessmap,xi.fog,xi.lights,{emissive:{value:new ve(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ii.meshphysical_vert,fragmentShader:Ii.meshphysical_frag},toon:{uniforms:ii([xi.common,xi.aomap,xi.lightmap,xi.emissivemap,xi.bumpmap,xi.normalmap,xi.displacementmap,xi.gradientmap,xi.fog,xi.lights,{emissive:{value:new ve(0)}}]),vertexShader:Ii.meshtoon_vert,fragmentShader:Ii.meshtoon_frag},matcap:{uniforms:ii([xi.common,xi.bumpmap,xi.normalmap,xi.displacementmap,xi.fog,{matcap:{value:null}}]),vertexShader:Ii.meshmatcap_vert,fragmentShader:Ii.meshmatcap_frag},points:{uniforms:ii([xi.points,xi.fog]),vertexShader:Ii.points_vert,fragmentShader:Ii.points_frag},dashed:{uniforms:ii([xi.common,xi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ii.linedashed_vert,fragmentShader:Ii.linedashed_frag},depth:{uniforms:ii([xi.common,xi.displacementmap]),vertexShader:Ii.depth_vert,fragmentShader:Ii.depth_frag},normal:{uniforms:ii([xi.common,xi.bumpmap,xi.normalmap,xi.displacementmap,{opacity:{value:1}}]),vertexShader:Ii.normal_vert,fragmentShader:Ii.normal_frag},sprite:{uniforms:ii([xi.sprite,xi.fog]),vertexShader:Ii.sprite_vert,fragmentShader:Ii.sprite_frag},background:{uniforms:{uvTransform:{value:new U},t2D:{value:null}},vertexShader:Ii.background_vert,fragmentShader:Ii.background_frag},cube:{uniforms:ii([xi.envmap,{opacity:{value:1}}]),vertexShader:Ii.cube_vert,fragmentShader:Ii.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ii.equirect_vert,fragmentShader:Ii.equirect_frag},distanceRGBA:{uniforms:ii([xi.common,xi.displacementmap,{referencePosition:{value:new K},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ii.distanceRGBA_vert,fragmentShader:Ii.distanceRGBA_frag},shadow:{uniforms:ii([xi.lights,xi.fog,{color:{value:new ve(0)},opacity:{value:1}}]),vertexShader:Ii.shadow_vert,fragmentShader:Ii.shadow_frag}};function Ei(t,e,i,n,A){const r=new ve(0);let s,a,o=0,l=null,c=0,h=null;function u(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,A)}return{getClearColor:function(){return r},setClearColor:function(t,e=1){r.set(t),o=e,u(r,o)},getClearAlpha:function(){return o},setClearAlpha:function(t){o=t,u(r,o)},render:function(i,A){let d=!1,g=!0===A.isScene?A.background:null;g&&g.isTexture&&(g=e.get(g));const p=t.xr,m=p.getSession&&p.getSession();m&&"additive"===m.environmentBlendMode&&(g=null),null===g?u(r,o):g&&g.isColor&&(u(g,1),d=!0),(t.autoClear||d)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),g&&(g.isCubeTexture||306===g.mapping)?(void 0===a&&(a=new je(new ti(1,1,1),new Ai({name:"BackgroundCubeMaterial",uniforms:ei(wi.cube.uniforms),vertexShader:wi.cube.vertexShader,fragmentShader:wi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(a)),a.material.uniforms.envMap.value=g,a.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g._needsFlipEnvMap?-1:1,l===g&&c===g.version&&h===t.toneMapping||(a.material.needsUpdate=!0,l=g,c=g.version,h=t.toneMapping),i.unshift(a,a.geometry,a.material,0,0,null)):g&&g.isTexture&&(void 0===s&&(s=new je(new Ci(2,2),new Ai({name:"BackgroundMaterial",uniforms:ei(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(s)),s.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),s.material.uniforms.uvTransform.value.copy(g.matrix),l===g&&c===g.version&&h===t.toneMapping||(s.material.needsUpdate=!0,l=g,c=g.version,h=t.toneMapping),i.unshift(s,s.geometry,s.material,0,0,null))}}}function Mi(t,e,i,n){const A=t.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),s=n.isWebGL2||null!==r,a={},o=u(null);let l=o;function c(e){return n.isWebGL2?t.bindVertexArray(e):r.bindVertexArrayOES(e)}function h(e){return n.isWebGL2?t.deleteVertexArray(e):r.deleteVertexArrayOES(e)}function u(t){const e=[],i=[],n=[];for(let t=0;t<A;t++)e[t]=0,i[t]=0,n[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:n,object:t,attributes:{},index:null}}function d(){const t=l.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function g(t){p(t,0)}function p(i,A){const r=l.newAttributes,s=l.enabledAttributes,a=l.attributeDivisors;if(r[i]=1,0===s[i]&&(t.enableVertexAttribArray(i),s[i]=1),a[i]!==A){(n.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,A),a[i]=A}}function m(){const e=l.newAttributes,i=l.enabledAttributes;for(let n=0,A=i.length;n<A;n++)i[n]!==e[n]&&(t.disableVertexAttribArray(n),i[n]=0)}function f(e,i,A,r,s,a){!0!==n.isWebGL2||5124!==A&&5125!==A?t.vertexAttribPointer(e,i,A,r,s,a):t.vertexAttribIPointer(e,i,A,s,a)}function v(){y(),l!==o&&(l=o,c(l.object))}function y(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:function(A,o,h,v,y){let C=!1;if(s){const e=function(e,i,A){const s=!0===A.wireframe;let o=a[e.id];void 0===o&&(o={},a[e.id]=o);let l=o[i.id];void 0===l&&(l={},o[i.id]=l);let c=l[s];void 0===c&&(c=u(n.isWebGL2?t.createVertexArray():r.createVertexArrayOES()),l[s]=c);return c}(v,h,o);l!==e&&(l=e,c(l.object)),C=function(t,e){const i=l.attributes,n=t.attributes;let A=0;for(const t in n){const e=i[t],r=n[t];if(void 0===e)return!0;if(e.attribute!==r)return!0;if(e.data!==r.data)return!0;A++}return l.attributesNum!==A||l.index!==e}(v,y),C&&function(t,e){const i={},n=t.attributes;let A=0;for(const t in n){const e=n[t],r={};r.attribute=e,e.data&&(r.data=e.data),i[t]=r,A++}l.attributes=i,l.attributesNum=A,l.index=e}(v,y)}else{const t=!0===o.wireframe;l.geometry===v.id&&l.program===h.id&&l.wireframe===t||(l.geometry=v.id,l.program=h.id,l.wireframe=t,C=!0)}!0===A.isInstancedMesh&&(C=!0),null!==y&&i.update(y,34963),C&&(!function(A,r,s,a){if(!1===n.isWebGL2&&(A.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;d();const o=a.attributes,l=s.getAttributes(),c=r.defaultAttributeValues;for(const e in l){const n=l[e];if(n>=0){const r=o[e];if(void 0!==r){const e=r.normalized,A=r.itemSize,s=i.get(r);if(void 0===s)continue;const o=s.buffer,l=s.type,c=s.bytesPerElement;if(r.isInterleavedBufferAttribute){const i=r.data,s=i.stride,h=r.offset;i&&i.isInstancedInterleavedBuffer?(p(n,i.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=i.meshPerAttribute*i.count)):g(n),t.bindBuffer(34962,o),f(n,A,l,e,s*c,h*c)}else r.isInstancedBufferAttribute?(p(n,r.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=r.meshPerAttribute*r.count)):g(n),t.bindBuffer(34962,o),f(n,A,l,e,0,0)}else if("instanceMatrix"===e){const e=i.get(A.instanceMatrix);if(void 0===e)continue;const r=e.buffer,s=e.type;p(n+0,1),p(n+1,1),p(n+2,1),p(n+3,1),t.bindBuffer(34962,r),t.vertexAttribPointer(n+0,4,s,!1,64,0),t.vertexAttribPointer(n+1,4,s,!1,64,16),t.vertexAttribPointer(n+2,4,s,!1,64,32),t.vertexAttribPointer(n+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=i.get(A.instanceColor);if(void 0===e)continue;const r=e.buffer,s=e.type;p(n,1),t.bindBuffer(34962,r),t.vertexAttribPointer(n,3,s,!1,12,0)}else if(void 0!==c){const i=c[e];if(void 0!==i)switch(i.length){case 2:t.vertexAttrib2fv(n,i);break;case 3:t.vertexAttrib3fv(n,i);break;case 4:t.vertexAttrib4fv(n,i);break;default:t.vertexAttrib1fv(n,i)}}}}m()}(A,o,h,v),null!==y&&t.bindBuffer(34963,i.get(y).buffer))},reset:v,resetDefaultState:y,dispose:function(){v();for(const t in a){const e=a[t];for(const t in e){const i=e[t];for(const t in i)h(i[t].object),delete i[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const i=e[t];for(const t in i)h(i[t].object),delete i[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const i=a[e];if(void 0===i[t.id])continue;const n=i[t.id];for(const t in n)h(n[t].object),delete n[t];delete i[t.id]}},initAttributes:d,enableAttribute:g,disableUnusedAttributes:m}}function _i(t,e,i,n){const A=n.isWebGL2;let r;this.setMode=function(t){r=t},this.render=function(e,n){t.drawArrays(r,e,n),i.update(n,r,1)},this.renderInstances=function(n,s,a){if(0===a)return;let o,l;if(A)o=t,l="drawArraysInstanced";else if(o=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===o)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o[l](r,n,s,a),i.update(s,r,a)}}function Bi(t,e,i){let n;function A(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==i.precision?i.precision:"highp";const a=A(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const o=r||e.has("WEBGL_draw_buffers"),l=!0===i.logarithmicDepthBuffer,c=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),g=t.getParameter(34921),p=t.getParameter(36347),m=t.getParameter(36348),f=t.getParameter(36349),v=h>0,y=r||e.has("OES_texture_float");return{isWebGL2:r,drawBuffers:o,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");n=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:A,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:g,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:r?t.getParameter(36183):0}}function bi(t){const e=this;let i=null,n=0,A=!1,r=!1;const s=new gi,a=new U,o={value:null,needsUpdate:!1};function l(){o.value!==i&&(o.value=i,o.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function c(t,i,n,A){const r=null!==t?t.length:0;let l=null;if(0!==r){if(l=o.value,!0!==A||null===l){const e=n+4*r,A=i.matrixWorldInverse;a.getNormalMatrix(A),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,i=n;e!==r;++e,i+=4)s.copy(t[e]).applyMatrix4(A,a),s.normal.toArray(l,i),l[i+3]=s.constant}o.value=l,o.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,l}this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,r){const s=0!==t.length||e||0!==n||A;return A=e,i=c(t,r,0),n=t.length,s},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1,l()},this.setState=function(e,s,a){const h=e.clippingPlanes,u=e.clipIntersection,d=e.clipShadows,g=t.get(e);if(!A||null===h||0===h.length||r&&!d)r?c(null):l();else{const t=r?0:n,e=4*t;let A=g.clippingState||null;o.value=A,A=c(h,s,e,a);for(let t=0;t!==e;++t)A[t]=i[t];g.clippingState=A,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=t}}}function Si(t){let e=new WeakMap;function i(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function n(t){const i=t.target;i.removeEventListener("dispose",n);const A=e.get(i);void 0!==A&&(e.delete(i),A.dispose())}return{get:function(A){if(A&&A.isTexture){const r=A.mapping;if(303===r||304===r){if(e.has(A)){return i(e.get(A).texture,A.mapping)}{const r=A.image;if(r&&r.height>0){const s=t.getRenderTarget(),a=new ci(r.height/2);return a.fromEquirectangularTexture(t,A),e.set(A,a),t.setRenderTarget(s),A.addEventListener("dispose",n),i(a.texture,A.mapping)}return null}}}return A},dispose:function(){e=new WeakMap}}}function Qi(t){const e={};function i(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return e[i]=n,n}return{has:function(t){return null!==i(t)},init:function(t){t.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(t){const e=i(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Ti(t,e,i,n){const A={},r=new WeakMap;function s(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",s),delete A[a.id];const o=r.get(a);o&&(e.remove(o),r.delete(a)),n.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,i.memory.geometries--}function a(t){const i=[],n=t.index,A=t.attributes.position;let s=0;if(null!==n){const t=n.array;s=n.version;for(let e=0,n=t.length;e<n;e+=3){const n=t[e+0],A=t[e+1],r=t[e+2];i.push(n,A,A,r,r,n)}}else{const t=A.array;s=A.version;for(let e=0,n=t.length/3-1;e<n;e+=3){const t=e+0,n=e+1,A=e+2;i.push(t,n,n,A,A,t)}}const a=new(_e(i)>65535?Ee:we)(i,1);a.version=s;const o=r.get(t);o&&e.remove(o),r.set(t,a)}return{get:function(t,e){return!0===A[e.id]||(e.addEventListener("dispose",s),A[e.id]=!0,i.memory.geometries++),e},update:function(t){const i=t.attributes;for(const t in i)e.update(i[t],34962);const n=t.morphAttributes;for(const t in n){const i=n[t];for(let t=0,n=i.length;t<n;t++)e.update(i[t],34962)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&a(t)}else a(t);return r.get(t)}}}function Di(t,e,i,n){const A=n.isWebGL2;let r,s,a;this.setMode=function(t){r=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,n){t.drawElements(r,n,s,e*a),i.update(n,r,1)},this.renderInstances=function(n,o,l){if(0===l)return;let c,h;if(A)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](r,o,s,n*a,l),i.update(o,r,l)}}function Li(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(e.calls++,i){case 4:e.triangles+=n*(t/3);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Ri(t,e){return t[0]-e[0]}function Ni(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Pi(t){const e={},i=new Float32Array(8),n=[];for(let t=0;t<8;t++)n[t]=[t,0];return{update:function(A,r,s,a){const o=A.morphTargetInfluences,l=void 0===o?0:o.length;let c=e[r.id];if(void 0===c||c.length!==l){c=[];for(let t=0;t<l;t++)c[t]=[t,0];e[r.id]=c}for(let t=0;t<l;t++){const e=c[t];e[0]=t,e[1]=o[t]}c.sort(Ni);for(let t=0;t<8;t++)t<l&&c[t][1]?(n[t][0]=c[t][0],n[t][1]=c[t][1]):(n[t][0]=Number.MAX_SAFE_INTEGER,n[t][1]=0);n.sort(Ri);const h=s.morphTargets&&r.morphAttributes.position,u=s.morphNormals&&r.morphAttributes.normal;let d=0;for(let t=0;t<8;t++){const e=n[t],A=e[0],s=e[1];A!==Number.MAX_SAFE_INTEGER&&s?(h&&r.getAttribute("morphTarget"+t)!==h[A]&&r.setAttribute("morphTarget"+t,h[A]),u&&r.getAttribute("morphNormal"+t)!==u[A]&&r.setAttribute("morphNormal"+t,u[A]),i[t]=s,d+=s):(h&&!0===r.hasAttribute("morphTarget"+t)&&r.deleteAttribute("morphTarget"+t),u&&!0===r.hasAttribute("morphNormal"+t)&&r.deleteAttribute("morphNormal"+t),i[t]=0)}const g=r.morphTargetsRelative?1:1-d;a.getUniforms().setValue(t,"morphTargetBaseInfluence",g),a.getUniforms().setValue(t,"morphTargetInfluences",i)}}}function ki(t,e,i,n){let A=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(t){const s=n.render.frame,a=t.geometry,o=e.get(t,a);return A.get(o)!==s&&(e.update(o),A.set(o,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",r)&&t.addEventListener("dispose",r),i.update(t.instanceMatrix,34962),null!==t.instanceColor&&i.update(t.instanceColor,34962)),o},dispose:function(){A=new WeakMap}}}wi.physical={uniforms:ii([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new F(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ve(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new F},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ve(0)}}]),vertexShader:Ii.meshphysical_vert,fragmentShader:Ii.meshphysical_frag};class Gi extends W{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=A,this.minFilter=A,this.wrapR=i,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Gi.prototype.isDataTexture2DArray=!0;class Fi extends W{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=A,this.minFilter=A,this.wrapR=i,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Fi.prototype.isDataTexture3D=!0;const Ui=new W,zi=new Gi,Hi=new Fi,Oi=new li,Wi=[],Vi=[],Ji=new Float32Array(16),Yi=new Float32Array(9),qi=new Float32Array(4);function Xi(t,e,i){const n=t[0];if(n<=0||n>0)return t;const A=e*i;let r=Wi[A];if(void 0===r&&(r=new Float32Array(A),Wi[A]=r),0!==e){n.toArray(r,0);for(let n=1,A=0;n!==e;++n)A+=i,t[n].toArray(r,A)}return r}function Ki(t,e){if(t.length!==e.length)return!1;for(let i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function Zi(t,e){for(let i=0,n=e.length;i<n;i++)t[i]=e[i]}function ji(t,e){let i=Vi[e];void 0===i&&(i=new Int32Array(e),Vi[e]=i);for(let n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function $i(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function tn(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(Ki(i,e))return;t.uniform2fv(this.addr,e),Zi(i,e)}}function en(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(Ki(i,e))return;t.uniform3fv(this.addr,e),Zi(i,e)}}function nn(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(Ki(i,e))return;t.uniform4fv(this.addr,e),Zi(i,e)}}function An(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(Ki(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),Zi(i,e)}else{if(Ki(i,n))return;qi.set(n),t.uniformMatrix2fv(this.addr,!1,qi),Zi(i,n)}}function rn(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(Ki(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),Zi(i,e)}else{if(Ki(i,n))return;Yi.set(n),t.uniformMatrix3fv(this.addr,!1,Yi),Zi(i,n)}}function sn(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(Ki(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),Zi(i,e)}else{if(Ki(i,n))return;Ji.set(n),t.uniformMatrix4fv(this.addr,!1,Ji),Zi(i,n)}}function an(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function on(t,e){const i=this.cache;Ki(i,e)||(t.uniform2iv(this.addr,e),Zi(i,e))}function ln(t,e){const i=this.cache;Ki(i,e)||(t.uniform3iv(this.addr,e),Zi(i,e))}function cn(t,e){const i=this.cache;Ki(i,e)||(t.uniform4iv(this.addr,e),Zi(i,e))}function hn(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function un(t,e){const i=this.cache;Ki(i,e)||(t.uniform2uiv(this.addr,e),Zi(i,e))}function dn(t,e){const i=this.cache;Ki(i,e)||(t.uniform3uiv(this.addr,e),Zi(i,e))}function gn(t,e){const i=this.cache;Ki(i,e)||(t.uniform4uiv(this.addr,e),Zi(i,e))}function pn(t,e,i){const n=this.cache,A=i.allocateTextureUnit();n[0]!==A&&(t.uniform1i(this.addr,A),n[0]=A),i.safeSetTexture2D(e||Ui,A)}function mn(t,e,i){const n=this.cache,A=i.allocateTextureUnit();n[0]!==A&&(t.uniform1i(this.addr,A),n[0]=A),i.setTexture3D(e||Hi,A)}function fn(t,e,i){const n=this.cache,A=i.allocateTextureUnit();n[0]!==A&&(t.uniform1i(this.addr,A),n[0]=A),i.safeSetTextureCube(e||Oi,A)}function vn(t,e,i){const n=this.cache,A=i.allocateTextureUnit();n[0]!==A&&(t.uniform1i(this.addr,A),n[0]=A),i.setTexture2DArray(e||zi,A)}function yn(t,e){t.uniform1fv(this.addr,e)}function Cn(t,e){const i=Xi(e,this.size,2);t.uniform2fv(this.addr,i)}function In(t,e){const i=Xi(e,this.size,3);t.uniform3fv(this.addr,i)}function xn(t,e){const i=Xi(e,this.size,4);t.uniform4fv(this.addr,i)}function wn(t,e){const i=Xi(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function En(t,e){const i=Xi(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Mn(t,e){const i=Xi(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function _n(t,e){t.uniform1iv(this.addr,e)}function Bn(t,e){t.uniform2iv(this.addr,e)}function bn(t,e){t.uniform3iv(this.addr,e)}function Sn(t,e){t.uniform4iv(this.addr,e)}function Qn(t,e){t.uniform1uiv(this.addr,e)}function Tn(t,e){t.uniform2uiv(this.addr,e)}function Dn(t,e){t.uniform3uiv(this.addr,e)}function Ln(t,e){t.uniform4uiv(this.addr,e)}function Rn(t,e,i){const n=e.length,A=ji(i,n);t.uniform1iv(this.addr,A);for(let t=0;t!==n;++t)i.safeSetTexture2D(e[t]||Ui,A[t])}function Nn(t,e,i){const n=e.length,A=ji(i,n);t.uniform1iv(this.addr,A);for(let t=0;t!==n;++t)i.safeSetTextureCube(e[t]||Oi,A[t])}function Pn(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return $i;case 35664:return tn;case 35665:return en;case 35666:return nn;case 35674:return An;case 35675:return rn;case 35676:return sn;case 5124:case 35670:return an;case 35667:case 35671:return on;case 35668:case 35672:return ln;case 35669:case 35673:return cn;case 5125:return hn;case 36294:return un;case 36295:return dn;case 36296:return gn;case 35678:case 36198:case 36298:case 36306:case 35682:return pn;case 35679:case 36299:case 36307:return mn;case 35680:case 36300:case 36308:case 36293:return fn;case 36289:case 36303:case 36311:case 36292:return vn}}(e.type)}function kn(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return yn;case 35664:return Cn;case 35665:return In;case 35666:return xn;case 35674:return wn;case 35675:return En;case 35676:return Mn;case 5124:case 35670:return _n;case 35667:case 35671:return Bn;case 35668:case 35672:return bn;case 35669:case 35673:return Sn;case 5125:return Qn;case 36294:return Tn;case 36295:return Dn;case 36296:return Ln;case 35678:case 36198:case 36298:case 36306:case 35682:return Rn;case 35680:case 36300:case 36308:case 36293:return Nn}}(e.type)}function Gn(t){this.id=t,this.seq=[],this.map={}}kn.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Zi(e,t)},Gn.prototype.setValue=function(t,e,i){const n=this.seq;for(let A=0,r=n.length;A!==r;++A){const r=n[A];r.setValue(t,e[r.id],i)}};const Fn=/(\w+)(\])?(\[|\.)?/g;function Un(t,e){t.seq.push(e),t.map[e.id]=e}function zn(t,e,i){const n=t.name,A=n.length;for(Fn.lastIndex=0;;){const r=Fn.exec(n),s=Fn.lastIndex;let a=r[1];const o="]"===r[2],l=r[3];if(o&&(a|=0),void 0===l||"["===l&&s+2===A){Un(i,void 0===l?new Pn(a,t,e):new kn(a,t,e));break}{let t=i.map[a];void 0===t&&(t=new Gn(a),Un(i,t)),i=t}}}function Hn(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,35718);for(let n=0;n<i;++n){const i=t.getActiveUniform(e,n);zn(i,t.getUniformLocation(e,i.name),this)}}function On(t,e,i){const n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}Hn.prototype.setValue=function(t,e,i,n){const A=this.map[e];void 0!==A&&A.setValue(t,i,n)},Hn.prototype.setOptional=function(t,e,i){const n=e[i];void 0!==n&&this.setValue(t,i,n)},Hn.upload=function(t,e,i,n){for(let A=0,r=e.length;A!==r;++A){const r=e[A],s=i[r.id];!1!==s.needsUpdate&&r.setValue(t,s.value,n)}},Hn.seqWithValue=function(t,e){const i=[];for(let n=0,A=t.length;n!==A;++n){const A=t[n];A.id in e&&i.push(A)}return i};let Wn=0;function Vn(t){switch(t){case E:return["Linear","( value )"];case M:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Jn(t,e,i){const n=t.getShaderParameter(e,35713),A=t.getShaderInfoLog(e).trim();if(n&&""===A)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+A+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Yn(t,e){const i=Vn(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function qn(t,e){const i=Vn(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function Xn(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function Kn(t){return""!==t}function Zn(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function jn(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const $n=/^[ \t]*#include +<([\w\d./]+)>/gm;function tA(t){return t.replace($n,eA)}function eA(t,e){const i=Ii[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return tA(i)}const iA=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,nA=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function AA(t){return t.replace(nA,sA).replace(iA,rA)}function rA(t,e,i,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sA(t,e,i,n)}function sA(t,e,i,n){let A="";for(let t=parseInt(e);t<parseInt(i);t++)A+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return A}function aA(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function oA(t,e,i,n){const A=t.getContext(),r=i.defines;let s=i.vertexShader,a=i.fragmentShader;const o=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(i),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),c=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(i),h=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(i),u=t.gammaFactor>0?t.gammaFactor:1,d=i.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission>0)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Kn).join("\n")}(i),g=function(t){const e=[];for(const i in t){const n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(r),p=A.createProgram();let m,f,v=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(m=[g].filter(Kn).join("\n"),m.length>0&&(m+="\n"),f=[d,g].filter(Kn).join("\n"),f.length>0&&(f+="\n")):(m=[aA(i),"#define SHADER_NAME "+i.shaderName,g,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+u,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+o:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Kn).join("\n"),f=[d,aA(i),"#define SHADER_NAME "+i.shaderName,g,i.alphaTest?"#define ALPHATEST "+i.alphaTest+(i.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+u,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+l:"",i.envMap?"#define "+c:"",i.envMap?"#define "+h:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.sheen?"#define USE_SHEEN":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+o:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?Ii.tonemapping_pars_fragment:"",0!==i.toneMapping?Xn("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",Ii.encodings_pars_fragment,i.map?Yn("mapTexelToLinear",i.mapEncoding):"",i.matcap?Yn("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?Yn("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?Yn("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.lightMap?Yn("lightMapTexelToLinear",i.lightMapEncoding):"",qn("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(Kn).join("\n")),s=tA(s),s=Zn(s,i),s=jn(s,i),a=tA(a),a=Zn(a,i),a=jn(a,i),s=AA(s),a=AA(a),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(v="#version 300 es\n",m=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,f=["#define varying in",i.glslVersion===S?"":"out highp vec4 pc_fragColor;",i.glslVersion===S?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+f);const y=v+f+a,C=On(A,35633,v+m+s),I=On(A,35632,y);if(A.attachShader(p,C),A.attachShader(p,I),void 0!==i.index0AttributeName?A.bindAttribLocation(p,0,i.index0AttributeName):!0===i.morphTargets&&A.bindAttribLocation(p,0,"position"),A.linkProgram(p),t.debug.checkShaderErrors){const t=A.getProgramInfoLog(p).trim(),e=A.getShaderInfoLog(C).trim(),i=A.getShaderInfoLog(I).trim();let n=!0,r=!0;if(!1===A.getProgramParameter(p,35714)){n=!1;const e=Jn(A,C,"vertex"),i=Jn(A,I,"fragment");console.error("THREE.WebGLProgram: shader error: ",A.getError(),"35715",A.getProgramParameter(p,35715),"gl.getProgramInfoLog",t,e,i)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==i||(r=!1);r&&(this.diagnostics={runnable:n,programLog:t,vertexShader:{log:e,prefix:m},fragmentShader:{log:i,prefix:f}})}let x,w;return A.deleteShader(C),A.deleteShader(I),this.getUniforms=function(){return void 0===x&&(x=new Hn(A,p)),x},this.getAttributes=function(){return void 0===w&&(w=function(t,e){const i={},n=t.getProgramParameter(e,35721);for(let A=0;A<n;A++){const n=t.getActiveAttrib(e,A).name;i[n]=t.getAttribLocation(e,n)}return i}(A,p)),w},this.destroy=function(){n.releaseStatesOfProgram(this),A.deleteProgram(p),this.program=void 0},this.name=i.shaderName,this.id=Wn++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=C,this.fragmentShader=I,this}function lA(t,e,i,n,A,r){const s=[],a=n.isWebGL2,o=n.logarithmicDepthBuffer,l=n.floatVertexTextures,c=n.maxVertexUniforms,h=n.vertexTextures;let u=n.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmission","transmissionMap","thicknessMap"];function p(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=E,e}return{getParameters:function(A,s,g,m,f){const v=m.fog,y=A.isMeshStandardMaterial?m.environment:null,C=e.get(A.envMap||y),I=d[A.type],x=f.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=c,i=Math.floor((t-20)/4),n=Math.min(i,e.length);return n<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+n+"."),0):n}}(f):0;let w,E;if(null!==A.precision&&(u=n.getMaxPrecision(A.precision),u!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",u,"instead.")),I){const t=wi[I];w=t.vertexShader,E=t.fragmentShader}else w=A.vertexShader,E=A.fragmentShader;const M=t.getRenderTarget();return{isWebGL2:a,shaderID:I,shaderName:A.type,vertexShader:w,fragmentShader:E,defines:A.defines,isRawShaderMaterial:!0===A.isRawShaderMaterial,glslVersion:A.glslVersion,precision:u,instancing:!0===f.isInstancedMesh,instancingColor:!0===f.isInstancedMesh&&null!==f.instanceColor,supportsVertexTextures:h,outputEncoding:null!==M?p(M.texture):t.outputEncoding,map:!!A.map,mapEncoding:p(A.map),matcap:!!A.matcap,matcapEncoding:p(A.matcap),envMap:!!C,envMapMode:C&&C.mapping,envMapEncoding:p(C),envMapCubeUV:!!C&&(306===C.mapping||307===C.mapping),lightMap:!!A.lightMap,lightMapEncoding:p(A.lightMap),aoMap:!!A.aoMap,emissiveMap:!!A.emissiveMap,emissiveMapEncoding:p(A.emissiveMap),bumpMap:!!A.bumpMap,normalMap:!!A.normalMap,objectSpaceNormalMap:1===A.normalMapType,tangentSpaceNormalMap:0===A.normalMapType,clearcoatMap:!!A.clearcoatMap,clearcoatRoughnessMap:!!A.clearcoatRoughnessMap,clearcoatNormalMap:!!A.clearcoatNormalMap,displacementMap:!!A.displacementMap,roughnessMap:!!A.roughnessMap,metalnessMap:!!A.metalnessMap,specularMap:!!A.specularMap,alphaMap:!!A.alphaMap,gradientMap:!!A.gradientMap,sheen:!!A.sheen,transmission:!!A.transmission,transmissionMap:!!A.transmissionMap,thicknessMap:!!A.thicknessMap,combine:A.combine,vertexTangents:A.normalMap&&A.vertexTangents,vertexColors:A.vertexColors,vertexAlphas:!0===A.vertexColors&&f.geometry&&f.geometry.attributes.color&&4===f.geometry.attributes.color.itemSize,vertexUvs:!!(A.map||A.bumpMap||A.normalMap||A.specularMap||A.alphaMap||A.emissiveMap||A.roughnessMap||A.metalnessMap||A.clearcoatMap||A.clearcoatRoughnessMap||A.clearcoatNormalMap||A.displacementMap||A.transmissionMap||A.thicknessMap),uvsVertexOnly:!(A.map||A.bumpMap||A.normalMap||A.specularMap||A.alphaMap||A.emissiveMap||A.roughnessMap||A.metalnessMap||A.clearcoatNormalMap||A.transmission||A.transmissionMap||A.thicknessMap||!A.displacementMap),fog:!!v,useFog:A.fog,fogExp2:v&&v.isFogExp2,flatShading:!!A.flatShading,sizeAttenuation:A.sizeAttenuation,logarithmicDepthBuffer:o,skinning:!0===f.isSkinnedMesh&&x>0,maxBones:x,useVertexTexture:l,morphTargets:A.morphTargets,morphNormals:A.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:A.dithering,shadowMapEnabled:t.shadowMap.enabled&&g.length>0,shadowMapType:t.shadowMap.type,toneMapping:A.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:A.premultipliedAlpha,alphaTest:A.alphaTest,doubleSided:2===A.side,flipSided:1===A.side,depthPacking:void 0!==A.depthPacking&&A.depthPacking,index0AttributeName:A.index0AttributeName,extensionDerivatives:A.extensions&&A.extensions.derivatives,extensionFragDepth:A.extensions&&A.extensions.fragDepth,extensionDrawBuffers:A.extensions&&A.extensions.drawBuffers,extensionShaderTextureLOD:A.extensions&&A.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||i.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.fragmentShader),i.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<g.length;t++)i.push(e[g[t]]);i.push(t.outputEncoding),i.push(t.gammaFactor)}return i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=d[t.type];let i;if(e){const t=wi[e];i=ni.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let n;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===i){n=e,++n.usedTimes;break}}return void 0===n&&(n=new oA(t,i,e,A),s.push(n)),n},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function cA(){let t=new WeakMap;return{get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function hA(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function uA(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function dA(t){const e=[];let i=0;const n=[],A=[],r=[],s={id:-1};function a(n,A,r,a,o,l){let c=e[i];const h=t.get(r);return void 0===c?(c={id:n.id,object:n,geometry:A,material:r,program:h.program||s,groupOrder:a,renderOrder:n.renderOrder,z:o,group:l},e[i]=c):(c.id=n.id,c.object=n,c.geometry=A,c.material=r,c.program=h.program||s,c.groupOrder=a,c.renderOrder=n.renderOrder,c.z=o,c.group=l),i++,c}return{opaque:n,transmissive:A,transparent:r,init:function(){i=0,n.length=0,A.length=0,r.length=0},push:function(t,e,i,s,o,l){const c=a(t,e,i,s,o,l);i.transmission>0?A.push(c):!0===i.transparent?r.push(c):n.push(c)},unshift:function(t,e,i,s,o,l){const c=a(t,e,i,s,o,l);i.transmission>0?A.unshift(c):!0===i.transparent?r.unshift(c):n.unshift(c)},finish:function(){for(let t=i,n=e.length;t<n;t++){const i=e[t];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.program=null,i.group=null}},sort:function(t,e){n.length>1&&n.sort(t||hA),A.length>1&&A.sort(e||uA),r.length>1&&r.sort(e||uA)}}}function gA(t){let e=new WeakMap;return{get:function(i,n){let A;return!1===e.has(i)?(A=new dA(t),e.set(i,[A])):n>=e.get(i).length?(A=new dA(t),e.get(i).push(A)):A=e.get(i)[n],A},dispose:function(){e=new WeakMap}}}function pA(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new K,color:new ve};break;case"SpotLight":i={position:new K,direction:new K,color:new ve,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new K,color:new ve,distance:0,decay:0};break;case"HemisphereLight":i={direction:new K,skyColor:new ve,groundColor:new ve};break;case"RectAreaLight":i={color:new ve,position:new K,halfWidth:new K,halfHeight:new K}}return t[e.id]=i,i}}}let mA=0;function fA(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function vA(t,e){const i=new pA,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new F};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new F,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),A={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)A.probe.push(new K);const r=new K,s=new Bt,a=new Bt;return{setup:function(r){let s=0,a=0,o=0;for(let t=0;t<9;t++)A.probe[t].set(0,0,0);let l=0,c=0,h=0,u=0,d=0,g=0,p=0,m=0;r.sort(fA);for(let t=0,e=r.length;t<e;t++){const e=r[t],f=e.color,v=e.intensity,y=e.distance,C=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=f.r*v,a+=f.g*v,o+=f.b*v;else if(e.isLightProbe)for(let t=0;t<9;t++)A.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,A.directionalShadow[l]=i,A.directionalShadowMap[l]=C,A.directionalShadowMatrix[l]=e.shadow.matrix,g++}A.directional[l]=t,l++}else if(e.isSpotLight){const t=i.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(f).multiplyScalar(v),t.distance=y,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,A.spotShadow[h]=i,A.spotShadowMap[h]=C,A.spotShadowMatrix[h]=e.shadow.matrix,m++}A.spot[h]=t,h++}else if(e.isRectAreaLight){const t=i.get(e);t.color.copy(f).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),A.rectArea[u]=t,u++}else if(e.isPointLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,A.pointShadow[c]=i,A.pointShadowMap[c]=C,A.pointShadowMatrix[c]=e.shadow.matrix,p++}A.point[c]=t,c++}else if(e.isHemisphereLight){const t=i.get(e);t.skyColor.copy(e.color).multiplyScalar(v),t.groundColor.copy(e.groundColor).multiplyScalar(v),A.hemi[d]=t,d++}}u>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(A.rectAreaLTC1=xi.LTC_FLOAT_1,A.rectAreaLTC2=xi.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(A.rectAreaLTC1=xi.LTC_HALF_1,A.rectAreaLTC2=xi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),A.ambient[0]=s,A.ambient[1]=a,A.ambient[2]=o;const f=A.hash;f.directionalLength===l&&f.pointLength===c&&f.spotLength===h&&f.rectAreaLength===u&&f.hemiLength===d&&f.numDirectionalShadows===g&&f.numPointShadows===p&&f.numSpotShadows===m||(A.directional.length=l,A.spot.length=h,A.rectArea.length=u,A.point.length=c,A.hemi.length=d,A.directionalShadow.length=g,A.directionalShadowMap.length=g,A.pointShadow.length=p,A.pointShadowMap.length=p,A.spotShadow.length=m,A.spotShadowMap.length=m,A.directionalShadowMatrix.length=g,A.pointShadowMatrix.length=p,A.spotShadowMatrix.length=m,f.directionalLength=l,f.pointLength=c,f.spotLength=h,f.rectAreaLength=u,f.hemiLength=d,f.numDirectionalShadows=g,f.numPointShadows=p,f.numSpotShadows=m,A.version=mA++)},setupView:function(t,e){let i=0,n=0,o=0,l=0,c=0;const h=e.matrixWorldInverse;for(let e=0,u=t.length;e<u;e++){const u=t[e];if(u.isDirectionalLight){const t=A.directional[i];t.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(h),i++}else if(u.isSpotLight){const t=A.spot[o];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(h),o++}else if(u.isRectAreaLight){const t=A.rectArea[l];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),a.identity(),s.copy(u.matrixWorld),s.premultiply(h),a.extractRotation(s),t.halfWidth.set(.5*u.width,0,0),t.halfHeight.set(0,.5*u.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),l++}else if(u.isPointLight){const t=A.point[n];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),n++}else if(u.isHemisphereLight){const t=A.hemi[c];t.direction.setFromMatrixPosition(u.matrixWorld),t.direction.transformDirection(h),t.direction.normalize(),c++}}},state:A}}function yA(t,e){const i=new vA(t,e),n=[],A=[];return{init:function(){n.length=0,A.length=0},state:{lightsArray:n,shadowsArray:A,lights:i},setupLights:function(){i.setup(n)},setupLightsView:function(t){i.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){A.push(t)}}}function CA(t,e){let i=new WeakMap;return{get:function(n,A=0){let r;return!1===i.has(n)?(r=new yA(t,e),i.set(n,[r])):A>=i.get(n).length?(r=new yA(t,e),i.get(n).push(r)):r=i.get(n)[A],r},dispose:function(){i=new WeakMap}}}class IA extends he{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}IA.prototype.isMeshDepthMaterial=!0;class xA extends he{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new K,this.nearDistance=1,this.farDistance=1e3,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}xA.prototype.isMeshDistanceMaterial=!0;function wA(t,e,i){let n=new fi;const s=new F,a=new F,o=new J,l=[],c=[],h={},u=i.maxTextureSize,d={0:1,1:0,2:2},p=new Ai({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new F},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=p.clone();m.defines.HORIZONTAL_PASS=1;const f=new Re;f.setAttribute("position",new xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new je(f,p),y=this;function C(i,n){const A=e.update(v);p.uniforms.shadow_pass.value=i.map.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,A,p,v,null),m.uniforms.shadow_pass.value=i.mapPass.texture,m.uniforms.resolution.value=i.mapSize,m.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,A,m,v,null)}function I(t){const e=t<<0;let i=l[e];return void 0===i&&(i=new IA({depthPacking:3201,morphTargets:t}),l[e]=i),i}function x(t){const e=t<<0;let i=c[e];return void 0===i&&(i=new xA({morphTargets:t}),c[e]=i),i}function w(e,i,n,A,r,s,a){let o=null,l=I,c=e.customDepthMaterial;if(!0===A.isPointLight&&(l=x,c=e.customDistanceMaterial),void 0===c){let t=!1;!0===n.morphTargets&&(t=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0),o=l(t)}else o=c;if(t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const t=o.uuid,e=n.uuid;let i=h[t];void 0===i&&(i={},h[t]=i);let A=i[e];void 0===A&&(A=o.clone(),i[e]=A),o=A}return o.visible=n.visible,o.wireframe=n.wireframe,o.side=3===a?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:d[n.side],o.clipShadows=n.clipShadows,o.clippingPlanes=n.clippingPlanes,o.clipIntersection=n.clipIntersection,o.wireframeLinewidth=n.wireframeLinewidth,o.linewidth=n.linewidth,!0===A.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(A.matrixWorld),o.nearDistance=r,o.farDistance=s),o}function E(i,A,r,s,a){if(!1===i.visible)return;if(i.layers.test(A.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===a)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,i.matrixWorld);const n=e.update(i),A=i.material;if(Array.isArray(A)){const e=n.groups;for(let o=0,l=e.length;o<l;o++){const l=e[o],c=A[l.materialIndex];if(c&&c.visible){const e=w(i,n,c,s,r.near,r.far,a);t.renderBufferDirect(r,null,n,e,i,l)}}}else if(A.visible){const e=w(i,n,A,s,r.near,r.far,a);t.renderBufferDirect(r,null,n,e,i,null)}}const o=i.children;for(let t=0,e=o.length;t<e;t++)E(o[t],A,r,s,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,i,l){if(!1===y.enabled)return;if(!1===y.autoUpdate&&!1===y.needsUpdate)return;if(0===e.length)return;const c=t.getRenderTarget(),h=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let c=0,h=e.length;c<h;c++){const h=e[c],d=h.shadow;if(void 0===d){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===d.autoUpdate&&!1===d.needsUpdate)continue;s.copy(d.mapSize);const m=d.getFrameExtents();if(s.multiply(m),a.copy(d.mapSize),(s.x>u||s.y>u)&&(s.x>u&&(a.x=Math.floor(u/m.x),s.x=a.x*m.x,d.mapSize.x=a.x),s.y>u&&(a.y=Math.floor(u/m.y),s.y=a.y*m.y,d.mapSize.y=a.y)),null===d.map&&!d.isPointLightShadow&&3===this.type){const t={minFilter:r,magFilter:r,format:g};d.map=new Y(s.x,s.y,t),d.map.texture.name=h.name+".shadowMap",d.mapPass=new Y(s.x,s.y,t),d.camera.updateProjectionMatrix()}if(null===d.map){const t={minFilter:A,magFilter:A,format:g};d.map=new Y(s.x,s.y,t),d.map.texture.name=h.name+".shadowMap",d.camera.updateProjectionMatrix()}t.setRenderTarget(d.map),t.clear();const f=d.getViewportCount();for(let t=0;t<f;t++){const e=d.getViewport(t);o.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),p.viewport(o),d.updateMatrices(h,t),n=d.getFrustum(),E(i,l,d.camera,h,this.type)}d.isPointLightShadow||3!==this.type||C(d,l),d.needsUpdate=!1}y.needsUpdate=!1,t.setRenderTarget(c,h,d)}}function EA(e,i,n){const A=n.isWebGL2;const r=new function(){let t=!1;const i=new J;let n=null;const A=new J(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,r,s,a){!0===a&&(t*=s,n*=s,r*=s),i.set(t,n,r,s),!1===A.equals(i)&&(e.clearColor(t,n,r,s),A.copy(i))},reset:function(){t=!1,n=null,A.set(-1,0,0,0)}}},s=new function(){let t=!1,i=null,n=null,A=null;return{setTest:function(t){t?G(2929):F(2929)},setMask:function(n){i===n||t||(e.depthMask(n),i=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){A!==t&&(e.clearDepth(t),A=t)},reset:function(){t=!1,i=null,n=null,A=null}}},a=new function(){let t=!1,i=null,n=null,A=null,r=null,s=null,a=null,o=null,l=null;return{setTest:function(e){t||(e?G(2960):F(2960))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,s){n===t&&A===i&&r===s||(e.stencilFunc(t,i,s),n=t,A=i,r=s)},setOp:function(t,i,n){s===t&&a===i&&o===n||(e.stencilOp(t,i,n),s=t,a=i,o=n)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,i=null,n=null,A=null,r=null,s=null,a=null,o=null,l=null}}};let o={},l=null,c={},h=null,u=!1,d=null,g=null,p=null,m=null,f=null,v=null,y=null,C=!1,I=null,x=null,w=null,E=null,M=null;const _=e.getParameter(35661);let B=!1,b=0;const S=e.getParameter(7938);-1!==S.indexOf("WebGL")?(b=parseFloat(/^WebGL (\d)/.exec(S)[1]),B=b>=1):-1!==S.indexOf("OpenGL ES")&&(b=parseFloat(/^OpenGL ES (\d)/.exec(S)[1]),B=b>=2);let Q=null,T={};const D=e.getParameter(3088),L=e.getParameter(2978),R=(new J).fromArray(D),N=(new J).fromArray(L);function P(t,i,n){const A=new Uint8Array(4),r=e.createTexture();e.bindTexture(t,r),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<n;t++)e.texImage2D(i+t,0,6408,1,1,0,6408,5121,A);return r}const k={};function G(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function F(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}k[3553]=P(3553,3553,1),k[34067]=P(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),a.setClear(0),G(2929),s.setFunc(3),O(!1),W(1),G(2884),H(0);const U={[t]:32774,101:32778,102:32779};if(A)U[103]=32775,U[104]=32776;else{const t=i.get("EXT_blend_minmax");null!==t&&(U[103]=t.MIN_EXT,U[104]=t.MAX_EXT)}const z={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function H(i,n,A,r,s,a,o,l){if(0!==i){if(!1===u&&(G(3042),u=!0),5===i)s=s||n,a=a||A,o=o||r,n===g&&s===f||(e.blendEquationSeparate(U[n],U[s]),g=n,f=s),A===p&&r===m&&a===v&&o===y||(e.blendFuncSeparate(z[A],z[r],z[a],z[o]),p=A,m=r,v=a,y=o),d=i,C=null;else if(i!==d||l!==C){if(g===t&&f===t||(e.blendEquation(32774),g=t,f=t),l)switch(i){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",i)}else switch(i){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",i)}p=null,m=null,v=null,y=null,d=i,C=l}}else!0===u&&(F(3042),u=!1)}function O(t){I!==t&&(t?e.frontFace(2304):e.frontFace(2305),I=t)}function W(t){0!==t?(G(2884),t!==x&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):F(2884),x=t}function V(t,i,n){t?(G(32823),E===i&&M===n||(e.polygonOffset(i,n),E=i,M=n)):F(32823)}function Y(t){void 0===t&&(t=33984+_-1),Q!==t&&(e.activeTexture(t),Q=t)}return{buffers:{color:r,depth:s,stencil:a},enable:G,disable:F,bindFramebuffer:function(t,i){return null===i&&null!==l&&(i=l),c[t]!==i&&(e.bindFramebuffer(t,i),c[t]=i,A&&(36009===t&&(c[36160]=i),36160===t&&(c[36009]=i)),!0)},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return h!==t&&(e.useProgram(t),h=t,!0)},setBlending:H,setMaterial:function(t,e){2===t.side?F(2884):G(2884);let i=1===t.side;e&&(i=!i),O(i),1===t.blending&&!1===t.transparent?H(0):H(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),r.setMask(t.colorWrite);const n=t.stencilWrite;a.setTest(n),n&&(a.setMask(t.stencilWriteMask),a.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),a.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),V(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?G(32926):F(32926)},setFlipSided:O,setCullFace:W,setLineWidth:function(t){t!==w&&(B&&e.lineWidth(t),w=t)},setPolygonOffset:V,setScissorTest:function(t){t?G(3089):F(3089)},activeTexture:Y,bindTexture:function(t,i){null===Q&&Y();let n=T[Q];void 0===n&&(n={type:void 0,texture:void 0},T[Q]=n),n.type===t&&n.texture===i||(e.bindTexture(t,i||k[t]),n.type=t,n.texture=i)},unbindTexture:function(){const t=T[Q];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===R.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),R.copy(t))},viewport:function(t){!1===N.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),N.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===A&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},Q=null,T={},l=null,c={},h=null,u=!1,d=null,g=null,p=null,m=null,f=null,v=null,y=null,C=!1,I=null,x=null,w=null,E=null,M=null,R.set(0,0,e.canvas.width,e.canvas.height),N.set(0,0,e.canvas.width,e.canvas.height),r.reset(),s.reset(),a.reset()}}}function MA(t,a,f,v,y,C,I){const x=y.isWebGL2,w=y.maxTextures,E=y.maxCubemapSize,M=y.maxTextureSize,_=y.maxSamples,B=new WeakMap;let b,S=!1;try{S="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function Q(t,e){return S?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function T(t,e,i,n){let A=1;if((t.width>n||t.height>n)&&(A=n/Math.max(t.width,t.height)),A<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const n=e?G:Math.floor,r=n(A*t.width),s=n(A*t.height);void 0===b&&(b=Q(r,s));const a=i?Q(r,s):b;a.width=r,a.height=s;return a.getContext("2d").drawImage(t,0,0,r,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+r+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function D(t){return k(t.width)&&k(t.height)}function L(t,e){return t.generateMipmaps&&e&&t.minFilter!==A&&t.minFilter!==r}function R(e,i,n,A,r=1){t.generateMipmap(e);v.get(i).__maxMipLevel=Math.log2(Math.max(n,A,r))}function N(e,i,n){if(!1===x)return i;if(null!==e){if(void 0!==t[e])return t[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let A=i;return 6403===i&&(5126===n&&(A=33326),5131===n&&(A=33325),5121===n&&(A=33321)),6407===i&&(5126===n&&(A=34837),5131===n&&(A=34843),5121===n&&(A=32849)),6408===i&&(5126===n&&(A=34836),5131===n&&(A=34842),5121===n&&(A=32856)),33325!==A&&33326!==A&&34842!==A&&34836!==A||a.get("EXT_color_buffer_float"),A}function P(t){return t===A||1004===t||1005===t?9728:9729}function F(e){const i=e.target;i.removeEventListener("dispose",F),function(e){const i=v.get(e);if(void 0===i.__webglInit)return;t.deleteTexture(i.__webglTexture),v.remove(e)}(i),i.isVideoTexture&&B.delete(i),I.memory.textures--}function U(e){const i=e.target;i.removeEventListener("dispose",U),function(e){const i=e.texture,n=v.get(e),A=v.get(i);if(!e)return;void 0!==A.__webglTexture&&(t.deleteTexture(A.__webglTexture),I.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,n=i.length;e<n;e++){const n=v.get(i[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),I.memory.textures--),v.remove(i[e])}v.remove(i),v.remove(e)}(i)}let z=0;function H(t,e){const i=v.get(t);if(t.isVideoTexture&&function(t){const e=I.render.frame;B.get(t)!==e&&(B.set(t,e),t.update())}(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void q(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}f.activeTexture(33984+e),f.bindTexture(3553,i.__webglTexture)}function O(e,i){const n=v.get(e);e.version>0&&n.__version!==e.version?function(e,i,n){if(6!==i.image.length)return;Y(e,i),f.activeTexture(33984+n),f.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const A=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),r=i.image[0]&&i.image[0].isDataTexture,s=[];for(let t=0;t<6;t++)s[t]=A||r?r?i.image[t].image:i.image[t]:T(i.image[t],!1,!0,E);const a=s[0],o=D(a)||x,l=C.convert(i.format),c=C.convert(i.type),h=N(i.internalFormat,l,c);let u;if(J(34067,i,o),A){for(let t=0;t<6;t++){u=s[t].mipmaps;for(let e=0;e<u.length;e++){const n=u[e];i.format!==g&&i.format!==d?null!==l?f.compressedTexImage2D(34069+t,e,h,n.width,n.height,0,n.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):f.texImage2D(34069+t,e,h,n.width,n.height,0,l,c,n.data)}}e.__maxMipLevel=u.length-1}else{u=i.mipmaps;for(let t=0;t<6;t++)if(r){f.texImage2D(34069+t,0,h,s[t].width,s[t].height,0,l,c,s[t].data);for(let e=0;e<u.length;e++){const i=u[e].image[t].image;f.texImage2D(34069+t,e+1,h,i.width,i.height,0,l,c,i.data)}}else{f.texImage2D(34069+t,0,h,l,c,s[t]);for(let e=0;e<u.length;e++){const i=u[e];f.texImage2D(34069+t,e+1,h,l,c,i.image[t])}}e.__maxMipLevel=u.length}L(i,o)&&R(34067,i,a.width,a.height);e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(n,e,i):(f.activeTexture(33984+i),f.bindTexture(34067,n.__webglTexture))}const W={[e]:10497,[i]:33071,[n]:33648},V={[A]:9728,1004:9984,1005:9986,[r]:9729,1007:9985,[s]:9987};function J(e,n,s){if(s?(t.texParameteri(e,10242,W[n.wrapS]),t.texParameteri(e,10243,W[n.wrapT]),32879!==e&&35866!==e||t.texParameteri(e,32882,W[n.wrapR]),t.texParameteri(e,10240,V[n.magFilter]),t.texParameteri(e,10241,V[n.minFilter])):(t.texParameteri(e,10242,33071),t.texParameteri(e,10243,33071),32879!==e&&35866!==e||t.texParameteri(e,32882,33071),n.wrapS===i&&n.wrapT===i||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(e,10240,P(n.magFilter)),t.texParameteri(e,10241,P(n.minFilter)),n.minFilter!==A&&n.minFilter!==r&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===a.has("EXT_texture_filter_anisotropic")){const i=a.get("EXT_texture_filter_anisotropic");if(n.type===c&&!1===a.has("OES_texture_float_linear"))return;if(!1===x&&n.type===h&&!1===a.has("OES_texture_half_float_linear"))return;(n.anisotropy>1||v.get(n).__currentAnisotropy)&&(t.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(n.anisotropy,y.getMaxAnisotropy())),v.get(n).__currentAnisotropy=n.anisotropy)}}function Y(e,i){void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",F),e.__webglTexture=t.createTexture(),I.memory.textures++)}function q(e,n,s){let a=3553;n.isDataTexture2DArray&&(a=35866),n.isDataTexture3D&&(a=32879),Y(e,n),f.activeTexture(33984+s),f.bindTexture(a,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const h=function(t){return!x&&(t.wrapS!==i||t.wrapT!==i||t.minFilter!==A&&t.minFilter!==r)}(n)&&!1===D(n.image),v=T(n.image,h,!1,M),y=D(v)||x,I=C.convert(n.format);let w,E=C.convert(n.type),_=N(n.internalFormat,I,E);J(a,n,y);const B=n.mipmaps;if(n.isDepthTexture)_=6402,x?_=n.type===c?36012:n.type===l?33190:n.type===u?35056:33189:n.type===c&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===p&&6402===_&&n.type!==o&&n.type!==l&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=o,E=C.convert(n.type)),n.format===m&&6402===_&&(_=34041,n.type!==u&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=u,E=C.convert(n.type))),f.texImage2D(3553,0,_,v.width,v.height,0,I,E,null);else if(n.isDataTexture)if(B.length>0&&y){for(let t=0,e=B.length;t<e;t++)w=B[t],f.texImage2D(3553,t,_,w.width,w.height,0,I,E,w.data);n.generateMipmaps=!1,e.__maxMipLevel=B.length-1}else f.texImage2D(3553,0,_,v.width,v.height,0,I,E,v.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=B.length;t<e;t++)w=B[t],n.format!==g&&n.format!==d?null!==I?f.compressedTexImage2D(3553,t,_,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):f.texImage2D(3553,t,_,w.width,w.height,0,I,E,w.data);e.__maxMipLevel=B.length-1}else if(n.isDataTexture2DArray)f.texImage3D(35866,0,_,v.width,v.height,v.depth,0,I,E,v.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)f.texImage3D(32879,0,_,v.width,v.height,v.depth,0,I,E,v.data),e.__maxMipLevel=0;else if(B.length>0&&y){for(let t=0,e=B.length;t<e;t++)w=B[t],f.texImage2D(3553,t,_,I,E,w);n.generateMipmaps=!1,e.__maxMipLevel=B.length-1}else f.texImage2D(3553,0,_,I,E,v),e.__maxMipLevel=0;L(n,y)&&R(a,n,v.width,v.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function X(e,i,n,A,r){const s=C.convert(n.format),a=C.convert(n.type),o=N(n.internalFormat,s,a);32879===r||35866===r?f.texImage3D(r,0,o,i.width,i.height,i.depth,0,s,a,null):f.texImage2D(r,0,o,i.width,i.height,0,s,a,null),f.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,A,r,v.get(n).__webglTexture,0),f.bindFramebuffer(36160,null)}function K(e,i,n){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){let A=33189;if(n){const e=i.depthTexture;e&&e.isDepthTexture&&(e.type===c?A=36012:e.type===l&&(A=33190));const n=j(i);t.renderbufferStorageMultisample(36161,n,A,i.width,i.height)}else t.renderbufferStorage(36161,A,i.width,i.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer){if(n){const e=j(i);t.renderbufferStorageMultisample(36161,e,35056,i.width,i.height)}else t.renderbufferStorage(36161,34041,i.width,i.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===i.isWebGLMultipleRenderTargets?i.texture[0]:i.texture,A=C.convert(e.format),r=C.convert(e.type),s=N(e.internalFormat,A,r);if(n){const e=j(i);t.renderbufferStorageMultisample(36161,e,s,i.width,i.height)}else t.renderbufferStorage(36161,s,i.width,i.height)}t.bindRenderbuffer(36161,null)}function Z(e){const i=v.get(e),n=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(n)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(f.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");v.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),H(i.depthTexture,0);const n=v.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===p)t.framebufferTexture2D(36160,36096,3553,n,0);else{if(i.depthTexture.format!==m)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,n,0)}}(i.__webglFramebuffer,e)}else if(n){i.__webglDepthbuffer=[];for(let n=0;n<6;n++)f.bindFramebuffer(36160,i.__webglFramebuffer[n]),i.__webglDepthbuffer[n]=t.createRenderbuffer(),K(i.__webglDepthbuffer[n],e,!1)}else f.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),K(i.__webglDepthbuffer,e,!1);f.bindFramebuffer(36160,null)}function j(t){return x&&t.isWebGLMultisampleRenderTarget?Math.min(_,t.samples):0}let $=!1,tt=!1;this.allocateTextureUnit=function(){const t=z;return t>=w&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+w),z+=1,t},this.resetTextureUnits=function(){z=0},this.setTexture2D=H,this.setTexture2DArray=function(t,e){const i=v.get(t);t.version>0&&i.__version!==t.version?q(i,t,e):(f.activeTexture(33984+e),f.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){const i=v.get(t);t.version>0&&i.__version!==t.version?q(i,t,e):(f.activeTexture(33984+e),f.bindTexture(32879,i.__webglTexture))},this.setTextureCube=O,this.setupRenderTarget=function(e){const i=e.texture,n=v.get(e),A=v.get(i);e.addEventListener("dispose",U),!0!==e.isWebGLMultipleRenderTargets&&(A.__webglTexture=t.createTexture(),A.__version=i.version,I.memory.textures++);const r=!0===e.isWebGLCubeRenderTarget,s=!0===e.isWebGLMultipleRenderTargets,a=!0===e.isWebGLMultisampleRenderTarget,o=i.isDataTexture3D||i.isDataTexture2DArray,l=D(e)||x;if(!x||i.format!==d||i.type!==c&&i.type!==h||(i.format=g,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),r){n.__webglFramebuffer=[];for(let e=0;e<6;e++)n.__webglFramebuffer[e]=t.createFramebuffer()}else if(n.__webglFramebuffer=t.createFramebuffer(),s)if(y.drawBuffers){const i=e.texture;for(let e=0,n=i.length;e<n;e++){const n=v.get(i[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),I.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a)if(x){n.__webglMultisampledFramebuffer=t.createFramebuffer(),n.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,n.__webglColorRenderbuffer);const A=C.convert(i.format),r=C.convert(i.type),s=N(i.internalFormat,A,r),a=j(e);t.renderbufferStorageMultisample(36161,a,s,e.width,e.height),f.bindFramebuffer(36160,n.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,n.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(n.__webglDepthRenderbuffer=t.createRenderbuffer(),K(n.__webglDepthRenderbuffer,e,!0)),f.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(r){f.bindTexture(34067,A.__webglTexture),J(34067,i,l);for(let t=0;t<6;t++)X(n.__webglFramebuffer[t],e,i,36064,34069+t);L(i,l)&&R(34067,i,e.width,e.height),f.bindTexture(34067,null)}else if(s){const t=e.texture;for(let i=0,A=t.length;i<A;i++){const A=t[i],r=v.get(A);f.bindTexture(3553,r.__webglTexture),J(3553,A,l),X(n.__webglFramebuffer,e,A,36064+i,3553),L(A,l)&&R(3553,A,e.width,e.height)}f.bindTexture(3553,null)}else{let t=3553;if(o)if(x){t=i.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");f.bindTexture(t,A.__webglTexture),J(t,i,l),X(n.__webglFramebuffer,e,i,36064,t),L(i,l)&&R(t,i,e.width,e.height,e.depth),f.bindTexture(t,null)}e.depthBuffer&&Z(e)},this.updateRenderTargetMipmap=function(t){const e=D(t)||x,i=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let n=0,A=i.length;n<A;n++){const A=i[n];if(L(A,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,i=v.get(A).__webglTexture;f.bindTexture(e,i),R(e,A,t.width,t.height),f.bindTexture(e,null)}}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(x){const i=e.width,n=e.height;let A=16384;e.depthBuffer&&(A|=256),e.stencilBuffer&&(A|=1024);const r=v.get(e);f.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),f.bindFramebuffer(36009,r.__webglFramebuffer),t.blitFramebuffer(0,0,i,n,0,0,i,n,A,9728),f.bindFramebuffer(36008,null),f.bindFramebuffer(36009,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===$&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),$=!0),t=t.texture),H(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===tt&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),tt=!0),t=t.texture),O(t,e)}}function _A(t,e,i){const n=i.isWebGL2;return{convert:function(t){let i;if(t===a)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===o)return 5123;if(1013===t)return 5124;if(t===l)return 5125;if(t===c)return 5126;if(t===h)return n?5131:(i=e.get("OES_texture_half_float"),null!==i?i.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===d)return 6407;if(t===g)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===p)return 6402;if(t===m)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(i=e.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(33776===t)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(i=e.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(35840===t)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return i=e.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(i=e.get("WEBGL_compressed_texture_etc"),null!==i)){if(37492===t)return i.COMPRESSED_RGB8_ETC2;if(37496===t)return i.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(i=e.get("WEBGL_compressed_texture_astc"),null!==i?t:null):36492===t?(i=e.get("EXT_texture_compression_bptc"),null!==i?t:null):t===u?n?34042:(i=e.get("WEBGL_depth_texture"),null!==i?i.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class BA extends si{constructor(t=[]){super(),this.cameras=t}}BA.prototype.isArrayCamera=!0;class bA extends jt{constructor(){super(),this.type="Group"}}bA.prototype.isGroup=!0;const SA={type:"move"};class QA{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new bA,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new bA,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new K,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new K),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new bA,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new K,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new K),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let n=null,A=null,r=null;const s=this._targetRay,a=this._grip,o=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(n=e.getPose(t.targetRaySpace,i),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(SA))),o&&t.hand){r=!0;for(const n of t.hand.values()){const t=e.getJointPose(n,i);if(void 0===o.joints[n.jointName]){const t=new bA;t.matrixAutoUpdate=!1,t.visible=!1,o.joints[n.jointName]=t,o.add(t)}const A=o.joints[n.jointName];null!==t&&(A.matrix.fromArray(t.transform.matrix),A.matrix.decompose(A.position,A.rotation,A.scale),A.jointRadius=t.radius),A.visible=null!==t}const n=o.joints["index-finger-tip"],A=o.joints["thumb-tip"],s=n.position.distanceTo(A.position),a=.02,l=.005;o.inputState.pinching&&s>a+l?(o.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!o.inputState.pinching&&s<=a-l&&(o.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&(A=e.getPose(t.gripSpace,i),null!==A&&(a.matrix.fromArray(A.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),A.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(A.linearVelocity)):a.hasLinearVelocity=!1,A.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(A.angularVelocity)):a.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==n),null!==a&&(a.visible=null!==A),null!==o&&(o.visible=null!==r),this}}class TA extends Q{constructor(t,e){super();const i=this,n=t.state;let A=null,r=1,s=null,a="local-floor",o=null,l=null,c=null,h=null;const u=[],d=new Map,g=new si;g.layers.enable(1),g.viewport=new J;const p=new si;p.layers.enable(2),p.viewport=new J;const m=[g,p],f=new BA;f.layers.enable(1),f.layers.enable(2);let v=null,y=null;function C(t){const e=d.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function I(){d.forEach((function(t,e){t.disconnect(e)})),d.clear(),v=null,y=null,n.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),B.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function x(t){const e=A.inputSources;for(let t=0;t<u.length;t++)d.set(e[t],u[t]);for(let e=0;e<t.removed.length;e++){const i=t.removed[e],n=d.get(i);n&&(n.dispatchEvent({type:"disconnected",data:i}),d.delete(i))}for(let e=0;e<t.added.length;e++){const i=t.added[e],n=d.get(i);n&&n.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=u[t];return void 0===e&&(e=new QA,u[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=u[t];return void 0===e&&(e=new QA,u[t]=e),e.getGripSpace()},this.getHand=function(t){let e=u[t];return void 0===e&&(e=new QA,u[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return A},this.setSession=async function(t){if(A=t,null!==A){A.addEventListener("select",C),A.addEventListener("selectstart",C),A.addEventListener("selectend",C),A.addEventListener("squeeze",C),A.addEventListener("squeezestart",C),A.addEventListener("squeezeend",C),A.addEventListener("end",I),A.addEventListener("inputsourceschange",x);const t=e.getContextAttributes();if(!0!==t.xrCompatible&&await e.makeXRCompatible(),void 0===A.renderState.layers){const i={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:r},n=new XRWebGLLayer(A,e,i);A.updateRenderState({baseLayer:n})}else{let i=0;t.depth&&(i=t.stencil?34041:6402);const n={colorFormat:t.alpha?6408:6407,depthFormat:i,scaleFactor:r};l=new XRWebGLBinding(A,e),h=l.createProjectionLayer(n),c=e.createFramebuffer(),A.updateRenderState({layers:[h]})}s=await A.requestReferenceSpace(a),B.setContext(A),B.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const w=new K,E=new K;function M(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===A)return;f.near=p.near=g.near=t.near,f.far=p.far=g.far=t.far,v===f.near&&y===f.far||(A.updateRenderState({depthNear:f.near,depthFar:f.far}),v=f.near,y=f.far);const e=t.parent,i=f.cameras;M(f,e);for(let t=0;t<i.length;t++)M(i[t],e);f.matrixWorld.decompose(f.position,f.quaternion,f.scale),t.position.copy(f.position),t.quaternion.copy(f.quaternion),t.scale.copy(f.scale),t.matrix.copy(f.matrix),t.matrixWorld.copy(f.matrixWorld);const n=t.children;for(let t=0,e=n.length;t<e;t++)n[t].updateMatrixWorld(!0);2===i.length?function(t,e,i){w.setFromMatrixPosition(e.matrixWorld),E.setFromMatrixPosition(i.matrixWorld);const n=w.distanceTo(E),A=e.projectionMatrix.elements,r=i.projectionMatrix.elements,s=A[14]/(A[10]-1),a=A[14]/(A[10]+1),o=(A[9]+1)/A[5],l=(A[9]-1)/A[5],c=(A[8]-1)/A[0],h=(r[8]+1)/r[0],u=s*c,d=s*h,g=n/(-c+h),p=g*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(p),t.translateZ(g),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const m=s+g,f=a+g,v=u-p,y=d+(n-p),C=o*a/f*m,I=l*a/f*m;t.projectionMatrix.makePerspective(v,y,C,I,m,f)}(f,g,p):f.projectionMatrix.copy(g.projectionMatrix)},this.getCamera=function(){return f};let _=null;const B=new vi;B.setAnimationLoop((function(t,i){if(o=i.getViewerPose(s),null!==o){const t=o.views,i=A.renderState.baseLayer;void 0===A.renderState.layers&&n.bindXRFramebuffer(i.framebuffer);let r=!1;t.length!==f.cameras.length&&(f.cameras.length=0,r=!0);for(let s=0;s<t.length;s++){const a=t[s];let o=null;if(void 0===A.renderState.layers)o=i.getViewport(a);else{const t=l.getViewSubImage(h,a);n.bindXRFramebuffer(c),e.framebufferTexture2D(36160,36064,3553,t.colorTexture,0),void 0!==t.depthStencilTexture&&e.framebufferTexture2D(36160,36096,3553,t.depthStencilTexture,0),o=t.viewport}const u=m[s];u.matrix.fromArray(a.transform.matrix),u.projectionMatrix.fromArray(a.projectionMatrix),u.viewport.set(o.x,o.y,o.width,o.height),0===s&&f.matrix.copy(u.matrix),!0===r&&f.cameras.push(u)}}const r=A.inputSources;for(let t=0;t<u.length;t++){const e=u[t],n=r[t];e.update(n,i,s)}_&&_(t,i)})),this.setAnimationLoop=function(t){_=t},this.dispose=function(){}}}function DA(t){function e(e,i){e.opacity.value=i.opacity,i.color&&e.diffuse.value.copy(i.color),i.emissive&&e.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(e.map.value=i.map),i.alphaMap&&(e.alphaMap.value=i.alphaMap),i.specularMap&&(e.specularMap.value=i.specularMap);const n=t.get(i).envMap;if(n){e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,e.reflectivity.value=i.reflectivity,e.refractionRatio.value=i.refractionRatio;const A=t.get(n).__maxMipLevel;void 0!==A&&(e.maxMipLevel.value=A)}let A,r;i.lightMap&&(e.lightMap.value=i.lightMap,e.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(e.aoMap.value=i.aoMap,e.aoMapIntensity.value=i.aoMapIntensity),i.map?A=i.map:i.specularMap?A=i.specularMap:i.displacementMap?A=i.displacementMap:i.normalMap?A=i.normalMap:i.bumpMap?A=i.bumpMap:i.roughnessMap?A=i.roughnessMap:i.metalnessMap?A=i.metalnessMap:i.alphaMap?A=i.alphaMap:i.emissiveMap?A=i.emissiveMap:i.clearcoatMap?A=i.clearcoatMap:i.clearcoatNormalMap?A=i.clearcoatNormalMap:i.clearcoatRoughnessMap&&(A=i.clearcoatRoughnessMap),void 0!==A&&(A.isWebGLRenderTarget&&(A=A.texture),!0===A.matrixAutoUpdate&&A.updateMatrix(),e.uvTransform.value.copy(A.matrix)),i.aoMap?r=i.aoMap:i.lightMap&&(r=i.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uv2Transform.value.copy(r.matrix))}function i(e,i){e.roughness.value=i.roughness,e.metalness.value=i.metalness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(e.emissiveMap.value=i.emissiveMap),i.bumpMap&&(e.bumpMap.value=i.bumpMap,e.bumpScale.value=i.bumpScale,1===i.side&&(e.bumpScale.value*=-1)),i.normalMap&&(e.normalMap.value=i.normalMap,e.normalScale.value.copy(i.normalScale),1===i.side&&e.normalScale.value.negate()),i.displacementMap&&(e.displacementMap.value=i.displacementMap,e.displacementScale.value=i.displacementScale,e.displacementBias.value=i.displacementBias);t.get(i).envMap&&(e.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,n,A,r,s){n.isMeshBasicMaterial?e(t,n):n.isMeshLambertMaterial?(e(t,n),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,n)):n.isMeshToonMaterial?(e(t,n),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshPhongMaterial?(e(t,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshStandardMaterial?(e(t,n),n.isMeshPhysicalMaterial?function(t,e,n){i(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap);e.transmission>0&&(t.transmissionSamplerMap.value=n.texture,t.transmissionSamplerSize.value.set(n.width,n.height));t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap);t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)}(t,n,s):i(t,n)):n.isMeshMatcapMaterial?(e(t,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshDepthMaterial?(e(t,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshDistanceMaterial?(e(t,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,n)):n.isMeshNormalMaterial?(e(t,n),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,n)):n.isPointsMaterial?function(t,e,i,n){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*n,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let A;e.map?A=e.map:e.alphaMap&&(A=e.alphaMap);void 0!==A&&(!0===A.matrixAutoUpdate&&A.updateMatrix(),t.uvTransform.value.copy(A.matrix))}(t,n,A,r):n.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let i;e.map?i=e.map:e.alphaMap&&(i=e.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,n):n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function LA(t={}){const e=void 0!==t.canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,o=void 0===t.depth||t.depth,l=void 0===t.stencil||t.stencil,u=void 0!==t.antialias&&t.antialias,d=void 0===t.premultipliedAlpha||t.premultipliedAlpha,p=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,m=void 0!==t.powerPreference?t.powerPreference:"default",f=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let v=null,y=null;const C=[],I=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=E,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const x=this;let w=!1,M=0,_=0,B=null,b=-1,S=null;const Q=new J,T=new J;let D=null,L=e.width,R=e.height,N=1,P=null,k=null;const G=new J(0,0,L,R),F=new J(0,0,L,R);let U=!1;const z=[],H=new fi;let O=!1,W=!1,V=null;const X=new Bt,Z=new K,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function $(){return null===B?N:1}let tt,et,it,nt,At,rt,st,at,ot,lt,ct,ht,ut,dt,gt,pt,mt,ft,vt,yt,Ct,It,xt=n;function wt(t,i){for(let n=0;n<t.length;n++){const A=t[n],r=e.getContext(A,i);if(null!==r)return r}return null}try{const t={alpha:r,depth:o,stencil:l,antialias:u,premultipliedAlpha:d,preserveDrawingBuffer:p,powerPreference:m,failIfMajorPerformanceCaveat:f};if(e.addEventListener("webglcontextlost",_t,!1),e.addEventListener("webglcontextrestored",bt,!1),null===xt){const e=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&e.shift(),xt=wt(e,t),null===xt)throw wt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Et(){tt=new Qi(xt),et=new Bi(xt,tt,t),tt.init(et),Ct=new _A(xt,tt,et),it=new EA(xt,tt,et),z[0]=1029,nt=new Li(xt),At=new cA,rt=new MA(xt,tt,it,At,et,Ct,nt),st=new Si(x),at=new yi(xt,et),It=new Mi(xt,tt,at,et),ot=new Ti(xt,at,nt,It),lt=new ki(xt,ot,at,nt),ft=new Pi(xt),gt=new bi(At),ct=new lA(x,st,tt,et,It,gt),ht=new DA(At),ut=new gA(At),dt=new CA(tt,et),mt=new Ei(x,st,it,lt,d),pt=new wA(x,lt,et),vt=new _i(xt,tt,nt,et),yt=new Di(xt,tt,nt,et),nt.programs=ct.programs,x.capabilities=et,x.extensions=tt,x.properties=At,x.renderLists=ut,x.shadowMap=pt,x.state=it,x.info=nt}Et();const Mt=new TA(x,xt);function _t(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function bt(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const t=nt.autoReset,e=pt.enabled,i=pt.autoUpdate,n=pt.needsUpdate,A=pt.type;Et(),nt.autoReset=t,pt.enabled=e,pt.autoUpdate=i,pt.needsUpdate=n,pt.type=A}function St(t){const e=t.target;e.removeEventListener("dispose",St),function(t){(function(t){const e=At.get(t).programs;void 0!==e&&e.forEach((function(t){ct.releaseProgram(t)}))})(t),At.remove(t)}(e)}this.xr=Mt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=tt.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=tt.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(t){void 0!==t&&(N=t,this.setSize(L,R,!1))},this.getSize=function(t){return t.set(L,R)},this.setSize=function(t,i,n){Mt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(L=t,R=i,e.width=Math.floor(t*N),e.height=Math.floor(i*N),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(L*N,R*N).floor()},this.setDrawingBufferSize=function(t,i,n){L=t,R=i,N=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(Q)},this.getViewport=function(t){return t.copy(G)},this.setViewport=function(t,e,i,n){t.isVector4?G.set(t.x,t.y,t.z,t.w):G.set(t,e,i,n),it.viewport(Q.copy(G).multiplyScalar(N).floor())},this.getScissor=function(t){return t.copy(F)},this.setScissor=function(t,e,i,n){t.isVector4?F.set(t.x,t.y,t.z,t.w):F.set(t,e,i,n),it.scissor(T.copy(F).multiplyScalar(N).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(t){it.setScissorTest(U=t)},this.setOpaqueSort=function(t){P=t},this.setTransparentSort=function(t){k=t},this.getClearColor=function(t){return t.copy(mt.getClearColor())},this.setClearColor=function(){mt.setClearColor.apply(mt,arguments)},this.getClearAlpha=function(){return mt.getClearAlpha()},this.setClearAlpha=function(){mt.setClearAlpha.apply(mt,arguments)},this.clear=function(t,e,i){let n=0;(void 0===t||t)&&(n|=16384),(void 0===e||e)&&(n|=256),(void 0===i||i)&&(n|=1024),xt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",_t,!1),e.removeEventListener("webglcontextrestored",bt,!1),ut.dispose(),dt.dispose(),At.dispose(),st.dispose(),lt.dispose(),It.dispose(),Mt.dispose(),Mt.removeEventListener("sessionstart",Tt),Mt.removeEventListener("sessionend",Dt),V&&(V.dispose(),V=null),Lt.stop()},this.renderBufferImmediate=function(t,e){It.initAttributes();const i=At.get(t);t.hasPositions&&!i.position&&(i.position=xt.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=xt.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=xt.createBuffer()),t.hasColors&&!i.color&&(i.color=xt.createBuffer());const n=e.getAttributes();t.hasPositions&&(xt.bindBuffer(34962,i.position),xt.bufferData(34962,t.positionArray,35048),It.enableAttribute(n.position),xt.vertexAttribPointer(n.position,3,5126,!1,0,0)),t.hasNormals&&(xt.bindBuffer(34962,i.normal),xt.bufferData(34962,t.normalArray,35048),It.enableAttribute(n.normal),xt.vertexAttribPointer(n.normal,3,5126,!1,0,0)),t.hasUvs&&(xt.bindBuffer(34962,i.uv),xt.bufferData(34962,t.uvArray,35048),It.enableAttribute(n.uv),xt.vertexAttribPointer(n.uv,2,5126,!1,0,0)),t.hasColors&&(xt.bindBuffer(34962,i.color),xt.bufferData(34962,t.colorArray,35048),It.enableAttribute(n.color),xt.vertexAttribPointer(n.color,3,5126,!1,0,0)),It.disableUnusedAttributes(),xt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,n,A,r){null===e&&(e=j);const s=A.isMesh&&A.matrixWorld.determinant()<0,a=Ft(t,e,n,A);it.setMaterial(n,s);let o=i.index;const l=i.attributes.position;if(null===o){if(void 0===l||0===l.count)return}else if(0===o.count)return;let c,h=1;!0===n.wireframe&&(o=ot.getWireframeAttribute(i),h=2),(n.morphTargets||n.morphNormals)&&ft.update(A,i,n,a),It.setup(A,n,a,i,o);let u=vt;null!==o&&(c=at.get(o),u=yt,u.setIndex(c));const d=null!==o?o.count:l.count,g=i.drawRange.start*h,p=i.drawRange.count*h,m=null!==r?r.start*h:0,f=null!==r?r.count*h:1/0,v=Math.max(g,m),y=Math.min(d,g+p,m+f)-1,C=Math.max(0,y-v+1);if(0!==C){if(A.isMesh)!0===n.wireframe?(it.setLineWidth(n.wireframeLinewidth*$()),u.setMode(1)):u.setMode(4);else if(A.isLine){let t=n.linewidth;void 0===t&&(t=1),it.setLineWidth(t*$()),A.isLineSegments?u.setMode(1):A.isLineLoop?u.setMode(2):u.setMode(3)}else A.isPoints?u.setMode(0):A.isSprite&&u.setMode(4);if(A.isInstancedMesh)u.renderInstances(v,C,A.count);else if(i.isInstancedBufferGeometry){const t=Math.min(i.instanceCount,i._maxInstanceCount);u.renderInstances(v,C,t)}else u.render(v,C)}},this.compile=function(t,e){y=dt.get(t),y.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(y.pushLight(t),t.castShadow&&y.pushShadow(t))})),y.setupLights(),t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let n=0;n<i.length;n++){kt(i[n],t,e)}else kt(i,t,e)}))};let Qt=null;function Tt(){Lt.stop()}function Dt(){Lt.start()}const Lt=new vi;function Rt(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)y.pushLight(t),t.castShadow&&y.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||H.intersectsSprite(t)){n&&Z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X);const e=lt.update(t),A=t.material;A.visible&&v.push(t,e,A,i,Z.z,null)}}else if(t.isImmediateRenderObject)n&&Z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X),v.push(t,null,t.material,i,Z.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==nt.render.frame&&(t.skeleton.update(),t.skeleton.frame=nt.render.frame),!t.frustumCulled||H.intersectsObject(t))){n&&Z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X);const e=lt.update(t),A=t.material;if(Array.isArray(A)){const n=e.groups;for(let r=0,s=n.length;r<s;r++){const s=n[r],a=A[s.materialIndex];a&&a.visible&&v.push(t,e,a,i,Z.z,s)}}else A.visible&&v.push(t,e,A,i,Z.z,null)}const A=t.children;for(let t=0,r=A.length;t<r;t++)Rt(A[t],e,i,n)}function Nt(t,e,i){const n=!0===e.isScene?e.overrideMaterial:null;for(let A=0,r=t.length;A<r;A++){const r=t[A],s=r.object,a=r.geometry,o=null===n?r.material:n,l=r.group;if(i.isArrayCamera){const t=i.cameras;for(let i=0,n=t.length;i<n;i++){const n=t[i];s.layers.test(n.layers)&&(it.viewport(Q.copy(n.viewport)),y.setupLightsView(n),Pt(s,e,n,a,o,l))}}else Pt(s,e,i,a,o,l)}}function Pt(t,e,i,n,A,r){if(t.onBeforeRender(x,e,i,n,A,r),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const n=Ft(i,e,A,t);it.setMaterial(A),It.reset(),function(t,e){t.render((function(t){x.renderBufferImmediate(t,e)}))}(t,n)}else!0===A.transparent&&2===A.side?(A.side=1,A.needsUpdate=!0,x.renderBufferDirect(i,e,n,A,t,r),A.side=0,A.needsUpdate=!0,x.renderBufferDirect(i,e,n,A,t,r),A.side=2):x.renderBufferDirect(i,e,n,A,t,r);t.onAfterRender(x,e,i,n,A,r)}function kt(t,e,i){!0!==e.isScene&&(e=j);const n=At.get(t),A=y.state.lights,r=y.state.shadowsArray,s=A.state.version,a=ct.getParameters(t,A.state,r,e,i),o=ct.getProgramCacheKey(a);let l=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=st.get(t.envMap||n.environment),void 0===l&&(t.addEventListener("dispose",St),l=new Map,n.programs=l);let c=l.get(o);if(void 0!==c){if(n.currentProgram===c&&n.lightsStateVersion===s)return Gt(t,a),c}else a.uniforms=ct.getUniforms(t),t.onBuild(a,x),t.onBeforeCompile(a,x),c=ct.acquireProgram(a,o),l.set(o,c),n.uniforms=a.uniforms;const h=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=gt.uniform),Gt(t,a),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=s,n.needsLights&&(h.ambientLightColor.value=A.state.ambient,h.lightProbe.value=A.state.probe,h.directionalLights.value=A.state.directional,h.directionalLightShadows.value=A.state.directionalShadow,h.spotLights.value=A.state.spot,h.spotLightShadows.value=A.state.spotShadow,h.rectAreaLights.value=A.state.rectArea,h.ltc_1.value=A.state.rectAreaLTC1,h.ltc_2.value=A.state.rectAreaLTC2,h.pointLights.value=A.state.point,h.pointLightShadows.value=A.state.pointShadow,h.hemisphereLights.value=A.state.hemi,h.directionalShadowMap.value=A.state.directionalShadowMap,h.directionalShadowMatrix.value=A.state.directionalShadowMatrix,h.spotShadowMap.value=A.state.spotShadowMap,h.spotShadowMatrix.value=A.state.spotShadowMatrix,h.pointShadowMap.value=A.state.pointShadowMap,h.pointShadowMatrix.value=A.state.pointShadowMatrix);const u=c.getUniforms(),d=Hn.seqWithValue(u.seq,h);return n.currentProgram=c,n.uniformsList=d,c}function Gt(t,e){const i=At.get(t);i.outputEncoding=e.outputEncoding,i.instancing=e.instancing,i.skinning=e.skinning,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas}function Ft(t,e,i,n){!0!==e.isScene&&(e=j),rt.resetTextureUnits();const A=e.fog,r=i.isMeshStandardMaterial?e.environment:null,s=null===B?x.outputEncoding:B.texture.encoding,a=st.get(i.envMap||r),o=!0===i.vertexColors&&n.geometry&&n.geometry.attributes.color&&4===n.geometry.attributes.color.itemSize,l=At.get(i),c=y.state.lights;if(!0===O&&(!0===W||t!==S)){const e=t===S&&i.id===b;gt.setState(i,t,e)}let h=!1;i.version===l.__version?l.needsLights&&l.lightsStateVersion!==c.state.version||l.outputEncoding!==s||n.isInstancedMesh&&!1===l.instancing?h=!0:n.isInstancedMesh||!0!==l.instancing?n.isSkinnedMesh&&!1===l.skinning?h=!0:n.isSkinnedMesh||!0!==l.skinning?l.envMap!==a||i.fog&&l.fog!==A?h=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===gt.numPlanes&&l.numIntersection===gt.numIntersection?l.vertexAlphas!==o&&(h=!0):h=!0:h=!0:h=!0:(h=!0,l.__version=i.version);let u=l.currentProgram;!0===h&&(u=kt(i,e,n));let d=!1,g=!1,p=!1;const m=u.getUniforms(),f=l.uniforms;if(it.useProgram(u.program)&&(d=!0,g=!0,p=!0),i.id!==b&&(b=i.id,g=!0),d||S!==t){if(m.setValue(xt,"projectionMatrix",t.projectionMatrix),et.logarithmicDepthBuffer&&m.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),S!==t&&(S=t,g=!0,p=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=m.map.cameraPosition;void 0!==e&&e.setValue(xt,Z.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&m.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||n.isSkinnedMesh)&&m.setValue(xt,"viewMatrix",t.matrixWorldInverse)}if(n.isSkinnedMesh){m.setOptional(xt,n,"bindMatrix"),m.setOptional(xt,n,"bindMatrixInverse");const t=n.skeleton;t&&(et.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),m.setValue(xt,"boneTexture",t.boneTexture,rt),m.setValue(xt,"boneTextureSize",t.boneTextureSize)):m.setOptional(xt,t,"boneMatrices"))}var v,C;return(g||l.receiveShadow!==n.receiveShadow)&&(l.receiveShadow=n.receiveShadow,m.setValue(xt,"receiveShadow",n.receiveShadow)),g&&(m.setValue(xt,"toneMappingExposure",x.toneMappingExposure),l.needsLights&&(C=p,(v=f).ambientLightColor.needsUpdate=C,v.lightProbe.needsUpdate=C,v.directionalLights.needsUpdate=C,v.directionalLightShadows.needsUpdate=C,v.pointLights.needsUpdate=C,v.pointLightShadows.needsUpdate=C,v.spotLights.needsUpdate=C,v.spotLightShadows.needsUpdate=C,v.rectAreaLights.needsUpdate=C,v.hemisphereLights.needsUpdate=C),A&&i.fog&&ht.refreshFogUniforms(f,A),ht.refreshMaterialUniforms(f,i,N,R,V),Hn.upload(xt,l.uniformsList,f,rt)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Hn.upload(xt,l.uniformsList,f,rt),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&m.setValue(xt,"center",n.center),m.setValue(xt,"modelViewMatrix",n.modelViewMatrix),m.setValue(xt,"normalMatrix",n.normalMatrix),m.setValue(xt,"modelMatrix",n.matrixWorld),u}Lt.setAnimationLoop((function(t){Qt&&Qt(t)})),"undefined"!=typeof window&&Lt.setContext(window),this.setAnimationLoop=function(t){Qt=t,Mt.setAnimationLoop(t),null===t?Lt.stop():Lt.start()},Mt.addEventListener("sessionstart",Tt),Mt.addEventListener("sessionend",Dt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===w)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Mt.enabled&&!0===Mt.isPresenting&&(!0===Mt.cameraAutoUpdate&&Mt.updateCamera(e),e=Mt.getCamera()),!0===t.isScene&&t.onBeforeRender(x,t,e,B),y=dt.get(t,I.length),y.init(),I.push(y),X.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),H.setFromProjectionMatrix(X),W=this.localClippingEnabled,O=gt.init(this.clippingPlanes,W,e),v=ut.get(t,C.length),v.init(),C.push(v),Rt(t,e,0,x.sortObjects),v.finish(),!0===x.sortObjects&&v.sort(P,k),!0===O&&gt.beginShadows();const n=y.state.shadowsArray;pt.render(n,t,e),y.setupLights(),y.setupLightsView(e),!0===O&&gt.endShadows(),!0===this.info.autoReset&&this.info.reset(),mt.render(v,t);const r=v.opaque,o=v.transmissive,l=v.transparent;r.length>0&&Nt(r,t,e),o.length>0&&function(t,e,n,r){if(null===V){const t=!0===u&&!0===et.isWebGL2;V=new(t?q:Y)(1024,1024,{generateMipmaps:!0,type:null!==Ct.convert(h)?h:a,minFilter:s,magFilter:A,wrapS:i,wrapT:i})}const o=x.getRenderTarget();x.setRenderTarget(V),x.clear();const l=x.toneMapping;x.toneMapping=0,Nt(t,n,r),x.toneMapping=l,rt.updateMultisampleRenderTarget(V),rt.updateRenderTargetMipmap(V),x.setRenderTarget(o),Nt(e,n,r)}(r,o,t,e),l.length>0&&Nt(l,t,e),null!==B&&(rt.updateMultisampleRenderTarget(B),rt.updateRenderTargetMipmap(B)),!0===t.isScene&&t.onAfterRender(x,t,e),it.buffers.depth.setTest(!0),it.buffers.depth.setMask(!0),it.buffers.color.setMask(!0),it.setPolygonOffset(!1),It.resetDefaultState(),b=-1,S=null,I.pop(),y=I.length>0?I[I.length-1]:null,C.pop(),v=C.length>0?C[C.length-1]:null},this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return B},this.setRenderTarget=function(t,e=0,i=0){B=t,M=e,_=i,t&&void 0===At.get(t).__webglFramebuffer&&rt.setupRenderTarget(t);let n=null,A=!1,r=!1;if(t){const i=t.texture;(i.isDataTexture3D||i.isDataTexture2DArray)&&(r=!0);const s=At.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(n=s[e],A=!0):n=t.isWebGLMultisampleRenderTarget?At.get(t).__webglMultisampledFramebuffer:s,Q.copy(t.viewport),T.copy(t.scissor),D=t.scissorTest}else Q.copy(G).multiplyScalar(N).floor(),T.copy(F).multiplyScalar(N).floor(),D=U;if(it.bindFramebuffer(36160,n)&&et.drawBuffers){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const i=t.texture;if(z.length!==i.length||36064!==z[0]){for(let t=0,e=i.length;t<e;t++)z[t]=36064+t;z.length=i.length,e=!0}}else 1===z.length&&36064===z[0]||(z[0]=36064,z.length=1,e=!0);else 1===z.length&&1029===z[0]||(z[0]=1029,z.length=1,e=!0);e&&(et.isWebGL2?xt.drawBuffers(z):tt.get("WEBGL_draw_buffers").drawBuffersWEBGL(z))}if(it.viewport(Q),it.scissor(T),it.setScissorTest(D),A){const n=At.get(t.texture);xt.framebufferTexture2D(36160,36064,34069+e,n.__webglTexture,i)}else if(r){const n=At.get(t.texture),A=e||0;xt.framebufferTextureLayer(36160,36064,n.__webglTexture,i||0,A)}},this.readRenderTargetPixels=function(t,e,i,n,A,r,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=At.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){it.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,l=s.type;if(o!==g&&Ct.convert(o)!==xt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===h&&(tt.has("EXT_color_buffer_half_float")||et.isWebGL2&&tt.has("EXT_color_buffer_float"));if(!(l===a||Ct.convert(l)===xt.getParameter(35738)||l===c&&(et.isWebGL2||tt.has("OES_texture_float")||tt.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===xt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-n&&i>=0&&i<=t.height-A&&xt.readPixels(e,i,n,A,Ct.convert(o),Ct.convert(l),r):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==B?At.get(B).__webglFramebuffer:null;it.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,i=0){const n=Math.pow(2,-i),A=Math.floor(e.image.width*n),r=Math.floor(e.image.height*n);let s=Ct.convert(e.format);et.isWebGL2&&(6407===s&&(s=32849),6408===s&&(s=32856)),rt.setTexture2D(e,0),xt.copyTexImage2D(3553,i,s,t.x,t.y,A,r,0),it.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n=0){const A=e.image.width,r=e.image.height,s=Ct.convert(i.format),a=Ct.convert(i.type);rt.setTexture2D(i,0),xt.pixelStorei(37440,i.flipY),xt.pixelStorei(37441,i.premultiplyAlpha),xt.pixelStorei(3317,i.unpackAlignment),e.isDataTexture?xt.texSubImage2D(3553,n,t.x,t.y,A,r,s,a,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(3553,n,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):xt.texSubImage2D(3553,n,t.x,t.y,s,a,e.image),0===n&&i.generateMipmaps&&xt.generateMipmap(3553),it.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i,n,A=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const r=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,a=t.max.z-t.min.z+1,o=Ct.convert(n.format),l=Ct.convert(n.type);let c;if(n.isDataTexture3D)rt.setTexture3D(n,0),c=32879;else{if(!n.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");rt.setTexture2DArray(n,0),c=35866}xt.pixelStorei(37440,n.flipY),xt.pixelStorei(37441,n.premultiplyAlpha),xt.pixelStorei(3317,n.unpackAlignment);const h=xt.getParameter(3314),u=xt.getParameter(32878),d=xt.getParameter(3316),g=xt.getParameter(3315),p=xt.getParameter(32877),m=i.isCompressedTexture?i.mipmaps[0]:i.image;xt.pixelStorei(3314,m.width),xt.pixelStorei(32878,m.height),xt.pixelStorei(3316,t.min.x),xt.pixelStorei(3315,t.min.y),xt.pixelStorei(32877,t.min.z),i.isDataTexture||i.isDataTexture3D?xt.texSubImage3D(c,A,e.x,e.y,e.z,r,s,a,o,l,m.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xt.compressedTexSubImage3D(c,A,e.x,e.y,e.z,r,s,a,o,m.data)):xt.texSubImage3D(c,A,e.x,e.y,e.z,r,s,a,o,l,m),xt.pixelStorei(3314,h),xt.pixelStorei(32878,u),xt.pixelStorei(3316,d),xt.pixelStorei(3315,g),xt.pixelStorei(32877,p),0===A&&n.generateMipmaps&&xt.generateMipmap(c),it.unbindTexture()},this.initTexture=function(t){rt.setTexture2D(t,0),it.unbindTexture()},this.resetState=function(){M=0,_=0,B=null,it.reset(),It.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends LA{}).prototype.isWebGL1Renderer=!0;class RA{constructor(t,e=25e-5){this.name="",this.color=new ve(t),this.density=e}clone(){return new RA(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}RA.prototype.isFogExp2=!0;class NA extends jt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}NA.prototype.isScene=!0;class PA{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=B,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=R()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,A=this.stride;n<A;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=R()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=R()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}PA.prototype.isInterleavedBuffer=!0;const kA=new K;class GA{constructor(t,e,i,n=!1){this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)kA.x=this.getX(e),kA.y=this.getY(e),kA.z=this.getZ(e),kA.applyMatrix4(t),this.setXYZ(e,kA.x,kA.y,kA.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)kA.x=this.getX(e),kA.y=this.getY(e),kA.z=this.getZ(e),kA.applyNormalMatrix(t),this.setXYZ(e,kA.x,kA.y,kA.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)kA.x=this.getX(e),kA.y=this.getY(e),kA.z=this.getZ(e),kA.transformDirection(t),this.setXYZ(e,kA.x,kA.y,kA.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,A){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=A,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new xe(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new GA(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}GA.prototype.isInterleavedBufferAttribute=!0;class FA extends he{constructor(t){super(),this.type="SpriteMaterial",this.color=new ve(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let UA;FA.prototype.isSpriteMaterial=!0;const zA=new K,HA=new K,OA=new K,WA=new F,VA=new F,JA=new Bt,YA=new K,qA=new K,XA=new K,KA=new F,ZA=new F,jA=new F;function $A(t,e,i,n,A,r){WA.subVectors(t,i).addScalar(.5).multiply(n),void 0!==A?(VA.x=r*WA.x-A*WA.y,VA.y=A*WA.x+r*WA.y):VA.copy(WA),t.copy(e),t.x+=VA.x,t.y+=VA.y,t.applyMatrix4(JA)}(class extends jt{constructor(t){if(super(),this.type="Sprite",void 0===UA){UA=new Re;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new PA(t,5);UA.setIndex([0,1,2,0,2,3]),UA.setAttribute("position",new GA(e,3,0,!1)),UA.setAttribute("uv",new GA(e,2,3,!1))}this.geometry=UA,this.material=void 0!==t?t:new FA,this.center=new F(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),HA.setFromMatrixScale(this.matrixWorld),JA.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),OA.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&HA.multiplyScalar(-OA.z);const i=this.material.rotation;let n,A;0!==i&&(A=Math.cos(i),n=Math.sin(i));const r=this.center;$A(YA.set(-.5,-.5,0),OA,r,HA,n,A),$A(qA.set(.5,-.5,0),OA,r,HA,n,A),$A(XA.set(.5,.5,0),OA,r,HA,n,A),KA.set(0,0),ZA.set(1,0),jA.set(1,1);let s=t.ray.intersectTriangle(YA,qA,XA,!1,zA);if(null===s&&($A(qA.set(-.5,.5,0),OA,r,HA,n,A),ZA.set(0,1),s=t.ray.intersectTriangle(YA,XA,qA,!1,zA),null===s))return;const a=t.ray.origin.distanceTo(zA);a<t.near||a>t.far||e.push({distance:a,point:zA.clone(),uv:le.getUV(zA,YA,qA,XA,KA,ZA,jA,new F),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}).prototype.isSprite=!0;const tr=new K,er=new J,ir=new J,nr=new K,Ar=new Bt;class rr extends je{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Bt,this.bindMatrixInverse=new Bt}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new J,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const i=this.skeleton,n=this.geometry;er.fromBufferAttribute(n.attributes.skinIndex,t),ir.fromBufferAttribute(n.attributes.skinWeight,t),tr.fromBufferAttribute(n.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const n=ir.getComponent(t);if(0!==n){const A=er.getComponent(t);Ar.multiplyMatrices(i.bones[A].matrixWorld,i.boneInverses[A]),e.addScaledVector(nr.copy(tr).applyMatrix4(Ar),n)}}return e.applyMatrix4(this.bindMatrixInverse)}}rr.prototype.isSkinnedMesh=!0;(class extends jt{constructor(){super(),this.type="Bone"}}).prototype.isBone=!0;(class extends W{constructor(t=null,e=1,i=1,n,A,r,s,a,o=1003,l=1003,c,h){super(null,r,s,a,o,l,n,A,c,h),this.image={data:t,width:e,height:i},this.magFilter=o,this.minFilter=l,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}).prototype.isDataTexture=!0;const sr=new Bt,ar=new Bt,or=[],lr=new je;(class extends je{constructor(t,e,i){super(t,e),this.instanceMatrix=new xe(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const i=this.matrixWorld,n=this.count;if(lr.geometry=this.geometry,lr.material=this.material,void 0!==lr.material)for(let A=0;A<n;A++){this.getMatrixAt(A,sr),ar.multiplyMatrices(i,sr),lr.matrixWorld=ar,lr.raycast(t,or);for(let t=0,i=or.length;t<i;t++){const i=or[t];i.instanceId=A,i.object=this,e.push(i)}or.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new xe(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}).prototype.isInstancedMesh=!0;class cr extends he{constructor(t){super(),this.type="LineBasicMaterial",this.color=new ve(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}cr.prototype.isLineBasicMaterial=!0;const hr=new K,ur=new K,dr=new Bt,gr=new _t,pr=new vt;class mr extends jt{constructor(t=new Re,e=new cr){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,n=e.count;t<n;t++)hr.fromBufferAttribute(e,t-1),ur.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=hr.distanceTo(ur);t.setAttribute("lineDistance",new Me(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,A=t.params.Line.threshold,r=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),pr.copy(i.boundingSphere),pr.applyMatrix4(n),pr.radius+=A,!1===t.ray.intersectsSphere(pr))return;dr.copy(n).invert(),gr.copy(t.ray).applyMatrix4(dr);const s=A/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s,o=new K,l=new K,c=new K,h=new K,u=this.isLineSegments?2:1;if(i.isBufferGeometry){const n=i.index,A=i.attributes.position;if(null!==n){for(let i=Math.max(0,r.start),s=Math.min(n.count,r.start+r.count)-1;i<s;i+=u){const r=n.getX(i),s=n.getX(i+1);o.fromBufferAttribute(A,r),l.fromBufferAttribute(A,s);if(gr.distanceSqToSegment(o,l,h,c)>a)continue;h.applyMatrix4(this.matrixWorld);const u=t.ray.origin.distanceTo(h);u<t.near||u>t.far||e.push({distance:u,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{for(let i=Math.max(0,r.start),n=Math.min(A.count,r.start+r.count)-1;i<n;i+=u){o.fromBufferAttribute(A,i),l.fromBufferAttribute(A,i+1);if(gr.distanceSqToSegment(o,l,h,c)>a)continue;h.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(h);n<t.near||n>t.far||e.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,i=Object.keys(e);if(i.length>0){const t=e[i[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,i=t.length;e<i;e++){const i=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}mr.prototype.isLine=!0;const fr=new K,vr=new K;class yr extends mr{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,n=e.count;t<n;t+=2)fr.fromBufferAttribute(e,t),vr.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+fr.distanceTo(vr);t.setAttribute("lineDistance",new Me(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}yr.prototype.isLineSegments=!0;(class extends mr{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class Cr extends he{constructor(t){super(),this.type="PointsMaterial",this.color=new ve(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}Cr.prototype.isPointsMaterial=!0;const Ir=new Bt,xr=new _t,wr=new vt,Er=new K;function Mr(t,e,i,n,A,r,s){const a=xr.distanceSqToPoint(t);if(a<i){const i=new K;xr.closestPointToPoint(t,i),i.applyMatrix4(n);const o=A.ray.origin.distanceTo(i);if(o<A.near||o>A.far)return;r.push({distance:o,distanceToRay:Math.sqrt(a),point:i,index:e,face:null,object:s})}}(class extends jt{constructor(t=new Re,e=new Cr){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,A=t.params.Points.threshold,r=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),wr.copy(i.boundingSphere),wr.applyMatrix4(n),wr.radius+=A,!1===t.ray.intersectsSphere(wr))return;Ir.copy(n).invert(),xr.copy(t.ray).applyMatrix4(Ir);const s=A/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s;if(i.isBufferGeometry){const A=i.index,s=i.attributes.position;if(null!==A){for(let i=Math.max(0,r.start),o=Math.min(A.count,r.start+r.count);i<o;i++){const r=A.getX(i);Er.fromBufferAttribute(s,r),Mr(Er,r,a,n,t,e,this)}}else{for(let i=Math.max(0,r.start),A=Math.min(s.count,r.start+r.count);i<A;i++)Er.fromBufferAttribute(s,i),Mr(Er,i,a,n,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,i=Object.keys(e);if(i.length>0){const t=e[i[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,i=t.length;e<i;e++){const i=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}).prototype.isPoints=!0;(class extends W{constructor(t,e,i,n,A,s,a,o,l){super(t,e,i,n,A,s,a,o,l),this.format=void 0!==a?a:d,this.minFilter=void 0!==s?s:r,this.magFilter=void 0!==A?A:r,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}).prototype.isVideoTexture=!0;(class extends W{constructor(t,e,i,n,A,r,s,a,o,l,c,h){super(null,r,s,a,o,l,n,A,c,h),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0;(class extends W{constructor(t,e,i,n,A,r,s,a,o){super(t,e,i,n,A,r,s,a,o),this.needsUpdate=!0}}).prototype.isCanvasTexture=!0;(class extends W{constructor(t,e,i,n,r,s,a,l,c,h){if((h=void 0!==h?h:p)!==p&&h!==m)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===p&&(i=o),void 0===i&&h===m&&(i=u),super(null,n,r,s,a,l,h,i,c),this.image={width:t,height:e},this.magFilter=void 0!==a?a:A,this.minFilter=void 0!==l?l:A,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isDepthTexture=!0,new K,new K,new K,new le;class _r{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,n=this.getPoint(0),A=0;e.push(0);for(let r=1;r<=t;r++)i=this.getPoint(r/t),A+=i.distanceTo(n),e.push(A),n=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const i=this.getLengths();let n=0;const A=i.length;let r;r=e||t*i[A-1];let s,a=0,o=A-1;for(;a<=o;)if(n=Math.floor(a+(o-a)/2),s=i[n]-r,s<0)a=n+1;else{if(!(s>0)){o=n;break}o=n-1}if(n=o,i[n]===r)return n/(A-1);const l=i[n];return(n+(r-l)/(i[n+1]-l))/(A-1)}getTangent(t,e){const i=1e-4;let n=t-i,A=t+i;n<0&&(n=0),A>1&&(A=1);const r=this.getPoint(n),s=this.getPoint(A),a=e||(r.isVector2?new F:new K);return a.copy(s).sub(r).normalize(),a}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){const i=new K,n=[],A=[],r=[],s=new K,a=new Bt;for(let e=0;e<=t;e++){const i=e/t;n[e]=this.getTangentAt(i,new K),n[e].normalize()}A[0]=new K,r[0]=new K;let o=Number.MAX_VALUE;const l=Math.abs(n[0].x),c=Math.abs(n[0].y),h=Math.abs(n[0].z);l<=o&&(o=l,i.set(1,0,0)),c<=o&&(o=c,i.set(0,1,0)),h<=o&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),A[0].crossVectors(n[0],s),r[0].crossVectors(n[0],A[0]);for(let e=1;e<=t;e++){if(A[e]=A[e-1].clone(),r[e]=r[e-1].clone(),s.crossVectors(n[e-1],n[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(N(n[e-1].dot(n[e]),-1,1));A[e].applyMatrix4(a.makeRotationAxis(s,t))}r[e].crossVectors(n[e],A[e])}if(!0===e){let e=Math.acos(N(A[0].dot(A[t]),-1,1));e/=t,n[0].dot(s.crossVectors(A[0],A[t]))>0&&(e=-e);for(let i=1;i<=t;i++)A[i].applyMatrix4(a.makeRotationAxis(n[i],e*i)),r[i].crossVectors(n[i],A[i])}return{tangents:n,normals:A,binormals:r}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Br extends _r{constructor(t=0,e=0,i=1,n=1,A=0,r=2*Math.PI,s=!1,a=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=A,this.aEndAngle=r,this.aClockwise=s,this.aRotation=a}getPoint(t,e){const i=e||new F,n=2*Math.PI;let A=this.aEndAngle-this.aStartAngle;const r=Math.abs(A)<Number.EPSILON;for(;A<0;)A+=n;for(;A>n;)A-=n;A<Number.EPSILON&&(A=r?0:n),!0!==this.aClockwise||r||(A===n?A=-n:A-=n);const s=this.aStartAngle+t*A;let a=this.aX+this.xRadius*Math.cos(s),o=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),i=a-this.aX,n=o-this.aY;a=i*t-n*e+this.aX,o=i*e+n*t+this.aY}return i.set(a,o)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Br.prototype.isEllipseCurve=!0;class br extends Br{constructor(t,e,i,n,A,r){super(t,e,i,i,n,A,r),this.type="ArcCurve"}}function Sr(){let t=0,e=0,i=0,n=0;function A(A,r,s,a){t=A,e=s,i=-3*A+3*r-2*s-a,n=2*A-2*r+s+a}return{initCatmullRom:function(t,e,i,n,r){A(e,i,r*(i-t),r*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,r,s,a){let o=(e-t)/r-(i-t)/(r+s)+(i-e)/s,l=(i-e)/s-(n-e)/(s+a)+(n-i)/a;o*=s,l*=s,A(e,i,o,l)},calc:function(A){const r=A*A;return t+e*A+i*r+n*(r*A)}}}br.prototype.isArcCurve=!0;const Qr=new K,Tr=new Sr,Dr=new Sr,Lr=new Sr;class Rr extends _r{constructor(t=[],e=!1,i="centripetal",n=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}getPoint(t,e=new K){const i=e,n=this.points,A=n.length,r=(A-(this.closed?0:1))*t;let s,a,o=Math.floor(r),l=r-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/A)+1)*A:0===l&&o===A-1&&(o=A-2,l=1),this.closed||o>0?s=n[(o-1)%A]:(Qr.subVectors(n[0],n[1]).add(n[0]),s=Qr);const c=n[o%A],h=n[(o+1)%A];if(this.closed||o+2<A?a=n[(o+2)%A]:(Qr.subVectors(n[A-1],n[A-2]).add(n[A-1]),a=Qr),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(c),t),i=Math.pow(c.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(a),t);i<1e-4&&(i=1),e<1e-4&&(e=i),n<1e-4&&(n=i),Tr.initNonuniformCatmullRom(s.x,c.x,h.x,a.x,e,i,n),Dr.initNonuniformCatmullRom(s.y,c.y,h.y,a.y,e,i,n),Lr.initNonuniformCatmullRom(s.z,c.z,h.z,a.z,e,i,n)}else"catmullrom"===this.curveType&&(Tr.initCatmullRom(s.x,c.x,h.x,a.x,this.tension),Dr.initCatmullRom(s.y,c.y,h.y,a.y,this.tension),Lr.initCatmullRom(s.z,c.z,h.z,a.z,this.tension));return i.set(Tr.calc(l),Dr.calc(l),Lr.calc(l)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new K).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Nr(t,e,i,n,A){const r=.5*(n-e),s=.5*(A-i),a=t*t;return(2*i-2*n+r+s)*(t*a)+(-3*i+3*n-2*r-s)*a+r*t+i}function Pr(t,e,i,n){return function(t,e){const i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function kr(t,e,i,n,A){return function(t,e){const i=1-t;return i*i*i*e}(t,e)+function(t,e){const i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,A)}Rr.prototype.isCatmullRomCurve3=!0;class Gr extends _r{constructor(t=new F,e=new F,i=new F,n=new F){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new F){const i=e,n=this.v0,A=this.v1,r=this.v2,s=this.v3;return i.set(kr(t,n.x,A.x,r.x,s.x),kr(t,n.y,A.y,r.y,s.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Gr.prototype.isCubicBezierCurve=!0;class Fr extends _r{constructor(t=new K,e=new K,i=new K,n=new K){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new K){const i=e,n=this.v0,A=this.v1,r=this.v2,s=this.v3;return i.set(kr(t,n.x,A.x,r.x,s.x),kr(t,n.y,A.y,r.y,s.y),kr(t,n.z,A.z,r.z,s.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Fr.prototype.isCubicBezierCurve3=!0;class Ur extends _r{constructor(t=new F,e=new F){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new F){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const i=e||new F;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ur.prototype.isLineCurve=!0;class zr extends _r{constructor(t=new F,e=new F,i=new F){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new F){const i=e,n=this.v0,A=this.v1,r=this.v2;return i.set(Pr(t,n.x,A.x,r.x),Pr(t,n.y,A.y,r.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}zr.prototype.isQuadraticBezierCurve=!0;class Hr extends _r{constructor(t=new K,e=new K,i=new K){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new K){const i=e,n=this.v0,A=this.v1,r=this.v2;return i.set(Pr(t,n.x,A.x,r.x),Pr(t,n.y,A.y,r.y),Pr(t,n.z,A.z,r.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Hr.prototype.isQuadraticBezierCurve3=!0;class Or extends _r{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new F){const i=e,n=this.points,A=(n.length-1)*t,r=Math.floor(A),s=A-r,a=n[0===r?r:r-1],o=n[r],l=n[r>n.length-2?n.length-1:r+1],c=n[r>n.length-3?n.length-1:r+2];return i.set(Nr(s,a.x,o.x,l.x,c.x),Nr(s,a.y,o.y,l.y,c.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new F).fromArray(i))}return this}}Or.prototype.isSplineCurve=!0;var Wr=Object.freeze({__proto__:null,ArcCurve:br,CatmullRomCurve3:Rr,CubicBezierCurve:Gr,CubicBezierCurve3:Fr,EllipseCurve:Br,LineCurve:Ur,LineCurve3:class extends _r{constructor(t=new K,e=new K){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new K){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:zr,QuadraticBezierCurve3:Hr,SplineCurve:Or});const Vr=function(t,e,i=2){const n=e&&e.length,A=n?e[0]*i:t.length;let r=Jr(t,0,A,i,!0);const s=[];if(!r||r.next===r.prev)return s;let a,o,l,c,h,u,d;if(n&&(r=function(t,e,i,n){const A=[];let r,s,a,o,l;for(r=0,s=e.length;r<s;r++)a=e[r]*n,o=r<s-1?e[r+1]*n:t.length,l=Jr(t,a,o,n,!1),l===l.next&&(l.steiner=!0),A.push(ns(l));for(A.sort($r),r=0;r<A.length;r++)ts(A[r],i),i=Yr(i,i.next);return i}(t,e,r,i)),t.length>80*i){a=l=t[0],o=c=t[1];for(let e=i;e<A;e+=i)h=t[e],u=t[e+1],h<a&&(a=h),u<o&&(o=u),h>l&&(l=h),u>c&&(c=u);d=Math.max(l-a,c-o),d=0!==d?1/d:0}return qr(r,s,i,a,o,d),s};function Jr(t,e,i,n,A){let r,s;if(A===function(t,e,i,n){let A=0;for(let r=e,s=i-n;r<i;r+=n)A+=(t[s]-t[r])*(t[r+1]+t[s+1]),s=r;return A}(t,e,i,n)>0)for(r=e;r<i;r+=n)s=ds(r,t[r],t[r+1],s);else for(r=i-n;r>=e;r-=n)s=ds(r,t[r],t[r+1],s);return s&&as(s,s.next)&&(gs(s),s=s.next),s}function Yr(t,e){if(!t)return t;e||(e=t);let i,n=t;do{if(i=!1,n.steiner||!as(n,n.next)&&0!==ss(n.prev,n,n.next))n=n.next;else{if(gs(n),n=e=n.prev,n===n.next)break;i=!0}}while(i||n!==e);return e}function qr(t,e,i,n,A,r,s){if(!t)return;!s&&r&&function(t,e,i,n){let A=t;do{null===A.z&&(A.z=is(A.x,A.y,e,i,n)),A.prevZ=A.prev,A.nextZ=A.next,A=A.next}while(A!==t);A.prevZ.nextZ=null,A.prevZ=null,function(t){let e,i,n,A,r,s,a,o,l=1;do{for(i=t,t=null,r=null,s=0;i;){for(s++,n=i,a=0,e=0;e<l&&(a++,n=n.nextZ,n);e++);for(o=l;a>0||o>0&&n;)0!==a&&(0===o||!n||i.z<=n.z)?(A=i,i=i.nextZ,a--):(A=n,n=n.nextZ,o--),r?r.nextZ=A:t=A,A.prevZ=r,r=A;i=n}r.nextZ=null,l*=2}while(s>1)}(A)}(t,n,A,r);let a,o,l=t;for(;t.prev!==t.next;)if(a=t.prev,o=t.next,r?Kr(t,n,A,r):Xr(t))e.push(a.i/i),e.push(t.i/i),e.push(o.i/i),gs(t),t=o.next,l=o.next;else if((t=o)===l){s?1===s?qr(t=Zr(Yr(t),e,i),e,i,n,A,r,2):2===s&&jr(t,e,i,n,A,r):qr(Yr(t),e,i,n,A,r,1);break}}function Xr(t){const e=t.prev,i=t,n=t.next;if(ss(e,i,n)>=0)return!1;let A=t.next.next;for(;A!==t.prev;){if(As(e.x,e.y,i.x,i.y,n.x,n.y,A.x,A.y)&&ss(A.prev,A,A.next)>=0)return!1;A=A.next}return!0}function Kr(t,e,i,n){const A=t.prev,r=t,s=t.next;if(ss(A,r,s)>=0)return!1;const a=A.x<r.x?A.x<s.x?A.x:s.x:r.x<s.x?r.x:s.x,o=A.y<r.y?A.y<s.y?A.y:s.y:r.y<s.y?r.y:s.y,l=A.x>r.x?A.x>s.x?A.x:s.x:r.x>s.x?r.x:s.x,c=A.y>r.y?A.y>s.y?A.y:s.y:r.y>s.y?r.y:s.y,h=is(a,o,e,i,n),u=is(l,c,e,i,n);let d=t.prevZ,g=t.nextZ;for(;d&&d.z>=h&&g&&g.z<=u;){if(d!==t.prev&&d!==t.next&&As(A.x,A.y,r.x,r.y,s.x,s.y,d.x,d.y)&&ss(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,g!==t.prev&&g!==t.next&&As(A.x,A.y,r.x,r.y,s.x,s.y,g.x,g.y)&&ss(g.prev,g,g.next)>=0)return!1;g=g.nextZ}for(;d&&d.z>=h;){if(d!==t.prev&&d!==t.next&&As(A.x,A.y,r.x,r.y,s.x,s.y,d.x,d.y)&&ss(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;g&&g.z<=u;){if(g!==t.prev&&g!==t.next&&As(A.x,A.y,r.x,r.y,s.x,s.y,g.x,g.y)&&ss(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function Zr(t,e,i){let n=t;do{const A=n.prev,r=n.next.next;!as(A,r)&&os(A,n,n.next,r)&&hs(A,r)&&hs(r,A)&&(e.push(A.i/i),e.push(n.i/i),e.push(r.i/i),gs(n),gs(n.next),n=t=r),n=n.next}while(n!==t);return Yr(n)}function jr(t,e,i,n,A,r){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&rs(s,t)){let a=us(s,t);return s=Yr(s,s.next),a=Yr(a,a.next),qr(s,e,i,n,A,r),void qr(a,e,i,n,A,r)}t=t.next}s=s.next}while(s!==t)}function $r(t,e){return t.x-e.x}function ts(t,e){if(e=function(t,e){let i=e;const n=t.x,A=t.y;let r,s=-1/0;do{if(A<=i.y&&A>=i.next.y&&i.next.y!==i.y){const t=i.x+(A-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>s){if(s=t,t===n){if(A===i.y)return i;if(A===i.next.y)return i.next}r=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!r)return null;if(n===s)return r;const a=r,o=r.x,l=r.y;let c,h=1/0;i=r;do{n>=i.x&&i.x>=o&&n!==i.x&&As(A<l?n:s,A,o,l,A<l?s:n,A,i.x,i.y)&&(c=Math.abs(A-i.y)/(n-i.x),hs(i,t)&&(c<h||c===h&&(i.x>r.x||i.x===r.x&&es(r,i)))&&(r=i,h=c)),i=i.next}while(i!==a);return r}(t,e)){const i=us(e,t);Yr(e,e.next),Yr(i,i.next)}}function es(t,e){return ss(t.prev,t,e.prev)<0&&ss(e.next,t,t.next)<0}function is(t,e,i,n,A){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*A)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*A)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function ns(t){let e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function As(t,e,i,n,A,r,s,a){return(A-s)*(e-a)-(t-s)*(r-a)>=0&&(t-s)*(n-a)-(i-s)*(e-a)>=0&&(i-s)*(r-a)-(A-s)*(n-a)>=0}function rs(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&os(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&(hs(t,e)&&hs(e,t)&&function(t,e){let i=t,n=!1;const A=(t.x+e.x)/2,r=(t.y+e.y)/2;do{i.y>r!=i.next.y>r&&i.next.y!==i.y&&A<(i.next.x-i.x)*(r-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)&&(ss(t.prev,t,e.prev)||ss(t,e.prev,e))||as(t,e)&&ss(t.prev,t,t.next)>0&&ss(e.prev,e,e.next)>0)}function ss(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function as(t,e){return t.x===e.x&&t.y===e.y}function os(t,e,i,n){const A=cs(ss(t,e,i)),r=cs(ss(t,e,n)),s=cs(ss(i,n,t)),a=cs(ss(i,n,e));return A!==r&&s!==a||(!(0!==A||!ls(t,i,e))||(!(0!==r||!ls(t,n,e))||(!(0!==s||!ls(i,t,n))||!(0!==a||!ls(i,e,n)))))}function ls(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function cs(t){return t>0?1:t<0?-1:0}function hs(t,e){return ss(t.prev,t,t.next)<0?ss(t,e,t.next)>=0&&ss(t,t.prev,e)>=0:ss(t,e,t.prev)<0||ss(t,t.next,e)<0}function us(t,e){const i=new ps(t.i,t.x,t.y),n=new ps(e.i,e.x,e.y),A=t.next,r=e.prev;return t.next=e,e.prev=t,i.next=A,A.prev=i,n.next=i,i.prev=n,r.next=n,n.prev=r,n}function ds(t,e,i,n){const A=new ps(t,e,i);return n?(A.next=n.next,A.prev=n,n.next.prev=A,n.next=A):(A.prev=A,A.next=A),A}function gs(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ps(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ms{static area(t){const e=t.length;let i=0;for(let n=e-1,A=0;A<e;n=A++)i+=t[n].x*t[A].y-t[A].x*t[n].y;return.5*i}static isClockWise(t){return ms.area(t)<0}static triangulateShape(t,e){const i=[],n=[],A=[];fs(t),vs(i,t);let r=t.length;e.forEach(fs);for(let t=0;t<e.length;t++)n.push(r),r+=e[t].length,vs(i,e[t]);const s=Vr(i,n);for(let t=0;t<s.length;t+=3)A.push(s.slice(t,t+3));return A}}function fs(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function vs(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class ys extends Re{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,n=[],A=[];for(let e=0,i=t.length;e<i;e++){r(t[e])}function r(t){const r=[],s=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let o=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:6,h=void 0!==e.bevelSize?e.bevelSize:c-2,u=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const g=e.extrudePath,p=void 0!==e.UVGenerator?e.UVGenerator:Cs;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),o=e.amount);let m,f,v,y,C,I=!1;g&&(m=g.getSpacedPoints(a),I=!0,l=!1,f=g.computeFrenetFrames(a,!1),v=new K,y=new K,C=new K),l||(d=0,c=0,h=0,u=0);const x=t.extractPoints(s);let w=x.shape;const E=x.holes;if(!ms.isClockWise(w)){w=w.reverse();for(let t=0,e=E.length;t<e;t++){const e=E[t];ms.isClockWise(e)&&(E[t]=e.reverse())}}const M=ms.triangulateShape(w,E),_=w;for(let t=0,e=E.length;t<e;t++){const e=E[t];w=w.concat(e)}function B(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}const b=w.length,S=M.length;function Q(t,e,i){let n,A,r;const s=t.x-e.x,a=t.y-e.y,o=i.x-t.x,l=i.y-t.y,c=s*s+a*a,h=s*l-a*o;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),u=Math.sqrt(o*o+l*l),d=e.x-a/h,g=e.y+s/h,p=((i.x-l/u-d)*l-(i.y+o/u-g)*o)/(s*l-a*o);n=d+s*p-t.x,A=g+a*p-t.y;const m=n*n+A*A;if(m<=2)return new F(n,A);r=Math.sqrt(m/2)}else{let t=!1;s>Number.EPSILON?o>Number.EPSILON&&(t=!0):s<-Number.EPSILON?o<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(l)&&(t=!0),t?(n=-a,A=s,r=Math.sqrt(c)):(n=s,A=a,r=Math.sqrt(c/2))}return new F(n/r,A/r)}const T=[];for(let t=0,e=_.length,i=e-1,n=t+1;t<e;t++,i++,n++)i===e&&(i=0),n===e&&(n=0),T[t]=Q(_[t],_[i],_[n]);const D=[];let L,R=T.concat();for(let t=0,e=E.length;t<e;t++){const e=E[t];L=[];for(let t=0,i=e.length,n=i-1,A=t+1;t<i;t++,n++,A++)n===i&&(n=0),A===i&&(A=0),L[t]=Q(e[t],e[n],e[A]);D.push(L),R=R.concat(L)}for(let t=0;t<d;t++){const e=t/d,i=c*Math.cos(e*Math.PI/2),n=h*Math.sin(e*Math.PI/2)+u;for(let t=0,e=_.length;t<e;t++){const e=B(_[t],T[t],n);k(e.x,e.y,-i)}for(let t=0,e=E.length;t<e;t++){const e=E[t];L=D[t];for(let t=0,A=e.length;t<A;t++){const A=B(e[t],L[t],n);k(A.x,A.y,-i)}}}const N=h+u;for(let t=0;t<b;t++){const e=l?B(w[t],R[t],N):w[t];I?(y.copy(f.normals[0]).multiplyScalar(e.x),v.copy(f.binormals[0]).multiplyScalar(e.y),C.copy(m[0]).add(y).add(v),k(C.x,C.y,C.z)):k(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<b;e++){const i=l?B(w[e],R[e],N):w[e];I?(y.copy(f.normals[t]).multiplyScalar(i.x),v.copy(f.binormals[t]).multiplyScalar(i.y),C.copy(m[t]).add(y).add(v),k(C.x,C.y,C.z)):k(i.x,i.y,o/a*t)}for(let t=d-1;t>=0;t--){const e=t/d,i=c*Math.cos(e*Math.PI/2),n=h*Math.sin(e*Math.PI/2)+u;for(let t=0,e=_.length;t<e;t++){const e=B(_[t],T[t],n);k(e.x,e.y,o+i)}for(let t=0,e=E.length;t<e;t++){const e=E[t];L=D[t];for(let t=0,A=e.length;t<A;t++){const A=B(e[t],L[t],n);I?k(A.x,A.y+m[a-1].y,m[a-1].x+i):k(A.x,A.y,o+i)}}}function P(t,e){let i=t.length;for(;--i>=0;){const n=i;let A=i-1;A<0&&(A=t.length-1);for(let t=0,i=a+2*d;t<i;t++){const i=b*t,r=b*(t+1);U(e+n+i,e+A+i,e+A+r,e+n+r)}}}function k(t,e,i){r.push(t),r.push(e),r.push(i)}function G(t,e,A){z(t),z(e),z(A);const r=n.length/3,s=p.generateTopUV(i,n,r-3,r-2,r-1);H(s[0]),H(s[1]),H(s[2])}function U(t,e,A,r){z(t),z(e),z(r),z(e),z(A),z(r);const s=n.length/3,a=p.generateSideWallUV(i,n,s-6,s-3,s-2,s-1);H(a[0]),H(a[1]),H(a[3]),H(a[1]),H(a[2]),H(a[3])}function z(t){n.push(r[3*t+0]),n.push(r[3*t+1]),n.push(r[3*t+2])}function H(t){A.push(t.x),A.push(t.y)}!function(){const t=n.length/3;if(l){let t=0,e=b*t;for(let t=0;t<S;t++){const i=M[t];G(i[2]+e,i[1]+e,i[0]+e)}t=a+2*d,e=b*t;for(let t=0;t<S;t++){const i=M[t];G(i[0]+e,i[1]+e,i[2]+e)}}else{for(let t=0;t<S;t++){const e=M[t];G(e[2],e[1],e[0])}for(let t=0;t<S;t++){const e=M[t];G(e[0]+b*a,e[1]+b*a,e[2]+b*a)}}i.addGroup(t,n.length/3-t,0)}(),function(){const t=n.length/3;let e=0;P(_,e),e+=_.length;for(let t=0,i=E.length;t<i;t++){const i=E[t];P(i,e),e+=i.length}i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new Me(n,3)),this.setAttribute("uv",new Me(A,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,i){if(i.shapes=[],Array.isArray(t))for(let e=0,n=t.length;e<n;e++){const n=t[e];i.shapes.push(n.uuid)}else i.shapes.push(t.uuid);void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const i=[];for(let n=0,A=t.shapes.length;n<A;n++){const A=e[t.shapes[n]];i.push(A)}const n=t.options.extrudePath;return void 0!==n&&(t.options.extrudePath=(new Wr[n.type]).fromJSON(n)),new ys(i,t.options)}}const Cs={generateTopUV:function(t,e,i,n,A){const r=e[3*i],s=e[3*i+1],a=e[3*n],o=e[3*n+1],l=e[3*A],c=e[3*A+1];return[new F(r,s),new F(a,o),new F(l,c)]},generateSideWallUV:function(t,e,i,n,A,r){const s=e[3*i],a=e[3*i+1],o=e[3*i+2],l=e[3*n],c=e[3*n+1],h=e[3*n+2],u=e[3*A],d=e[3*A+1],g=e[3*A+2],p=e[3*r],m=e[3*r+1],f=e[3*r+2];return Math.abs(a-c)<Math.abs(s-l)?[new F(s,1-o),new F(l,1-h),new F(u,1-g),new F(p,1-f)]:[new F(a,1-o),new F(c,1-h),new F(d,1-g),new F(m,1-f)]}};class Is extends Re{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],n=[],A=[],r=[];let s=0,a=0;if(!1===Array.isArray(t))o(t);else for(let e=0;e<t.length;e++)o(t[e]),this.addGroup(s,a,e),s+=a,a=0;function o(t){const s=n.length/3,o=t.extractPoints(e);let l=o.shape;const c=o.holes;!1===ms.isClockWise(l)&&(l=l.reverse());for(let t=0,e=c.length;t<e;t++){const e=c[t];!0===ms.isClockWise(e)&&(c[t]=e.reverse())}const h=ms.triangulateShape(l,c);for(let t=0,e=c.length;t<e;t++){const e=c[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];n.push(e.x,e.y,0),A.push(0,0,1),r.push(e.x,e.y)}for(let t=0,e=h.length;t<e;t++){const e=h[t],n=e[0]+s,A=e[1]+s,r=e[2]+s;i.push(n,A,r),a+=3}}this.setIndex(i),this.setAttribute("position",new Me(n,3)),this.setAttribute("normal",new Me(A,3)),this.setAttribute("uv",new Me(r,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let i=0,n=t.length;i<n;i++){const n=t[i];e.shapes.push(n.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const i=[];for(let n=0,A=t.shapes.length;n<A;n++){const A=e[t.shapes[n]];i.push(A)}return new Is(i,t.curveSegments)}}(class extends he{constructor(t){super(),this.type="ShadowMaterial",this.color=new ve(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;(class extends Ai{constructor(t){super(t),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0;class xs extends he{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ve(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new F(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this}}xs.prototype.isMeshStandardMaterial=!0;(class extends xs{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new F(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=N(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ve(1,1,1),this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new ve).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this}}).prototype.isMeshPhysicalMaterial=!0;(class extends he{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new ve(16777215),this.specular=new ve(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new F(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshPhongMaterial=!0;(class extends he{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ve(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new F(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class extends he{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new F(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends he{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class extends he{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ve(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new F(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends cr{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const ws={arraySlice:function(t,e,i){return ws.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort((function(e,i){return t[e]-t[i]})),i},sortedArray:function(t,e,i){const n=t.length,A=new t.constructor(n);for(let r=0,s=0;s!==n;++r){const n=i[r]*e;for(let i=0;i!==e;++i)A[s++]=t[n+i]}return A},flattenJSON:function(t,e,i,n){let A=1,r=t[0];for(;void 0!==r&&void 0===r[n];)r=t[A++];if(void 0===r)return;let s=r[n];if(void 0!==s)if(Array.isArray(s))do{s=r[n],void 0!==s&&(e.push(r.time),i.push.apply(i,s)),r=t[A++]}while(void 0!==r);else if(void 0!==s.toArray)do{s=r[n],void 0!==s&&(e.push(r.time),s.toArray(i,i.length)),r=t[A++]}while(void 0!==r);else do{s=r[n],void 0!==s&&(e.push(r.time),i.push(s)),r=t[A++]}while(void 0!==r)},subclip:function(t,e,i,n,A=30){const r=t.clone();r.name=e;const s=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],a=e.getValueSize(),o=[],l=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*A;if(!(r<i||r>=n)){o.push(e.times[t]);for(let i=0;i<a;++i)l.push(e.values[t*a+i])}}0!==o.length&&(e.times=ws.convertArray(o,e.times.constructor),e.values=ws.convertArray(l,e.values.constructor),s.push(e))}r.tracks=s;let a=1/0;for(let t=0;t<r.tracks.length;++t)a>r.tracks[t].times[0]&&(a=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*a);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,i=t,n=30){n<=0&&(n=30);const A=i.tracks.length,r=e/n;for(let e=0;e<A;++e){const n=i.tracks[e],A=n.ValueTypeName;if("bool"===A||"string"===A)continue;const s=t.tracks.find((function(t){return t.name===n.name&&t.ValueTypeName===A}));if(void 0===s)continue;let a=0;const o=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=o/3);let l=0;const c=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=c/3);const h=n.times.length-1;let u;if(r<=n.times[0]){const t=a,e=o-a;u=ws.arraySlice(n.values,t,e)}else if(r>=n.times[h]){const t=h*o+a,e=t+o-a;u=ws.arraySlice(n.values,t,e)}else{const t=n.createInterpolant(),e=a,i=o-a;t.evaluate(r),u=ws.arraySlice(t.resultBuffer,e,i)}if("quaternion"===A){(new X).fromArray(u).normalize().conjugate().toArray(u)}const d=s.times.length;for(let t=0;t<d;++t){const e=t*c+l;if("quaternion"===A)X.multiplyQuaternionsFlat(s.values,e,u,0,s.values,e);else{const t=c-2*l;for(let i=0;i<t;++i)s.values[e+i]-=u[i]}}}return t.blendMode=2501,t}};class Es{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],A=e[i-1];t:{e:{let r;i:{n:if(!(t<n)){for(let r=i+2;;){if(void 0===n){if(t<A)break n;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,A)}if(i===r)break;if(A=n,n=e[++i],t<n)break e}r=e.length;break i}if(t>=A)break t;{const s=e[1];t<s&&(i=2,A=s);for(let r=i-2;;){if(void 0===A)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===r)break;if(n=A,A=e[--i-1],t>=A)break e}r=i,i=0}}for(;i<r;){const n=i+r>>>1;t<e[n]?r=n:i=n+1}if(n=e[i],A=e[i-1],void 0===A)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,A,t)}this._cachedIndex=i,this.intervalChanged_(i,A,n)}return this.interpolate_(i,A,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,A=t*n;for(let t=0;t!==n;++t)e[t]=i[A+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Es.prototype.beforeStart_=Es.prototype.copySampleValue_,Es.prototype.afterEnd_=Es.prototype.copySampleValue_;class Ms extends Es{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:C,endingEnd:C}}intervalChanged_(t,e,i){const n=this.parameterPositions;let A=t-2,r=t+1,s=n[A],a=n[r];if(void 0===s)switch(this.getSettings_().endingStart){case I:A=t,s=2*e-i;break;case x:A=n.length-2,s=e+n[A]-n[A+1];break;default:A=t,s=i}if(void 0===a)switch(this.getSettings_().endingEnd){case I:r=t,a=2*i-e;break;case x:r=1,a=i+n[1]-n[0];break;default:r=t-1,a=e}const o=.5*(i-e),l=this.valueSize;this._weightPrev=o/(e-s),this._weightNext=o/(a-i),this._offsetPrev=A*l,this._offsetNext=r*l}interpolate_(t,e,i,n){const A=this.resultBuffer,r=this.sampleValues,s=this.valueSize,a=t*s,o=a-s,l=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,u=this._weightNext,d=(i-e)/(n-e),g=d*d,p=g*d,m=-h*p+2*h*g-h*d,f=(1+h)*p+(-1.5-2*h)*g+(-.5+h)*d+1,v=(-1-u)*p+(1.5+u)*g+.5*d,y=u*p-u*g;for(let t=0;t!==s;++t)A[t]=m*r[l+t]+f*r[o+t]+v*r[a+t]+y*r[c+t];return A}}class _s extends Es{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const A=this.resultBuffer,r=this.sampleValues,s=this.valueSize,a=t*s,o=a-s,l=(i-e)/(n-e),c=1-l;for(let t=0;t!==s;++t)A[t]=r[o+t]*c+r[a+t]*l;return A}}class Bs extends Es{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class bs{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ws.convertArray(e,this.TimeBufferType),this.values=ws.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:ws.convertArray(t.times,Array),values:ws.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new Bs(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new _s(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Ms(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case f:e=this.InterpolantFactoryMethodDiscrete;break;case v:e=this.InterpolantFactoryMethodLinear;break;case y:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return f;case this.InterpolantFactoryMethodLinear:return v;case this.InterpolantFactoryMethodSmooth:return y}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let A=0,r=n-1;for(;A!==n&&i[A]<t;)++A;for(;-1!==r&&i[r]>e;)--r;if(++r,0!==A||r!==n){A>=r&&(r=Math.max(r,1),A=r-1);const t=this.getValueSize();this.times=ws.arraySlice(i,A,r),this.values=ws.arraySlice(this.values,A*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,A=i.length;0===A&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==A;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==r&&r>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,r),t=!1;break}r=n}if(void 0!==n&&ws.isTypedArray(n))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}return t}optimize(){const t=ws.arraySlice(this.times),e=ws.arraySlice(this.values),i=this.getValueSize(),n=this.getInterpolation()===y,A=t.length-1;let r=1;for(let s=1;s<A;++s){let A=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==t[0]))if(n)A=!0;else{const t=s*i,n=t-i,r=t+i;for(let s=0;s!==i;++s){const i=e[t+s];if(i!==e[n+s]||i!==e[r+s]){A=!0;break}}}if(A){if(s!==r){t[r]=t[s];const n=s*i,A=r*i;for(let t=0;t!==i;++t)e[A+t]=e[n+t]}++r}}if(A>0){t[r]=t[A];for(let t=A*i,n=r*i,s=0;s!==i;++s)e[n+s]=e[t+s];++r}return r!==t.length?(this.times=ws.arraySlice(t,0,r),this.values=ws.arraySlice(e,0,r*i)):(this.times=t,this.values=e),this}clone(){const t=ws.arraySlice(this.times,0),e=ws.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}bs.prototype.TimeBufferType=Float32Array,bs.prototype.ValueBufferType=Float32Array,bs.prototype.DefaultInterpolation=v;class Ss extends bs{}Ss.prototype.ValueTypeName="bool",Ss.prototype.ValueBufferType=Array,Ss.prototype.DefaultInterpolation=f,Ss.prototype.InterpolantFactoryMethodLinear=void 0,Ss.prototype.InterpolantFactoryMethodSmooth=void 0;class Qs extends bs{}Qs.prototype.ValueTypeName="color";class Ts extends bs{}Ts.prototype.ValueTypeName="number";class Ds extends Es{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const A=this.resultBuffer,r=this.sampleValues,s=this.valueSize,a=(i-e)/(n-e);let o=t*s;for(let t=o+s;o!==t;o+=4)X.slerpFlat(A,0,r,o-s,r,o,a);return A}}class Ls extends bs{InterpolantFactoryMethodLinear(t){return new Ds(this.times,this.values,this.getValueSize(),t)}}Ls.prototype.ValueTypeName="quaternion",Ls.prototype.DefaultInterpolation=v,Ls.prototype.InterpolantFactoryMethodSmooth=void 0;class Rs extends bs{}Rs.prototype.ValueTypeName="string",Rs.prototype.ValueBufferType=Array,Rs.prototype.DefaultInterpolation=f,Rs.prototype.InterpolantFactoryMethodLinear=void 0,Rs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ns extends bs{}Ns.prototype.ValueTypeName="vector";class Ps{constructor(t,e=-1,i,n=2500){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=R(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],i=t.tracks,n=1/(t.fps||1);for(let t=0,A=i.length;t!==A;++t)e.push(ks(i[t]).scale(n));const A=new this(t.name,t.duration,e,t.blendMode);return A.uuid=t.uuid,A}static toJSON(t){const e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,n=i.length;t!==n;++t)e.push(bs.toJSON(i[t]));return n}static CreateFromMorphTargetSequence(t,e,i,n){const A=e.length,r=[];for(let t=0;t<A;t++){let s=[],a=[];s.push((t+A-1)%A,t,(t+1)%A),a.push(0,1,0);const o=ws.getKeyframeOrder(s);s=ws.sortedArray(s,1,o),a=ws.sortedArray(a,1,o),n||0!==s[0]||(s.push(A),a.push(a[0])),r.push(new Ts(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/i))}return new this(t,-1,r)}static findByName(t,e){let i=t;if(!Array.isArray(t)){const e=t;i=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<i.length;t++)if(i[t].name===e)return i[t];return null}static CreateClipsFromMorphTargetSequences(t,e,i){const n={},A=/^([\w-]*?)([\d]+)$/;for(let e=0,i=t.length;e<i;e++){const i=t[e],r=i.name.match(A);if(r&&r.length>1){const t=r[1];let e=n[t];e||(n[t]=e=[]),e.push(i)}}const r=[];for(const t in n)r.push(this.CreateFromMorphTargetSequence(t,n[t],e,i));return r}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(t,e,i,n,A){if(0!==i.length){const r=[],s=[];ws.flattenJSON(i,r,s,n),0!==r.length&&A.push(new t(e,r,s))}},n=[],A=t.name||"default",r=t.fps||30,s=t.blendMode;let a=t.length||-1;const o=t.hierarchy||[];for(let t=0;t<o.length;t++){const A=o[t].keys;if(A&&0!==A.length)if(A[0].morphTargets){const t={};let e;for(e=0;e<A.length;e++)if(A[e].morphTargets)for(let i=0;i<A[e].morphTargets.length;i++)t[A[e].morphTargets[i]]=-1;for(const i in t){const t=[],r=[];for(let n=0;n!==A[e].morphTargets.length;++n){const n=A[e];t.push(n.time),r.push(n.morphTarget===i?1:0)}n.push(new Ts(".morphTargetInfluence["+i+"]",t,r))}a=t.length*(r||1)}else{const r=".bones["+e[t].name+"]";i(Ns,r+".position",A,"pos",n),i(Ls,r+".quaternion",A,"rot",n),i(Ns,r+".scale",A,"scl",n)}}if(0===n.length)return null;return new this(A,a,n,s)}resetDuration(){let t=0;for(let e=0,i=this.tracks.length;e!==i;++e){const i=this.tracks[e];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function ks(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ts;case"vector":case"vector2":case"vector3":case"vector4":return Ns;case"color":return Qs;case"quaternion":return Ls;case"bool":case"boolean":return Ss;case"string":return Rs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],i=[];ws.flattenJSON(t.keys,e,i,"value"),t.times=e,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Gs={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const Fs=new class{constructor(t,e,i){const n=this;let A,r=!1,s=0,a=0;const o=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){a++,!1===r&&void 0!==n.onStart&&n.onStart(t,s,a),r=!0},this.itemEnd=function(t){s++,void 0!==n.onProgress&&n.onProgress(t,s,a),s===a&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return A?A(t):t},this.setURLModifier=function(t){return A=t,this},this.addHandler=function(t,e){return o.push(t,e),this},this.removeHandler=function(t){const e=o.indexOf(t);return-1!==e&&o.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=o.length;e<i;e+=2){const i=o[e],n=o[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return n}return null}}};class Us{constructor(t){this.manager=void 0!==t?t:Fs,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(n,A){i.load(t,n,e,A)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const zs={};class Hs extends Us{constructor(t){super(t)}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const A=this,r=Gs.get(t);if(void 0!==r)return A.manager.itemStart(t),setTimeout((function(){e&&e(r),A.manager.itemEnd(t)}),0),r;if(void 0!==zs[t])return void zs[t].push({onLoad:e,onProgress:i,onError:n});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(s){const i=s[1],r=!!s[2];let a=s[3];a=decodeURIComponent(a),r&&(a=atob(a));try{let n;const r=(this.responseType||"").toLowerCase();switch(r){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);n="blob"===r?new Blob([t.buffer],{type:i}):t.buffer;break;case"document":const e=new DOMParser;n=e.parseFromString(a,i);break;case"json":n=JSON.parse(a);break;default:n=a}setTimeout((function(){e&&e(n),A.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){n&&n(e),A.manager.itemError(t),A.manager.itemEnd(t)}),0)}}else{zs[t]=[],zs[t].push({onLoad:e,onProgress:i,onError:n}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const i=this.response,n=zs[t];if(delete zs[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Gs.add(t,i);for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onLoad&&e.onLoad(i)}A.manager.itemEnd(t)}else{for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}A.manager.itemError(t),A.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const i=zs[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onProgress&&n.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const i=zs[t];delete zs[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}A.manager.itemError(t),A.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const i=zs[t];delete zs[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}A.manager.itemError(t),A.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return A.manager.itemStart(t),a}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Os extends Us{constructor(t){super(t)}load(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const A=this,r=Gs.get(t);if(void 0!==r)return A.manager.itemStart(t),setTimeout((function(){e&&e(r),A.manager.itemEnd(t)}),0),r;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){s.removeEventListener("load",a,!1),s.removeEventListener("error",o,!1),Gs.add(t,this),e&&e(this),A.manager.itemEnd(t)}function o(e){s.removeEventListener("load",a,!1),s.removeEventListener("error",o,!1),n&&n(e),A.manager.itemError(t),A.manager.itemEnd(t)}return s.addEventListener("load",a,!1),s.addEventListener("error",o,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),A.manager.itemStart(t),s.src=t,s}}class Ws extends Us{constructor(t){super(t)}load(t,e,i,n){const A=new li,r=new Os(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let s=0;function a(i){r.load(t[i],(function(t){A.images[i]=t,s++,6===s&&(A.needsUpdate=!0,e&&e(A))}),void 0,n)}for(let e=0;e<t.length;++e)a(e);return A}}class Vs extends Us{constructor(t){super(t)}load(t,e,i,n){const A=new W,r=new Os(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,(function(i){A.image=i;const n=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);A.format=n?d:g,A.needsUpdate=!0,void 0!==e&&e(A)}),i,n),A}}class Js extends _r{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Ur(e,t))}getPoint(t){const e=t*this.getLength(),i=this.getCurveLengths();let n=0;for(;n<i.length;){if(i[n]>=e){const t=i[n]-e,A=this.curves[n],r=A.getLength(),s=0===r?0:1-t/r;return A.getPointAt(s)}n++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let n=0,A=this.curves;n<A.length;n++){const r=A[n],s=r&&r.isEllipseCurve?2*t:r&&(r.isLineCurve||r.isLineCurve3)?1:r&&r.isSplineCurve?t*r.points.length:t,a=r.getPoints(s);for(let t=0;t<a.length;t++){const n=a[t];i&&i.equals(n)||(e.push(n),i=n)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push((new Wr[i.type]).fromJSON(i))}return this}}class Ys extends Js{constructor(t){super(),this.type="Path",this.currentPoint=new F,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new Ur(this.currentPoint.clone(),new F(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,n){const A=new zr(this.currentPoint.clone(),new F(t,e),new F(i,n));return this.curves.push(A),this.currentPoint.set(i,n),this}bezierCurveTo(t,e,i,n,A,r){const s=new Gr(this.currentPoint.clone(),new F(t,e),new F(i,n),new F(A,r));return this.curves.push(s),this.currentPoint.set(A,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new Or(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,n,A,r){const s=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+s,e+a,i,n,A,r),this}absarc(t,e,i,n,A,r){return this.absellipse(t,e,i,i,n,A,r),this}ellipse(t,e,i,n,A,r,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+o,e+l,i,n,A,r,s,a),this}absellipse(t,e,i,n,A,r,s,a){const o=new Br(t,e,i,n,A,r,s,a);if(this.curves.length>0){const t=o.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(o);const l=o.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class qs extends Ys{constructor(t){super(t),this.uuid=R(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push((new Ys).fromJSON(i))}return this}}class Xs extends jt{constructor(t,e=1){super(),this.type="Light",this.color=new ve(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}Xs.prototype.isLight=!0;(class extends Xs{constructor(t,e,i){super(t,i),this.type="HemisphereLight",this.position.copy(jt.DefaultUp),this.updateMatrix(),this.groundColor=new ve(e)}copy(t){return Xs.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const Ks=new Bt,Zs=new K,js=new K;class $s{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new F(512,512),this.map=null,this.mapPass=null,this.matrix=new Bt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new fi,this._frameExtents=new F(1,1),this._viewportCount=1,this._viewports=[new J(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;Zs.setFromMatrixPosition(t.matrixWorld),e.position.copy(Zs),js.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(js),e.updateMatrixWorld(),Ks.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ks),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class ta extends $s{constructor(){super(new si(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,i=2*L*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,A=t.distance||e.far;i===e.fov&&n===e.aspect&&A===e.far||(e.fov=i,e.aspect=n,e.far=A,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}ta.prototype.isSpotLightShadow=!0;(class extends Xs{constructor(t,e,i=0,n=Math.PI/3,A=0,r=1){super(t,e),this.type="SpotLight",this.position.copy(jt.DefaultUp),this.updateMatrix(),this.target=new jt,this.distance=i,this.angle=n,this.penumbra=A,this.decay=r,this.shadow=new ta}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isSpotLight=!0;const ea=new Bt,ia=new K,na=new K;class Aa extends $s{constructor(){super(new si(90,1,.5,500)),this._frameExtents=new F(4,2),this._viewportCount=6,this._viewports=[new J(2,1,1,1),new J(0,1,1,1),new J(3,1,1,1),new J(1,1,1,1),new J(3,0,1,1),new J(1,0,1,1)],this._cubeDirections=[new K(1,0,0),new K(-1,0,0),new K(0,0,1),new K(0,0,-1),new K(0,1,0),new K(0,-1,0)],this._cubeUps=[new K(0,1,0),new K(0,1,0),new K(0,1,0),new K(0,1,0),new K(0,0,1),new K(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,A=t.distance||i.far;A!==i.far&&(i.far=A,i.updateProjectionMatrix()),ia.setFromMatrixPosition(t.matrixWorld),i.position.copy(ia),na.copy(i.position),na.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(na),i.updateMatrixWorld(),n.makeTranslation(-ia.x,-ia.y,-ia.z),ea.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ea)}}Aa.prototype.isPointLightShadow=!0;(class extends Xs{constructor(t,e,i=0,n=1){super(t,e),this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Aa}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class ra extends ri{constructor(t=-1,e=1,i=1,n=-1,A=.1,r=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=A,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,A,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=A,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let A=i-t,r=i+t,s=n+e,a=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;A+=t*this.view.offsetX,r=A+t*this.view.width,s-=e*this.view.offsetY,a=s-e*this.view.height}this.projectionMatrix.makeOrthographic(A,r,s,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}ra.prototype.isOrthographicCamera=!0;class sa extends $s{constructor(){super(new ra(-5,5,5,-5,.5,500))}}sa.prototype.isDirectionalLightShadow=!0;(class extends Xs{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(jt.DefaultUp),this.updateMatrix(),this.target=new jt,this.shadow=new sa}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isDirectionalLight=!0;(class extends Xs{constructor(t,e){super(t,e),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends Xs{constructor(t,e,i=10,n=10){super(t,e),this.type="RectAreaLight",this.width=i,this.height=n}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class aa{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new K)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,n=t.y,A=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*n),e.addScaledVector(r[2],.488603*A),e.addScaledVector(r[3],.488603*i),e.addScaledVector(r[4],i*n*1.092548),e.addScaledVector(r[5],n*A*1.092548),e.addScaledVector(r[6],.315392*(3*A*A-1)),e.addScaledVector(r[7],i*A*1.092548),e.addScaledVector(r[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){const i=t.x,n=t.y,A=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*n),e.addScaledVector(r[2],1.023328*A),e.addScaledVector(r[3],1.023328*i),e.addScaledVector(r[4],.858086*i*n),e.addScaledVector(r[5],.858086*n*A),e.addScaledVector(r[6],.743125*A*A-.247708),e.addScaledVector(r[7],.858086*i*A),e.addScaledVector(r[8],.429043*(i*i-n*n)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this}toArray(t=[],e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}static getBasisAt(t,e){const i=t.x,n=t.y,A=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*A,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*A,e[6]=.315392*(3*A*A-1),e[7]=1.092548*i*A,e[8]=.546274*(i*i-n*n)}}aa.prototype.isSphericalHarmonics3=!0;class oa extends Xs{constructor(t=new aa,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}oa.prototype.isLightProbe=!0;(class extends Re{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}).prototype.isInstancedBufferGeometry=!0;(class extends xe{constructor(t,e,i,n=1){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,i),this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}).prototype.isInstancedBufferAttribute=!0;let la;(class extends Us{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const A=this,r=Gs.get(t);if(void 0!==r)return A.manager.itemStart(t),setTimeout((function(){e&&e(r),A.manager.itemEnd(t)}),0),r;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(A.options,{colorSpaceConversion:"none"}))})).then((function(i){Gs.add(t,i),e&&e(i),A.manager.itemEnd(t)})).catch((function(e){n&&n(e),A.manager.itemError(t),A.manager.itemEnd(t)})),A.manager.itemStart(t)}}).prototype.isImageBitmapLoader=!0;const ca=function(){return void 0===la&&(la=new(window.AudioContext||window.webkitAudioContext)),la};class ha extends Us{constructor(t){super(t)}load(t,e,i,n){const A=this,r=new Hs(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(i){try{const t=i.slice(0);ca().decodeAudioData(t,(function(t){e(t)}))}catch(e){n?n(e):console.error(e),A.manager.itemError(t)}}),i,n)}}(class extends oa{constructor(t,e,i=1){super(void 0,i);const n=(new ve).set(t),A=(new ve).set(e),r=new K(n.r,n.g,n.b),s=new K(A.r,A.g,A.b),a=Math.sqrt(Math.PI),o=a*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(s).multiplyScalar(a),this.sh.coefficients[1].copy(r).sub(s).multiplyScalar(o)}}).prototype.isHemisphereLightProbe=!0;(class extends oa{constructor(t,e=1){super(void 0,e);const i=(new ve).set(t);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}).prototype.isAmbientLightProbe=!0;class ua{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=da(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=da();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function da(){return("undefined"==typeof performance?Date:performance).now()}class ga{constructor(t,e,i){let n,A,r;switch(this.binding=t,this.valueSize=i,e){case"quaternion":n=this._slerp,A=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,A=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,A=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=A,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const i=this.buffer,n=this.valueSize,A=t*n+n;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==n;++t)i[A+t]=i[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(i,A,0,t,n)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,i=this.buffer,n=t*e+e,A=this.cumulativeWeight,r=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,A<1){const t=e*this._origIndex;this._mixBufferRegion(i,n,t,1-A,e)}r>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*e,1,e);for(let t=e,A=e+e;t!==A;++t)if(i[t]!==i[t+e]){s.setValue(i,n);break}}saveOriginalState(){const t=this.binding,e=this.buffer,i=this.valueSize,n=i*this._origIndex;t.getValue(e,n);for(let t=i,A=n;t!==A;++t)e[t]=e[n+t%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,i,n,A){if(n>=.5)for(let n=0;n!==A;++n)t[e+n]=t[i+n]}_slerp(t,e,i,n){X.slerpFlat(t,e,t,e,t,i,n)}_slerpAdditive(t,e,i,n,A){const r=this._workIndex*A;X.multiplyQuaternionsFlat(t,r,t,e,t,i),X.slerpFlat(t,e,t,e,t,r,n)}_lerp(t,e,i,n,A){const r=1-n;for(let s=0;s!==A;++s){const A=e+s;t[A]=t[A]*r+t[i+s]*n}}_lerpAdditive(t,e,i,n,A){for(let r=0;r!==A;++r){const A=e+r;t[A]=t[A]+t[i+r]*n}}}const pa="\\[\\]\\.:\\/",ma=new RegExp("[\\[\\]\\.:\\/]","g"),fa="[^\\[\\]\\.:\\/]",va="[^"+pa.replace("\\.","")+"]",ya=/((?:WC+[\/:])*)/.source.replace("WC",fa),Ca=/(WCOD+)?/.source.replace("WCOD",va),Ia=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fa),xa=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fa),wa=new RegExp("^"+ya+Ca+Ia+xa+"$"),Ea=["material","materials","bones"];class Ma{constructor(t,e,i){this.path=e,this.parsedPath=i||Ma.parseTrackName(e),this.node=Ma.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new Ma.Composite(t,e,i):new Ma(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(ma,"")}static parseTrackName(t){const e=wa.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==Ea.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const A=t[n];if(A.name===e||A.uuid===e)return A;const r=i(A.children);if(r)return r}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.node[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,A=i.length;n!==A;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,A=i.length;n!==A;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,A=i.length;n!==A;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,A=i.length;n!==A;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let A=e.propertyIndex;if(t||(t=Ma.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const r=t[n];if(void 0===r){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==A){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[A]&&(A=t.morphTargetDictionary[A])}a=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=A}else void 0!==r.fromArray&&void 0!==r.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(a=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=n;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ma.Composite=class{constructor(t,e,i){const n=i||Ma.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,A=i.length;n!==A;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},Ma.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ma.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ma.prototype.GetterByBindingType=[Ma.prototype._getValue_direct,Ma.prototype._getValue_array,Ma.prototype._getValue_arrayElement,Ma.prototype._getValue_toArray],Ma.prototype.SetterByBindingTypeAndVersioning=[[Ma.prototype._setValue_direct,Ma.prototype._setValue_direct_setNeedsUpdate,Ma.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ma.prototype._setValue_array,Ma.prototype._setValue_array_setNeedsUpdate,Ma.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ma.prototype._setValue_arrayElement,Ma.prototype._setValue_arrayElement_setNeedsUpdate,Ma.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ma.prototype._setValue_fromArray,Ma.prototype._setValue_fromArray_setNeedsUpdate,Ma.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class _a{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const A=e.tracks,r=A.length,s=new Array(r),a={endingStart:C,endingEnd:C};for(let t=0;t!==r;++t){const e=A[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const i=this._clip.duration,n=t._clip.duration,A=n/i,r=i/n;t.warp(1,A,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,A=n.time,r=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=n._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=A,a[1]=A+i,o[0]=t/r,o[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,i,n){if(!this.enabled)return void this._updateWeight(t);const A=this._startTime;if(null!==A){const n=(t-A)*i;if(n<0||0===i)return;this._startTime=null,e=i*n}e*=this._updateTimeScale(t);const r=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let i=0,n=t.length;i!==n;++i)t[i].evaluate(r),e[i].accumulateAdditive(s);break;case w:default:for(let i=0,A=t.length;i!==A;++i)t[i].evaluate(r),e[i].accumulate(n,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,A=this._loopCount;const r=2202===i;if(0===t)return-1===A?n:r&&1==(1&A)?e-n:n;if(2200===i){-1===A&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else{if(!(n<0)){this.time=n;break t}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===A&&(t>=0?(A=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),n>=e||n<0){const i=Math.floor(n/e);n-=e*i,A+=Math.abs(i);const s=this.repetitions-A;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=t>0?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=A,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(r&&1==(1&A))return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=I,n.endingEnd=I):(n.endingStart=t?this.zeroSlopeAtStart?I:C:x,n.endingEnd=e?this.zeroSlopeAtEnd?I:C:x)}_scheduleFading(t,e,i){const n=this._mixer,A=n.time;let r=this._weightInterpolant;null===r&&(r=n._lendControlInterpolant(),this._weightInterpolant=r);const s=r.parameterPositions,a=r.sampleValues;return s[0]=A,a[0]=e,s[1]=A+t,a[1]=i,this}}(class extends Q{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const i=t._localRoot||this._root,n=t._clip.tracks,A=n.length,r=t._propertyBindings,s=t._interpolants,a=i.uuid,o=this._bindingsByRootAndName;let l=o[a];void 0===l&&(l={},o[a]=l);for(let t=0;t!==A;++t){const A=n[t],o=A.name;let c=l[o];if(void 0!==c)r[t]=c;else{if(c=r[t],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,a,o));continue}const n=e&&e._propertyBindings[t].binding.parsedPath;c=new ga(Ma.create(i,o,n),A.ValueTypeName,A.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,a,o),r[t]=c}s[t].resultBuffer=c.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,i){const n=this._actions,A=this._actionsByClip;let r=A[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,A[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=n.length,n.push(t),r.actionByRoot[i]=t}_removeInactiveAction(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const A=t._clip.uuid,r=this._actionsByClip,s=r[A],a=s.knownActions,o=a[a.length-1],l=t._byClipCacheIndex;o._byClipCacheIndex=l,a[l]=o,a.pop(),t._byClipCacheIndex=null;delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete r[A],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,A=e[n];t._cacheIndex=n,e[n]=t,A._cacheIndex=i,e[i]=A}_takeBackAction(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,A=e[n];t._cacheIndex=n,e[n]=t,A._cacheIndex=i,e[i]=A}_addInactiveBinding(t,e,i){const n=this._bindingsByRootAndName,A=this._bindings;let r=n[e];void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=A.length,A.push(t)}_removeInactiveBinding(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,A=i.path,r=this._bindingsByRootAndName,s=r[n],a=e[e.length-1],o=t._cacheIndex;a._cacheIndex=o,e[o]=a,e.pop(),delete s[A],0===Object.keys(s).length&&delete r[n]}_lendBinding(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,A=e[n];t._cacheIndex=n,e[n]=t,A._cacheIndex=i,e[i]=A}_takeBackBinding(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,A=e[n];t._cacheIndex=n,e[n]=t,A._cacheIndex=i,e[i]=A}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return void 0===i&&(i=new _s(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=e,t[e]=i),i}_takeBackControlInterpolant(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,A=e[n];t.__cacheIndex=n,e[n]=t,A.__cacheIndex=i,e[i]=A}clipAction(t,e,i){const n=e||this._root,A=n.uuid;let r="string"==typeof t?Ps.findByName(n,t):t;const s=null!==r?r.uuid:t,a=this._actionsByClip[s];let o=null;if(void 0===i&&(i=null!==r?r.blendMode:w),void 0!==a){const t=a.actionByRoot[A];if(void 0!==t&&t.blendMode===i)return t;o=a.knownActions[0],null===r&&(r=o._clip)}if(null===r)return null;const l=new _a(this,r,e,i);return this._bindAction(l,o),this._addInactiveAction(l,s,A),l}existingAction(t,e){const i=e||this._root,n=i.uuid,A="string"==typeof t?Ps.findByName(i,t):t,r=A?A.uuid:t,s=this._actionsByClip[r];return void 0!==s&&s.actionByRoot[n]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,i=this._nActiveActions,n=this.time+=t,A=Math.sign(t),r=this._accuIndex^=1;for(let s=0;s!==i;++s){e[s]._update(n,t,A,r)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,i=t.uuid,n=this._actionsByClip,A=n[i];if(void 0!==A){const t=A.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const A=n._cacheIndex,r=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,r._cacheIndex=A,e[A]=r,e.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}}uncacheRoot(t){const e=t.uuid,i=this._actionsByClip;for(const t in i){const n=i[t].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[e];if(void 0!==n)for(const t in n){const e=n[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);(class extends PA{constructor(t,e,i=1){super(t,e),this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}).prototype.isInstancedInterleavedBuffer=!0;class Ba{constructor(t,e,i=0,n=1/0){this.ray=new _t(t,e),this.near=i,this.far=n,this.camera=null,this.layers=new Gt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!1,i=[]){return Sa(t,this,i,e),i.sort(ba),i}intersectObjects(t,e=!1,i=[]){for(let n=0,A=t.length;n<A;n++)Sa(t[n],this,i,e);return i.sort(ba),i}}function ba(t,e){return t.distance-e.distance}function Sa(t,e,i,n){if(t.layers.test(e.layers)&&t.raycast(e,i),!0===n){const n=t.children;for(let t=0,A=n.length;t<A;t++)Sa(n[t],e,i,!0)}}(class extends jt{constructor(t){super(),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}).prototype.isImmediateRenderObject=!0;const Qa=new K,Ta=new Bt,Da=new Bt;function La(t){const e=[];t&&t.isBone&&e.push(t);for(let i=0;i<t.children.length;i++)e.push.apply(e,La(t.children[i]));return e}const Ra=new Float32Array(1);new Int32Array(Ra.buffer);const Na=new ye({side:1,depthWrite:!1,depthTest:!1});new je(new ti,Na),_r.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(_r.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Ys.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends yr{constructor(t=10,e=10,i=4473924,n=8947848){i=new ve(i),n=new ve(n);const A=e/2,r=t/e,s=t/2,a=[],o=[];for(let t=0,l=0,c=-s;t<=e;t++,c+=r){a.push(-s,0,c,s,0,c),a.push(c,0,-s,c,0,s);const e=t===A?i:n;e.toArray(o,l),l+=3,e.toArray(o,l),l+=3,e.toArray(o,l),l+=3,e.toArray(o,l),l+=3}const l=new Re;l.setAttribute("position",new Me(a,3)),l.setAttribute("color",new Me(o,3));super(l,new cr({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends yr{constructor(t){const e=La(t),i=new Re,n=[],A=[],r=new ve(0,0,1),s=new ve(0,1,0);for(let t=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),A.push(r.r,r.g,r.b),A.push(s.r,s.g,s.b))}i.setAttribute("position",new Me(n,3)),i.setAttribute("color",new Me(A,3));super(i,new cr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,i=this.geometry,n=i.getAttribute("position");Da.copy(this.root.matrixWorld).invert();for(let t=0,i=0;t<e.length;t++){const A=e[t];A.parent&&A.parent.isBone&&(Ta.multiplyMatrices(Da,A.matrixWorld),Qa.setFromMatrixPosition(Ta),n.setXYZ(i,Qa.x,Qa.y,Qa.z),Ta.multiplyMatrices(Da,A.parent.matrixWorld),Qa.setFromMatrixPosition(Ta),n.setXYZ(i+1,Qa.x,Qa.y,Qa.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Us.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),class{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let i=0,n=t.length;i<n;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}.extractUrlBase(t)},Us.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},$.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},$.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},$.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},$.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},$.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},vt.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},fi.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},U.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},U.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},U.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},U.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},U.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},U.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Bt.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Bt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Bt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new K).setFromMatrixColumn(this,3)},Bt.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Bt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Bt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bt.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Bt.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Bt.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Bt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Bt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Bt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Bt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Bt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Bt.prototype.makeFrustum=function(t,e,i,n,A,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,A,r)},Bt.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},gi.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},X.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},X.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},_t.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},_t.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},_t.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},le.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},le.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},le.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},le.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},le.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},le.barycoordFromPoint=function(t,e,i,n,A){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),le.getBarycoord(t,e,i,n,A)},le.normal=function(t,e,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),le.getNormal(t,e,i,n)},qs.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},qs.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ys(this,t)},qs.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Is(this,t)},F.prototype.fromAttribute=function(t,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},F.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},F.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},K.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},K.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},K.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},K.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},K.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},K.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},K.prototype.fromAttribute=function(t,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},K.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},K.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},J.prototype.fromAttribute=function(t,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},J.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},jt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},jt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},jt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},jt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},jt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(jt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),je.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(je.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),rr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},si.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Xs.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(xe.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===b},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(b)}}}),xe.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?b:B),this},xe.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},xe.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Re.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},Re.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new xe(arguments[1],arguments[2])))},Re.prototype.addDrawCall=function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},Re.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Re.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Re.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},Re.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Re.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),PA.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?b:B),this},PA.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ys.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},ys.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},ys.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},NA.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Object.defineProperties(he.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ve}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Ai.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),LA.prototype.clearTarget=function(t,e,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,i,n)},LA.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},LA.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},LA.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},LA.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},LA.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},LA.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},LA.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},LA.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},LA.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},LA.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},LA.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},LA.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},LA.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},LA.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},LA.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},LA.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},LA.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},LA.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},LA.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},LA.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},LA.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},LA.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},LA.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},LA.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(LA.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?M:E}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(wA.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Y.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),class extends jt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new ha).load(t,(function(t){e.setBuffer(t)})),this},oi.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},oi.prototype.clear=function(t,e,i,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,i,n)},H.crossOrigin=void 0,H.loadTexture=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const A=new Vs;A.setCrossOrigin(this.crossOrigin);const r=A.load(t,i,void 0,n);return e&&(r.mapping=e),r},H.loadTextureCube=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const A=new Ws;A.setCrossOrigin(this.crossOrigin);const r=A.load(t,i,void 0,n);return e&&(r.mapping=e),r},H.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},H.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"130"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="130");class Pa extends je{static setupMaterial(){const{uniforms:t,vertexShader:e,fragmentShader:i}=wi.basic;Pa.material=new Ai({uniforms:ni.clone(t),vertexShader:e.replace("#include <color_vertex>","vColor.xyz = color.xyz / 255.0;"),fragmentShader:i,vertexColors:!0,fog:!0})}constructor({chunkSize:t,position:e,vertices:i}){Pa.material||Pa.setupMaterial();const n=new PA(i,6),A=new Re;A.setAttribute("position",new GA(n,3,0)),A.setAttribute("color",new GA(n,3,3)),super(A,Pa.material),this.chunk=(new K).copy(e),this.position.copy(e).multiplyScalar(t)}}function ka(t,e,i,n){function A(t,e,i){var n=i?WebAssembly.instantiateStreaming:WebAssembly.instantiate,A=i?WebAssembly.compileStreaming:WebAssembly.compile;return e?n(t,e):A(t)}var r=null,s="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node;if(e&&s){var a=require("fs"),o=require("path");return new Promise(((t,i)=>{a.readFile(o.resolve(__dirname,e),((e,r)=>{null!=e&&i(e),t(A(r,n,!1))}))}))}if(e)return A(fetch(e),n,!0);if(s)r=Buffer.from(i,"base64");else{var l=globalThis.atob(i),c=l.length;r=new Uint8Array(new ArrayBuffer(c));for(var h=0;h<c;h++)r[h]=l.charCodeAt(h)}if(t){var u=new WebAssembly.Module(r);return n?new WebAssembly.Instance(u,n):u}return A(r,n,!1)}function Ga(t){return ka(0,null,"",t)}var Fa=null;try{var Ua="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");Fa=Ua.Worker}catch(t){}var za,Ha,Oa,Wa,Va,Ja,Ya,qa=(za="Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0LGlzb2xldmVsOm59LHByb2dyYW06aX19KT0+eygoe21lbW9yeTplLHByb2dyYW06c30pPT57Y29uc3Qgcj1NYXRoLmNlaWwoZS5yZWR1Y2UoKChlLHt0eXBlOnMsc2l6ZTpyfSk9PmUrcipzLkJZVEVTX1BFUl9FTEVNRU5UKSwwKS82NTUzNikrMix0PW5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe2luaXRpYWw6cixtYXhpbXVtOnJ9KTtyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUocyx7ZW52OnttZW1vcnk6dH19KS50aGVuKChzPT4oe21lbW9yeTplLnJlZHVjZSgoKGUse2lkOnIsdHlwZTpuLHNpemU6aX0pPT57Y29uc3Qgbz1zLmV4cG9ydHMubWFsbG9jKGkqbi5CWVRFU19QRVJfRUxFTUVOVCk7cmV0dXJuIGVbcl09e2FkZHJlc3M6byx2aWV3Om5ldyBuKHQuYnVmZmVyLG8saSl9LGV9KSx7fSkscnVuOnMuZXhwb3J0cy5ydW59KSkpfSkoe21lbW9yeTpbe2lkOiJjaHVua3MiLHR5cGU6VWludDhBcnJheSxzaXplOnQqdCp0KjQqOH0se2lkOiJ2ZXJ0aWNlcyIsdHlwZTpVaW50OEFycmF5LHNpemU6dCp0KnQqMyo2KjV9XSxwcm9ncmFtOml9KS50aGVuKCgoe21lbW9yeTppLHJ1bjpvfSk9PntlPXtjaHVua1NpemU6dCxpc29sZXZlbDpuLG1lbW9yeTppLHJ1bjpvfSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsciksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgcj0oe2RhdGE6e2NodW5rczpzfX0pPT57bGV0IHI9MDtzLmZvckVhY2goKHM9PntlLm1lbW9yeS5jaHVua3Mudmlldy5zZXQocyxyKSxyKz1zLmxlbmd0aH0pKTtjb25zdCB0PWUucnVuKGUubWVtb3J5LmNodW5rcy5hZGRyZXNzLGUubWVtb3J5LnZlcnRpY2VzLmFkZHJlc3MsZS5jaHVua1NpemUsZS5pc29sZXZlbCk7aWYoMD09PXQpcmV0dXJuIHZvaWQgc2VsZi5wb3N0TWVzc2FnZSghMSk7Y29uc3Qgbj1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMyp0KjYpO3NlbGYucG9zdE1lc3NhZ2Uobixbbi5idWZmZXJdKX19KCk7Cgo=",null,!1,"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)?(Wa=void 0===(Ha=null)?null:Ha,Va=function(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}(za,void 0!==(Oa=!1)&&Oa),Ja=Va.indexOf("\n",10)+1,Ya=Va.substring(Ja)+(Wa?"//# sourceMappingURL="+Wa:""),function(t){return new Fa(Ya,Object.assign({},t,{eval:!0}))}):function(t,e,i){var n;return function(t){return n=n||function(t,e,i){var n=void 0===e?null:e,A=function(t,e){var i=atob(t);if(e){for(var n=new Uint8Array(i.length),A=0,r=i.length;A<r;++A)n[A]=i.charCodeAt(A);return String.fromCharCode.apply(null,new Uint16Array(n.buffer))}return i}(t,void 0!==i&&i),r=A.indexOf("\n",10)+1,s=A.substring(r)+(n?"//# sourceMappingURL="+n:""),a=new Blob([s],{type:"application/javascript"});return URL.createObjectURL(a)}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0LGlzb2xldmVsOm59LHByb2dyYW06aX19KT0+eygoe21lbW9yeTplLHByb2dyYW06c30pPT57Y29uc3Qgcj1NYXRoLmNlaWwoZS5yZWR1Y2UoKChlLHt0eXBlOnMsc2l6ZTpyfSk9PmUrcipzLkJZVEVTX1BFUl9FTEVNRU5UKSwwKS82NTUzNikrMix0PW5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe2luaXRpYWw6cixtYXhpbXVtOnJ9KTtyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUocyx7ZW52OnttZW1vcnk6dH19KS50aGVuKChzPT4oe21lbW9yeTplLnJlZHVjZSgoKGUse2lkOnIsdHlwZTpuLHNpemU6aX0pPT57Y29uc3Qgbz1zLmV4cG9ydHMubWFsbG9jKGkqbi5CWVRFU19QRVJfRUxFTUVOVCk7cmV0dXJuIGVbcl09e2FkZHJlc3M6byx2aWV3Om5ldyBuKHQuYnVmZmVyLG8saSl9LGV9KSx7fSkscnVuOnMuZXhwb3J0cy5ydW59KSkpfSkoe21lbW9yeTpbe2lkOiJjaHVua3MiLHR5cGU6VWludDhBcnJheSxzaXplOnQqdCp0KjQqOH0se2lkOiJ2ZXJ0aWNlcyIsdHlwZTpVaW50OEFycmF5LHNpemU6dCp0KnQqMyo2KjV9XSxwcm9ncmFtOml9KS50aGVuKCgoe21lbW9yeTppLHJ1bjpvfSk9PntlPXtjaHVua1NpemU6dCxpc29sZXZlbDpuLG1lbW9yeTppLHJ1bjpvfSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsciksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgcj0oe2RhdGE6e2NodW5rczpzfX0pPT57bGV0IHI9MDtzLmZvckVhY2goKHM9PntlLm1lbW9yeS5jaHVua3Mudmlldy5zZXQocyxyKSxyKz1zLmxlbmd0aH0pKTtjb25zdCB0PWUucnVuKGUubWVtb3J5LmNodW5rcy5hZGRyZXNzLGUubWVtb3J5LnZlcnRpY2VzLmFkZHJlc3MsZS5jaHVua1NpemUsZS5pc29sZXZlbCk7aWYoMD09PXQpcmV0dXJuIHZvaWQgc2VsZi5wb3N0TWVzc2FnZSghMSk7Y29uc3Qgbj1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMyp0KjYpO3NlbGYucG9zdE1lc3NhZ2Uobixbbi5idWZmZXJdKX19KCk7Cgo=",null,false),new Worker(n,t)}}());function Xa(t){return ka(0,null,"",t)}var Ka=null;try{var Za="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");Ka=Za.Worker}catch(t){}var ja="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0),$a=function(t,e,i){return ja?function(t,e,i){var n=void 0===e?null:e,A=function(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}(t,void 0!==i&&i),r=A.indexOf("\n",10)+1,s=A.substring(r)+(n?"//# sourceMappingURL="+n:"");return function(t){return new Ka(s,Object.assign({},t,{eval:!0}))}}(t,null,false):function(t,e,i){var n;return function(t){return n=n||function(t,e,i){var n=void 0===e?null:e,A=function(t,e){var i=atob(t);if(e){for(var n=new Uint8Array(i.length),A=0,r=i.length;A<r;++A)n[A]=i.charCodeAt(A);return String.fromCharCode.apply(null,new Uint16Array(n.buffer))}return i}(t,void 0!==i&&i),r=A.indexOf("\n",10)+1,s=A.substring(r)+(n?"//# sourceMappingURL="+n:""),a=new Blob([s],{type:"application/javascript"});return URL.createObjectURL(a)}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTpuLHNlZWQ6dH0scHJvZ3JhbTptfX0pPT57KCh7bWVtb3J5OmUscHJvZ3JhbTpzfSk9Pntjb25zdCByPU1hdGguY2VpbChlLnJlZHVjZSgoKGUse3R5cGU6cyxzaXplOnJ9KT0+ZStyKnMuQllURVNfUEVSX0VMRU1FTlQpLDApLzY1NTM2KSsyLG49bmV3IFdlYkFzc2VtYmx5Lk1lbW9yeSh7aW5pdGlhbDpyLG1heGltdW06cn0pO3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShzLHtlbnY6e21lbW9yeTpufX0pLnRoZW4oKHM9Pih7bWVtb3J5OmUucmVkdWNlKCgoZSx7aWQ6cix0eXBlOnQsc2l6ZTptfSk9Pntjb25zdCBvPXMuZXhwb3J0cy5tYWxsb2MobSp0LkJZVEVTX1BFUl9FTEVNRU5UKTtyZXR1cm4gZVtyXT17YWRkcmVzczpvLHZpZXc6bmV3IHQobi5idWZmZXIsbyxtKX0sZX0pLHt9KSxydW46cy5leHBvcnRzLnJ1bn0pKSl9KSh7bWVtb3J5Olt7aWQ6ImNodW5rIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTpuKm4qbio0fV0scHJvZ3JhbTptfSkudGhlbigoKHttZW1vcnk6bSxydW46b30pPT57ZT17Y2h1bmtTaXplOm4sbWVtb3J5Om0scnVuOm8sc2VlZDp0fSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsciksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgcj0oe2RhdGE6e3g6cyx5OnIsejpufX0pPT57ZS5ydW4oZS5tZW1vcnkuY2h1bmsuYWRkcmVzcyxlLmNodW5rU2l6ZSxlLnNlZWQscyxyLG4pO2NvbnN0IHQ9ZS5tZW1vcnkuY2h1bmsudmlldy5zbGljZSgwKTtzZWxmLnBvc3RNZXNzYWdlKHQsW3QuYnVmZmVyXSl9fSgpOwoK",null,false),new Worker(n,t)}}()}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTpuLHNlZWQ6dH0scHJvZ3JhbTptfX0pPT57KCh7bWVtb3J5OmUscHJvZ3JhbTpzfSk9Pntjb25zdCByPU1hdGguY2VpbChlLnJlZHVjZSgoKGUse3R5cGU6cyxzaXplOnJ9KT0+ZStyKnMuQllURVNfUEVSX0VMRU1FTlQpLDApLzY1NTM2KSsyLG49bmV3IFdlYkFzc2VtYmx5Lk1lbW9yeSh7aW5pdGlhbDpyLG1heGltdW06cn0pO3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShzLHtlbnY6e21lbW9yeTpufX0pLnRoZW4oKHM9Pih7bWVtb3J5OmUucmVkdWNlKCgoZSx7aWQ6cix0eXBlOnQsc2l6ZTptfSk9Pntjb25zdCBvPXMuZXhwb3J0cy5tYWxsb2MobSp0LkJZVEVTX1BFUl9FTEVNRU5UKTtyZXR1cm4gZVtyXT17YWRkcmVzczpvLHZpZXc6bmV3IHQobi5idWZmZXIsbyxtKX0sZX0pLHt9KSxydW46cy5leHBvcnRzLnJ1bn0pKSl9KSh7bWVtb3J5Olt7aWQ6ImNodW5rIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTpuKm4qbio0fV0scHJvZ3JhbTptfSkudGhlbigoKHttZW1vcnk6bSxydW46b30pPT57ZT17Y2h1bmtTaXplOm4sbWVtb3J5Om0scnVuOm8sc2VlZDp0fSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsciksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgcj0oe2RhdGE6e3g6cyx5OnIsejpufX0pPT57ZS5ydW4oZS5tZW1vcnkuY2h1bmsuYWRkcmVzcyxlLmNodW5rU2l6ZSxlLnNlZWQscyxyLG4pO2NvbnN0IHQ9ZS5tZW1vcnkuY2h1bmsudmlldy5zbGljZSgwKTtzZWxmLnBvc3RNZXNzYWdlKHQsW3QuYnVmZmVyXSl9fSgpOwoK");class to{constructor({instances:t,options:e,program:i,script:n}){this.queue=[],i().then((i=>{this.instances=[...Array(t)].map((()=>{const t=new n,A=()=>{t.removeEventListener("message",A),t.addEventListener("message",r)},r=({data:e})=>{const{resolve:i}=t;delete t.resolve,i(e);const n=this.queue.shift();if(n){const{operation:e,resolve:i}=n;t.resolve=i,t.postMessage(e)}else t.isBusy=!1};return t.addEventListener("message",A),t.postMessage({options:e,program:i}),t})),this.queue.length&&this.queue.splice(0,t).forEach((({operation:t,resolve:e})=>this.run(t).then(e)))}))}run(t){const{instances:e,queue:i}=this;return new Promise((n=>{if(!e)return void i.push({operation:t,resolve:n});let A;for(let t=0,i=e.length;t<i;t++)if(!e[t].isBusy){A=e[t];break}A?(A.isBusy=!0,A.resolve=n,A.postMessage(t)):i.push({operation:t,resolve:n})}))}}class eo extends jt{constructor({chunkSize:t=32,isolevel:e=.7,renderRadius:i=5,seed:n=Math.floor(2147483647*Math.random())}={}){super(),this.aux={chunk:new K},this.anchorChunk=new K(1/0,1/0,1/0),this.chunkSize=t,this.dataChunks=new Map,this.renderChunks=new Map,this.renderRadius=i,this.renderGrid=eo.getRenderGrid(i),this.loading={data:new Map,neighbors:new Map,mesh:new Map},this.workers={mesher:new to({options:{chunkSize:t,isolevel:Math.floor(255*e)},instances:4,program:Ga,script:qa}),worldgen:new to({options:{chunkSize:t,seed:n},instances:4,program:Xa,script:$a})}}generateChunk(t,e,i){const{dataChunks:n,loading:A,workers:r}=this,s=`${i}:${e}:${t}`;A.data.has(s)||(A.data.set(s,!0),r.worldgen.run({x:t,y:e,z:i}).then((r=>{n.set(s,r),A.data.set(s,!1);for(let n=i-1;n<=i+1;n++)for(let i=e-1;i<=e+1;i++)for(let e=t-1;e<=t+1;e++){const t=`${n}:${i}:${e}`;A.neighbors.has(t)&&this.loadChunk(e,i,n)}})))}loadChunk(t,e,i){const{chunkSize:n,dataChunks:A,renderChunks:r,loading:s,workers:a}=this,o=`${i}:${e}:${t}`;if(r.has(o)||s.mesh.has(o))return;let l=!1;const c=[];for(let n=i;n<=i+1;n++)for(let i=e;i<=e+1;i++)for(let e=t;e<=t+1;e++){const t=`${n}:${i}:${e}`;A.has(t)?c.push(A.get(t)):(this.generateChunk(e,i,n),l=!0)}l?s.neighbors.set(o):(s.neighbors.delete(o),s.mesh.set(o),a.mesher.run({chunks:c}).then((A=>{if(!A)return;s.mesh.delete(o);const a=new Pa({chunkSize:n,position:{x:t,y:e,z:i},vertices:A});this.add(a),r.set(o,a)})))}updateChunks(t){const{aux:{chunk:e},anchorChunk:i,chunkSize:n,renderChunks:A,renderGrid:r,renderRadius:s}=this;if(this.worldToLocal(e.copy(t)).divideScalar(n).floor(),i.equals(e))return;i.copy(e);const a=1.25*s;A.forEach(((t,e)=>{i.distanceTo(t.chunk)>a&&(this.remove(t),A.delete(e))})),r.forEach((({x:t,y:i,z:n})=>{this.loadChunk(e.x+t,e.y+i,e.z+n)}))}static getRenderGrid(t){const e=[],i=new K;for(let n=-t;n<=t;n+=1)for(let A=-t;A<=t;A+=1)for(let r=-t;r<=t;r+=1){const s=new K(r,A,n);s.distanceTo(i)<=t&&e.push(s)}return e.sort(((t,e)=>t.distanceTo(i)-e.distanceTo(i))),e}}class io extends bA{constructor({camera:t,dom:e}){super(),this.aux={center:new F,euler:new kt(0,0,0,"YXZ"),direction:new K,forward:new K,right:new K,worldUp:new K(0,1,0)},this.buttons={primary:!1,secondary:!1,tertiary:!1,view:!1},this.buttonState={...this.buttons},this.camera=t,this.keyboard=new K(0,0,0),this.pointer=new F(0,0),this.raycaster=new Ba,this.speed=6,this.add(t),this.onBlur=this.onBlur.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),this.onPointerLock=this.onPointerLock.bind(this),this.requestPointerLock=this.requestPointerLock.bind(this),window.addEventListener("blur",this.onBlur),document.addEventListener("keydown",this.onKeyDown),document.addEventListener("keyup",this.onKeyUp),document.addEventListener("mousedown",this.onMouseDown),document.addEventListener("mousemove",this.onMouseMove),document.addEventListener("mouseup",this.onMouseUp),document.addEventListener("wheel",this.onMouseWheel,!1),document.addEventListener("pointerlockchange",this.onPointerLock),e.renderer.addEventListener("mousedown",this.requestPointerLock)}onAnimationTick(t){const{aux:{center:e,euler:i,direction:n,forward:A,right:r,worldUp:s},buttons:a,buttonState:o,camera:l,keyboard:c,isLocked:h,pointer:u,position:d,speed:g,raycaster:p}=this;if(h){if(0!==u.x||0!==u.y){i.setFromQuaternion(l.quaternion),i.y-=.003*u.x,i.x-=.003*u.y,u.set(0,0);const t=Math.PI/2;i.x=Math.max(-t,Math.min(t,i.x)),l.quaternion.setFromEuler(i),l.updateMatrixWorld()}["primary","secondary","tertiary","view"].forEach((t=>{const e=o[t];a[`${t}Down`]=e&&a[t]!==e,a[`${t}Up`]=!e&&a[t]!==e,a[t]=e})),0===c.x&&0===c.y&&0===c.z||(l.getWorldDirection(A),r.crossVectors(s,A),d.addScaledVector(n.set(0,0,0).addScaledVector(r,-c.x).addScaledVector(s,c.y).addScaledVector(A,c.z).normalize(),t.delta*g),this.updateMatrixWorld()),p.setFromCamera(e,l)}}onBlur(){const{buttonState:t,keyboard:e}=this;t.primary=!1,t.secondary=!1,t.tertiary=!1,t.view=!1,e.set(0,0,0)}onKeyDown({keyCode:t,repeat:e}){const{buttonState:i,keyboard:n}=this;if(!e)switch(t){case 16:n.y=-1;break;case 32:n.y=1;break;case 87:n.z=1;break;case 83:n.z=-1;break;case 65:n.x=-1;break;case 68:n.x=1;break;case 70:i.tertiary=!0;break;case 86:i.view=!0}}onKeyUp({keyCode:t,repeat:e}){const{buttonState:i,keyboard:n}=this;if(!e)switch(t){case 16:n.y<0&&(n.y=0);break;case 32:n.y>0&&(n.y=0);break;case 87:n.z>0&&(n.z=0);break;case 83:n.z<0&&(n.z=0);break;case 65:n.x<0&&(n.x=0);break;case 68:n.x>0&&(n.x=0);break;case 70:i.tertiary=!1;break;case 86:i.view=!1}}onMouseDown({button:t}){const{buttonState:e,isLocked:i}=this;if(i)switch(t){case 0:e.primary=!0;break;case 1:e.tertiary=!0;break;case 2:e.secondary=!0}}onMouseMove({movementX:t,movementY:e}){const{isLocked:i,pointer:n}=this;i&&(n.x+=t,n.y+=e)}onMouseUp({button:t}){const{buttonState:e,isLocked:i}=this;if(i)switch(t){case 0:e.primary=!1;break;case 1:e.tertiary=!1;break;case 2:e.secondary=!1}}onMouseWheel({deltaY:t}){const{speed:e,isLocked:i}=this;if(!i)return;const{minSpeed:n,speedRange:A}=io,r=Math.min(Math.max((Math.log(e)-n)/A-3e-4*t,0),1);this.speed=Math.exp(n+r*A)}onPointerLock(){this.isLocked=!!document.pointerLockElement,document.body.classList[this.isLocked?"add":"remove"]("pointerlock"),this.isLocked||this.onBlur()}requestPointerLock(){const{isLocked:t}=this;t||document.body.requestPointerLock()}}io.minSpeed=Math.log(2),io.maxSpeed=Math.log(40),io.speedRange=io.maxSpeed-io.minSpeed;var no={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}"};class Ao{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const ro=new ra(-1,1,1,-1,0,1),so=new Re;so.setAttribute("position",new Me([-1,3,0,-1,-1,0,3,-1,0],3)),so.setAttribute("uv",new Me([0,2,0,0,2,0],2));class ao{constructor(t){this._mesh=new je(so,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,ro)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class oo extends Ao{constructor(t,e){super(),this.textureID=void 0!==e?e:"tDiffuse",t instanceof Ai?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=ni.clone(t.uniforms),this.material=new Ai({defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this.fsQuad=new ao(this.material)}render(t,e,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}}class lo extends Ao{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,i){const n=t.getContext(),A=t.state;let r,s;A.buffers.color.setMask(!1),A.buffers.depth.setMask(!1),A.buffers.color.setLocked(!0),A.buffers.depth.setLocked(!0),this.inverse?(r=0,s=1):(r=1,s=0),A.buffers.stencil.setTest(!0),A.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),A.buffers.stencil.setFunc(n.ALWAYS,r,4294967295),A.buffers.stencil.setClear(s),A.buffers.stencil.setLocked(!0),t.setRenderTarget(i),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),A.buffers.color.setLocked(!1),A.buffers.depth.setLocked(!1),A.buffers.stencil.setLocked(!1),A.buffers.stencil.setFunc(n.EQUAL,1,4294967295),A.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),A.buffers.stencil.setLocked(!0)}}class co extends Ao{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class ho{constructor(t,e){if(this.renderer=t,void 0===e){const i={minFilter:r,magFilter:r,format:g},n=t.getSize(new F);this._pixelRatio=t.getPixelRatio(),this._width=n.width,this._height=n.height,(e=new Y(this._width*this._pixelRatio,this._height*this._pixelRatio,i)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===no&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===oo&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new oo(no),this.clock=new ua}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);-1!==e&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){void 0===t&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let i=!1;for(let e=0,n=this.passes.length;e<n;e++){const n=this.passes[e];if(!1!==n.enabled){if(n.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(e),n.render(this.renderer,this.writeBuffer,this.readBuffer,t,i),n.needsSwap){if(i){const e=this.renderer.getContext(),i=this.renderer.state.buffers.stencil;i.setFunc(e.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),i.setFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==lo&&(n instanceof lo?i=!0:n instanceof co&&(i=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(void 0===t){const e=this.renderer.getSize(new F);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,(t=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(let t=0;t<this.passes.length;t++)this.passes[t].setSize(i,n)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}}new ra(-1,1,1,-1,0,1);const uo=new Re;uo.setAttribute("position",new Me([-1,3,0,-1,-1,0,3,-1,0],3)),uo.setAttribute("uv",new Me([0,2,0,0,2,0],2));class go extends Ao{constructor(t,e,i,n,A){super(),this.scene=t,this.camera=e,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=void 0!==A?A:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ve}render(t,e,i){const n=t.autoClear;let A,r;t.autoClear=!1,void 0!==this.overrideMaterial&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(t.getClearColor(this._oldClearColor),A=t.getClearAlpha(),t.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:i),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor&&t.setClearColor(this._oldClearColor,A),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=r),t.autoClear=n}}class po{constructor({dom:t,postprocessing:e}){this.clock=new ua,this.clock.localStartTime=Date.now(),this.fps={count:0,lastTick:this.clock.oldTime/1e3},this.dom=t,this.camera=new si(70,1,.1,2e3),this.camera.position.y=1.6,this.renderer=new LA({antialias:!0,stencil:!1,powerPreference:"high-performance"}),this.renderer.outputEncoding=M,this.renderer.toneMapping=4,this.renderer.setAnimationLoop(this.onAnimationTick.bind(this)),t.renderer.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onResize.bind(this),!1),this.onResize(),e&&(this.composer=function(t){const e=t.getDrawingBufferSize(new F),i=new q(e.x,e.y,{encoding:M,format:d}),n=new ho(t,i);return n.renderPass=new go,n.addPass(n.renderPass),n.shader=new oo({uniforms:{tDiffuse:{value:null},resolution:{value:e}},vertexShader:["varying highp vec2 vUv;","void main() {","  vUv = uv;","  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying highp vec2 vUv;","void main() {","  vec2 dxy = 3.0 / resolution;","  float l = mod(vUv.y, dxy.y) / dxy.y;","  float d = 0.75 - length(vUv - vec2(0.5, 0.5));","  float v = smoothstep(-0.5, 0.5, d);","  vec3 diffuse = texture2D(tDiffuse, vUv).xyz;","  gl_FragColor = vec4(diffuse * mix(vec3(1.0), vec3(l >= 0.5 ? 1.0 - l : l), 1.0 - v) * v, 1.0);","}"].join("\n")}),n.addPass(n.shader),n}(this.renderer))}onAnimationTick(){const{camera:t,clock:e,composer:i,dom:n,fps:A,renderer:r,scene:s}=this,a={delta:Math.min(e.getDelta(),1/30),time:e.oldTime/1e3};s.onAnimationTick(a),i?(i.renderPass.camera=t,i.renderPass.scene=s,i.render()):r.render(s,t),A.count+=1,a.time>=A.lastTick+1&&(r.fps=Math.round(A.count/(a.time-A.lastTick)),n.fps.innerText=`${r.fps}fps`,A.lastTick=a.time,A.count=0)}onResize(){const{camera:t,composer:e,dom:i,renderer:n}=this,{width:A,height:r}=i.renderer.getBoundingClientRect();n.setSize(A,r),e&&(e.setSize(A,r),n.getDrawingBufferSize(e.shader.uniforms.resolution.value)),t.aspect=A/r,t.updateProjectionMatrix()}static patchFog(){Ii.fog_pars_vertex=Ii.fog_pars_vertex.replace("varying float fogDepth;","varying vec3 fogPosition;"),Ii.fog_vertex=Ii.fog_vertex.replace("fogDepth = - mvPosition.z;","fogPosition = - mvPosition.xyz;"),Ii.fog_pars_fragment=Ii.fog_pars_fragment.replace("varying float fogDepth;","varying vec3 fogPosition;"),Ii.fog_fragment=Ii.fog_fragment.replace("#ifdef USE_FOG",["#ifdef USE_FOG","  float fogDepth = length(fogPosition);"].join("\n"))}}po.patchFog();const mo=new po({dom:{cursor:document.getElementById("cursor"),fps:document.getElementById("fps"),renderer:document.getElementById("renderer")},postprocessing:!navigator.userAgent.includes("Mobile")});mo.scene=new class extends NA{constructor(){super(),this.background=new ve(662058),this.fog=new RA(this.background,.02),this.player=new io({camera:mo.camera,dom:mo.dom}),this.player.position.set(0,0,0),this.add(this.player),this.world=new eo,this.add(this.world)}onAnimationTick(t){const{player:e,world:i}=this;e.onAnimationTick(t),i.updateChunks(e.position)}}}();
